%!PS-Adobe-3.0
%%Creator: Basser Lout Version 3.40 (June 2013)
%%CreationDate: Wed Sep  6 21:38:22 2017
%%DocumentData: Binary
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentMedia: A4 595 842 0 white ()
%%PageOrder: Ascend
%%LanguageLevel: 2
%%Pages: (atend)
%%BoundingBox: 0 0 595 842
%%EndComments
%%BeginProlog
%%BeginResource: procset LoutStartUp
/cp_x 0 def
/cp_y 0 def
/louts 0 def
/loutv 0 def
/loutf 0 def
/ymark 0 def
/xmark 0 def
/ysize 0 def
/xsize 0 def
/save_cp { currentpoint /cp_y exch def /cp_x exch def } bind def
/restore_cp { cp_x cp_y moveto } bind def
/outline { gsave 1 1 1 setrgbcolor dup show save_cp
  grestore true charpath stroke restore_cp } bind def
/m  { 3 1 roll moveto show } bind def
/mo { 3 1 roll moveto outline } bind def
/s  { exch currentpoint exch pop moveto show } bind def
/so { exch currentpoint exch pop moveto outline } bind def
/k  { exch neg 0 rmoveto show } bind def
/ko { exch neg 0 rmoveto outline } bind def
/r  { exch 0 rmoveto show } bind def
/ro { exch 0 rmoveto outline } bind def
/c  { gsave 3 1 roll rmoveto show grestore } bind def
/co { gsave 3 1 roll rmoveto outline grestore } bind def
/ul { gsave setlinewidth dup 3 1 roll
      moveto lineto stroke grestore } bind def
/in { 1440 mul } bind def
/cm { 567 mul } bind def
/pt { 20 mul } bind def
/em { 120 mul } bind def
/sp { louts mul } def
/vs { loutv mul } def
/ft { loutf mul } def
/dg {           } def

/LoutGraphic {
  /louts exch def
  /loutv exch def
  /loutf exch def
  /ymark exch def
  /xmark exch def
  /ysize exch def
  /xsize exch def
} def

/LoutGr2 { gsave translate LoutGraphic gsave } def

/LoutFont
{ findfont exch scalefont setfont
} bind def

/LoutRecode {
  { findfont dup length dict begin
    {1 index /FID ne {def} {pop pop} ifelse} forall
    /Encoding exch def
    currentdict end definefont pop
  }
  stopped pop
} bind def

/PreEPSF_state 0 def
/dict_stack 0 def
/ops_count 0 def
/LoutStartEPSF { % prepare for EPSF inclusion
  /PreEPSF_state save def
  /dict_stack countdictstack def
  /ops_count count 1 sub def
  20 dict begin
  /showpage {} def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [] 0 setdash newpath
  /languagelevel where
  { pop languagelevel
    1 ne
    { false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/LoutEPSFCleanUp { % clean up after EPSF inclusion
  count ops_count sub { pop } repeat
  countdictstack dict_stack sub { end } repeat
  PreEPSF_state restore
} bind def

% Find current texture (may be null)
% - LoutCurrentP p
/LoutCurrentP
{
  currentcolorspace
  0 get /Pattern eq
  {
    [ currentcolor ]
    dup length 1 sub get
  }
  {
    null
  } ifelse
} def

% Find current color and color space
% - LoutCurrentCCS c cs
/LoutCurrentCCS
{
  LoutCurrentP dup null eq
  {
    pop [ currentcolor ]
    currentcolorspace
  }
  {
    dup
    /UnderlyingColor get
    exch /UnderlyingColorSpace get
  } ifelse
} def

% Install c, cs, and (a copy of) p into graphics state
% c cs p LoutSetCCSP -
/LoutSetCCSP
{
  dup null eq
  {
    pop setcolorspace
    aload pop setcolor
  }
  {
    % copy pattern dictionary
    12 dict copy

    % record cs and c in p
    dup /UnderlyingColorSpace 3 index
    put
    dup /UnderlyingColor 4 index
    put

    % do setcolorspace and setcolor
    dup /PaintType get 1 eq
    {
      [ /Pattern ] setcolorspace
      setcolor
      pop pop
    }
    {
      [ /Pattern
      4 -1 roll
      ] setcolorspace
      exch aload length 1 add
      -1 roll
      setcolor
    } ifelse
  } ifelse
} bind def

% num LoutSetGray -
/LoutSetGray
{
  [ 2 1 roll ]
  [ /DeviceGray ]
  LoutCurrentP
  LoutSetCCSP
} bind def

% r g b LoutSetRGBColor -
/LoutSetRGBColor
{
  [ 4 1 roll ]
  [ /DeviceRGB ]
  LoutCurrentP
  LoutSetCCSP
} bind def

% h s b LoutSetHSBColor -
/LoutSetHSBColor
{
  gsave sethsbcolor
  currentrgbcolor grestore
  LoutSetRGBColor
} bind def

% c m y k LoutSetRGBColor -
/LoutSetCMYKColor
{
  [ 5 1 roll ]
  [ /DeviceCMYK ]
  LoutCurrentP
  LoutSetCCSP
} bind def

% p LoutSetTexture -
/LoutSetTexture
{
  LoutCurrentCCS
  3 -1 roll
  LoutSetCCSP
} bind def

% <scale > <scalex> <scaley> <rotate> <hshift> <vshift>
% <painttype> <bbox> <xstep> <ystep> <paintproc> LoutMakeTexture p
/LoutMakeTexture
{
  12 dict begin
  /PaintProc exch def
  /YStep exch def
  /XStep exch def
  /BBox exch def
  /PaintType exch def
  /PatternType 1 def
  /TilingType 1 def
  currentdict end
  7 1 roll
  matrix translate
  5 1 roll
  matrix rotate
  4 1 roll
  matrix scale
  exch dup matrix scale
  matrix concatmatrix
  matrix concatmatrix
  matrix concatmatrix
  /makepattern where
  {
    pop makepattern
  }
  {
    pop pop null
  } ifelse
} bind def

/LoutTextureSolid
{
  null
  LoutSetTexture
} bind def
%%EndResource

%%BeginResource: procset LoutDiagPrependGraphic
% @PrependGraphic file /home/arnau/lout.lib/include/diagf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Diag Jeffrey H. Kingston  %
%  Version 2.0 (includes CIRCUM label)                September 1996 %
%                                                                    %
%  This file has been placed in the public domain by its author,     %
%  Jeffrey H. Kingston                                               %
%                                                                    %
%  To assist in avoiding name clashes, the names of all symbols      %
%  defined here begin with "ldiag".  However, this is not feasible   %
%  with user-defined labels and some labels used by users.           %
%                                                                    %
%  <point>      is two numbers, a point.                             %
%  <length>     is one number, a length                              %
%  <angle>      is one number, an angle in degrees                   %
%  <dashlength> is one number, the preferred length of a dash        %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup ldiagdict exch known
	 { ldiagdict exch get }
	 { 100 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 100 string cvs show
      } stopped {} if
      showpage stop
   } def
end

% begin diagram: <maxlabels> ldiagbegin -
% must be defined outside ldiagdict since it loads it
/ldiagbegin
{ xsize 0 0 ysize ldiagdict begin
  5 -1 roll /ldiagmaxlabels exch def
  (@Diag) ldiagpushtagdict
  /OOY ldiagpointdef /OOX ldiagpointdef 0 0 /OOO ldiagpointdef
} def

% end diagram: - ldiagend -
/ldiagend
{ ldiagpoptagdict end
} def

% concat strings: <string> <string> ldiagconcat <string>
% must be defined outside ldiagdict since used in ldiagpromotelabels
/ldiagconcat
{ 2 copy length exch length add string
  dup 0 4 index putinterval
  dup 3 index length 3 index putinterval
  3 1 roll pop pop
} def

% mconcat strings: <string> <string> ldiagmconcat <string>
% returns concatenation, separated by @ if first is non-empty
% must be defined outside ldiagdict since used in ldiagpromotelabels
/ldiagmconcat
{
  2 copy length exch length add 1 add string
  dup 0 4 index putinterval
  dup 3 index length (@) putinterval
  dup 3 index length 1 add 3 index putinterval
  3 1 roll pop pop
} def

% show string in format start ... end: <string> ldiagsends <string>
/ldiagsends
{
  dup length 20 string cvs (: ) ldiagconcat exch
  dup 0 20 getinterval ( ... ) ldiagconcat
  3 -1 roll exch ldiagconcat
  exch dup length 20 sub 20 getinterval ldiagconcat
} def

/ldiagdebugposy 432 def
/ldiagdebugposx 72 def

% - ldiagdebugnextline -
/ldiagdebugnextline
{
  ldiagdebugposy 72 lt
  { /ldiagdebugposx ldiagdebugposx 144 add store
    /ldiagdebugposy 432 store
  }
  {
    /ldiagdebugposy ldiagdebugposy 12 sub store
  } ifelse
  ldiagdebugposx ldiagdebugposy moveto
} def

% - ldiagdebugbeginindent -
/ldiagdebugbeginindent
{
  /ldiagdebugposx ldiagdebugposx 12 add store
} def

% - ldiagdebugendindent -
/ldiagdebugendindent
{
  /ldiagdebugposx ldiagdebugposx 12 sub store
} def

% <string> <int> ldiagdebugprint -
% must be defined outside ldiagdict since used in arbitrary places
% print <string> plus count or <int> stack entries, whichever is the smaller
/ldiagdebugprint
{
  exch
  gsave
  initgraphics
  ldiagdebugnextline
  /Times-Roman findfont 10 scalefont setfont
  0 setgray show
  ldiagdebugbeginindent
  count 1 sub 2 copy lt { pop } { exch pop } ifelse 1 sub
  0 exch 1 exch
  {
    ldiagdebugnextline
    index
    dup type (dicttype) eq
    {
      (begin dict) show
      ldiagdebugbeginindent
      {
	ldiagdebugnextline
	pop 100 string cvs show
      } forall
      ldiagdebugendindent
      ldiagdebugnextline
      (end dict) show
    }
    {
      dup type (arraytype) eq
      {
        (begin array) show
        ldiagdebugbeginindent
	{
	  ldiagdebugnextline
	  100 string cvs show
	} forall
	ldiagdebugendindent
	ldiagdebugnextline
        (end array) show
      }
      {
        100 string cvs show
      } ifelse
    } ifelse
  } for
  ldiagdebugendindent
  grestore
} def

/ldiagdict 200 dict def
ldiagdict begin

% error messages
/dictfull (dictfull error:  too many labels?) def
/dictstackoverflow (dictstackoverflow error:  labels nested too deeply?) def
/execstackoverflow (execstackoverflow error:  figure nested too deeply?) def
/limitcheck (limitcheck error:  figure nested too deeply or too large?) def
/syntaxerror (syntaxerror error:  syntax error in text of figure?) def
/typecheck (typecheck error:  syntax error in text of figure?) def
/undefined (undefined error:  unknown or misspelt label?) def
/VMError (VMError error:  run out of memory?) def

% push pi onto stack:  - ldiagpi <num>
/ldiagpi 3.14159 def

% push e onto stack:  - ldiage <num>
/ldiage 2.71828 def

% arc directions
/clockwise     false def
/anticlockwise true  def

% test equality between two angles:  <angle> <angle> ldiagangleeq <bool>
/ldiagangleeq { ldiagfixangle exch ldiagfixangle eq } def

% test inequality between two angles:  <angle> <angle> ldiaganglene <bool>
/ldiaganglene { ldiagangleeq not } def

% maximum of two numbers:  <num> <num> ldiagmax <num>
/ldiagmax { 2 copy gt { pop } { exch pop } ifelse } def

% minimum of two numbers:  <num> <num> ldiagmin <num>
/ldiagmin { 2 copy lt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> ldiagpadd <point>
/ldiagpadd
{
  % (Entering padd) 4 ldiagdebugprint
  exch 3 1 roll add 3 1 roll add exch
  % (Leaving padd) 2 ldiagdebugprint
} def

% subtract first point from second:  <point> <point> ldiagpsub <point>
/ldiagpsub { 3 2 roll sub 3 1 roll exch sub exch } def

% max two points:  <point> <point> ldiagpmax <point>
/ldiagpmax { exch 3 1 roll ldiagmax 3 1 roll ldiagmax exch } def

% min two points:  <point> <point> ldiagpmin <point>
/ldiagpmin { exch 3 1 roll ldiagmin 3 1 roll ldiagmin exch } def

% scalar multiplication: <point> <num> ldiagpmul <point>
/ldiagpmul { dup 3 1 roll mul 3 1 roll mul exch } def

% point at angle and distance:  <point> <length> <angle> ldiagatangle <point>
/ldiagatangle { 2 copy cos mul 3 1 roll sin mul ldiagpadd } def

% angle from one point to another:  <point> <point> ldiagangleto <angle>
/ldiagangleto { ldiagpsub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse } def

% distance between two points:  <point> <point> ldiagdistance <length>
/ldiagdistance { ldiagpsub dup mul exch dup mul add sqrt } def

% stroke a noline line:  <length> <dashlength> ldiagnoline -
/ldiagnoline
{ pop pop
} def

% stroke a solid line:  <length> <dashlength> ldiagsolid -
/ldiagsolid
{  pop pop [] 0 setdash 1 setlinecap stroke
} def

% stroke a dashed line:   <length> <dashlength> ldiagdashed -
/ldiagdashed
{  2 copy div 2 le 1 index 0 le or
   {  exch pop 1 pt ldiagmax [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse 0 setlinecap stroke
} def

% stroke a cdashed line:  <length> <dashlength> ldiagcdashed -
/ldiagcdashed
{  % (Entering ldiagcdashed) 2 ldiagdebugprint
   2 copy le 1 index 0 le or
   { exch pop 1 pt ldiagmax [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse 0 setlinecap stroke
   % (Leaving ldiagcdashed) 0 ldiagdebugprint
} def

% stroke a dotted line:  <length> <dashlength> ldiagdotted -
/ldiagdotted
{  2 copy le 1 index 0 le or
   { exch pop 1 pt ldiagmax [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div
     [ 0 3 2 roll ] 0 setdash
   } ifelse 1 setlinecap stroke
} def

% scale array elements by factor:  <array> <factor> ldiagscalearray <array>
/ldiagscalearray
{
  [ exch 3 2 roll
  { exch dup 3 1 roll mul exch } forall
  pop ]
} def

% sum array elements:  <array> ldiagsumarray <number>
/ldiagsumarray
{
  0 exch { add } forall
} def

% begin a more complex line: <length> <dashlength> ldiaglinebegin -
/ldiaglinebegin
{
  % (Entering ldiaglinebegin) 2 ldiagdebugprint
  20 dict begin
  /dashlen exch 1 pt ldiagmax def
  /len exch def
  /gap dashlen def
  /halfgap dashlen 2 div def
  /dash dashlen def
  /halfdash dashlen 2 div def
  /dot 0 def
  % (Leaving ldiaglinebegin) 0 ldiagdebugprint
} def

% end a more complex line: <linecap> <cycle> <startpos> <stoppos> ldiaglineend -
/ldiaglineend
{
  % (Entering ldiaglineend) 3 ldiagdebugprint
  /stoppos exch def
  /startpos exch def
  /cycle exch def
  /linecap exch def
  /stopposlen stoppos ldiagsumarray def
  /startposlen startpos ldiagsumarray def
  /cyclelen cycle ldiagsumarray def
  /effectivelen len startposlen add stopposlen sub def
  effectivelen 0 gt cyclelen 0 gt and
  {
    /repeats effectivelen cyclelen div ceiling def
    /factor len repeats cyclelen mul startposlen sub stopposlen add div def
    cycle factor ldiagscalearray startposlen factor mul setdash
    linecap setlinecap stroke
  } if
  end
  % (Leaving ldiaglineend) 0 ldiagdebugprint
} def

% stroke a dotdashed line: <length> <dashlength> ldiagdotdashed -
/ldiagdotdashed
{
  ldiaglinebegin
  1 [dash gap dot gap] [] [dash]
  ldiaglineend
} def

% stroke a dotcdashed line: <length> <dashlength> ldiagdotcdashed -
/ldiagdotcdashed
{
  ldiaglinebegin
  1 [dash gap dot gap] [halfdash] [halfdash]
  ldiaglineend
} def

% stroke a dotdotdashed line: <length> <dashlength> ldiagdotdotdashed -
/ldiagdotdotdashed
{
  ldiaglinebegin
  1 [dash gap dot gap dot gap] [] [dash]
  ldiaglineend
} def

% stroke a dotdotcdashed line: <length> <dashlength> ldiagdotdotcdashed -
/ldiagdotdotcdashed
{
  ldiaglinebegin
  1 [dash gap dot gap dot gap] [halfdash] [halfdash]
  ldiaglineend
} def

% stroke a dotdotdotdashed line: <length> <dashlength> ldiagdotdotdotdashed -
/ldiagdotdotdotdashed
{
  ldiaglinebegin
  1 [dash gap dot gap dot gap dot gap] [] [dash]
  ldiaglineend
} def

% stroke a dotdotdotcdashed line: <length> <dashlength> ldiagdotdotdotcdashed -
/ldiagdotdotdotcdashed
{
  ldiaglinebegin
  1 [dash gap dot gap dot gap dot gap] [halfdash] [halfdash]
  ldiaglineend
} def

% shape and labels of the @Box symbol
% ldiagbox <shape>
/ldiagbox
{
   0     0         /SW  ldiagpointdef
   xsize 0         /SE  ldiagpointdef
   xsize ysize     /NE  ldiagpointdef
   0     ysize     /NW  ldiagpointdef

   xsize 0.25 mul ysize /NNW ldiagpointdef
   xsize 0.75 mul ysize /NNE ldiagpointdef
   xsize 0.25 mul     0 /SSW ldiagpointdef
   xsize 0.75 mul     0 /SSE ldiagpointdef

   SE 0.5 ldiagpmul /S   ldiagpointdef
   NW 0.5 ldiagpmul /W   ldiagpointdef
   W SE ldiagpadd   /E   ldiagpointdef
   S NW ldiagpadd   /N   ldiagpointdef

   NE 0.5 ldiagpmul /CTR ldiagpointdef

     0 dg /SSW@ANGLE  ldiagangledef
     0 dg /S@ANGLE    ldiagangledef
     0 dg /SSE@ANGLE  ldiagangledef
    45 dg /SE@ANGLE   ldiagangledef
    90 dg /E@ANGLE    ldiagangledef
   135 dg /NE@ANGLE   ldiagangledef
   180 dg /NNE@ANGLE  ldiagangledef
   180 dg /N@ANGLE    ldiagangledef
   180 dg /NNW@ANGLE  ldiagangledef
   225 dg /NW@ANGLE   ldiagangledef
   270 dg /W@ANGLE    ldiagangledef
   315 dg /SW@ANGLE   ldiagangledef

   [ CTR NE ldiagpsub /ldiagboxcircum cvx ] ldiagcircumdef
   SW SE NE NW SW
} def

% shape and labels of the @CurveBox symbol
% <margin> ldiagcurvebox <shape>
/ldiagcurvebox
{  

   % (Entering ldiagcurvebox) 1 ldiagdebugprint
   ldiagdecodelength /cbmgn exch def

   xsize 0.5 mul	ysize 0.5 mul	/CTR ldiagpointdef
   xsize 0.5 mul	0		/S   ldiagpointdef
   xsize		ysize 0.5 mul	/E   ldiagpointdef
   xsize 0.5 mul	ysize		/N   ldiagpointdef
   0			ysize 0.5 mul	/W   ldiagpointdef

   cbmgn 0.293 mul		cbmgn 0.293 mul		  /SW  ldiagpointdef
   xsize cbmgn 0.293 mul sub	cbmgn 0.293 mul		  /SE  ldiagpointdef
   xsize cbmgn 0.293 mul sub	ysize cbmgn 0.293 mul sub /NE  ldiagpointdef
   cbmgn 0.293 mul		ysize cbmgn 0.293 mul sub /NW  ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ xsize ysize 0.5 ldiagpmul cbmgn /ldiagcurveboxcircum cvx ] ldiagcircumdef

   cbmgn		0
   xsize cbmgn sub	0
   [ xsize cbmgn sub	cbmgn		]
   xsize		cbmgn
   xsize		ysize cbmgn sub
   [ xsize cbmgn sub	ysize cbmgn sub	]
   xsize cbmgn sub	ysize
   cbmgn		ysize
   [ cbmgn		ysize cbmgn sub	]
   0			ysize cbmgn sub
   0			cbmgn
   [ cbmgn		cbmgn		]
   cbmgn		0

   % (Leaving ldiagcurvebox) 0 ldiagdebugprint
} def

% shadow of the @ShadowBox symbol
% its shape and labels are done, somewhat inaccurately, with ldiagbox
% <shadowmargin> ldiagshadow -
/ldiagshadow
{ 
  /lfshm exch def
  
  lfshm 0 moveto
  0 lfshm neg rlineto
  xsize 0 rlineto
  0 ysize rlineto
  lfshm neg 0 rlineto
  xsize 0 lineto
  closepath fill

} def

% shape and labels of the @Square symbol
/ldiagsquare
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   CTR xsize xsize ysize ysize ldiagpmax 0.5 ldiagpmul ldiagpadd /NE ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 135 ldiagatangle ldiagpadd /NW ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 225 ldiagatangle ldiagpadd /SW ldiagpointdef
   CTR 0 0 CTR NE ldiagdistance 315 ldiagatangle ldiagpadd /SE ldiagpointdef
   SW 0.5 ldiagpmul SE 0.5 ldiagpmul ldiagpadd /S ldiagpointdef
   NW 0.5 ldiagpmul NE 0.5 ldiagpmul ldiagpadd /N ldiagpointdef
   SW 0.5 ldiagpmul NW 0.5 ldiagpmul ldiagpadd /W ldiagpointdef
   SE 0.5 ldiagpmul NE 0.5 ldiagpmul ldiagpadd /E ldiagpointdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   [ CTR NE ldiagpsub /ldiagboxcircum cvx ] ldiagcircumdef
   SW SE NE NW SW
} def

% shape and labels of the @Diamond symbol
/ldiagdiamond
{
   xsize 0 0.5 ldiagpmul /S   ldiagpointdef
   0 ysize 0.5 ldiagpmul /W   ldiagpointdef
   S W         ldiagpadd /CTR ldiagpointdef
   CTR W       ldiagpadd /N   ldiagpointdef
   CTR S       ldiagpadd /E   ldiagpointdef
   E N ldiagpadd 0.5 ldiagpmul /NE ldiagpointdef
   N W ldiagpadd 0.5 ldiagpmul /NW ldiagpointdef
   S W ldiagpadd 0.5 ldiagpmul /SW ldiagpointdef
   S E ldiagpadd 0.5 ldiagpmul /SE ldiagpointdef

     0 dg        /S@ANGLE  ldiagangledef
    90 dg        /E@ANGLE  ldiagangledef
   180 dg        /N@ANGLE  ldiagangledef
   270 dg        /W@ANGLE  ldiagangledef
   S E ldiagangleto /SE@ANGLE ldiagangledef
   E N ldiagangleto /NE@ANGLE ldiagangledef
   N W ldiagangleto /NW@ANGLE ldiagangledef
   W S ldiagangleto /SW@ANGLE ldiagangledef

   [ xsize ysize 0.5 ldiagpmul /ldiagdiamondcircum cvx ] ldiagcircumdef
   S E N W S
} def

% shape and labels of the @Ellipse symbol
/ldiagellipse
{
   xsize 0 0.5 ldiagpmul /S   ldiagpointdef
   0 ysize 0.5 ldiagpmul /W   ldiagpointdef
   S W         ldiagpadd /CTR ldiagpointdef
   CTR W       ldiagpadd /N   ldiagpointdef
   CTR S       ldiagpadd /E   ldiagpointdef
   CTR xsize 0 0.3536 ldiagpmul ldiagpadd 0 ysize 0.3536 ldiagpmul ldiagpadd /NE ldiagpointdef
   0 ysize 0.3536 ldiagpmul CTR xsize 0 0.3536 ldiagpmul ldiagpadd ldiagpsub /SE ldiagpointdef
   xsize 0 0.3536 ldiagpmul CTR ldiagpsub 0 ysize 0.3536 ldiagpmul ldiagpadd /NW ldiagpointdef
   0 ysize 0.3536 ldiagpmul xsize 0 0.3536 ldiagpmul CTR ldiagpsub ldiagpsub /SW ldiagpointdef
   [ xsize ysize 0.5 ldiagpmul /ldiagellipsecircum cvx ] ldiagcircumdef

     0 dg /S@ANGLE  ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   270 dg /W@ANGLE  ldiagangledef

   S E ldiagangleto /SE@ANGLE ldiagangledef
   E N ldiagangleto /NE@ANGLE ldiagangledef
   N W ldiagangleto /NW@ANGLE ldiagangledef
   W S ldiagangleto /SW@ANGLE ldiagangledef

   S [ CTR ] E [ CTR ] N [ CTR ] W [ CTR ] S
} def

% shape and labels of the @Circle symbol
/ldiagcircle
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   CTR xsize 0 ysize 0 ldiagpmax 0.5 ldiagpmul ldiagpadd /E ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 45 ldiagatangle ldiagpadd /NE ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 90 ldiagatangle ldiagpadd /N ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 135 ldiagatangle ldiagpadd /NW ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 180 ldiagatangle ldiagpadd /W ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 225 ldiagatangle ldiagpadd /SW ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 270 ldiagatangle ldiagpadd /S ldiagpointdef
   CTR 0 0 CTR E ldiagdistance 315 ldiagatangle ldiagpadd /SE ldiagpointdef
   [ S E ldiagpsub /ldiagellipsecircum cvx ] ldiagcircumdef

     0 dg /S@ANGLE  ldiagangledef
    45 dg /SE@ANGLE ldiagangledef
    90 dg /E@ANGLE  ldiagangledef
   135 dg /NE@ANGLE ldiagangledef
   180 dg /N@ANGLE  ldiagangledef
   225 dg /NW@ANGLE ldiagangledef
   270 dg /W@ANGLE  ldiagangledef
   315 dg /SW@ANGLE ldiagangledef

   S [ CTR ] E [ CTR ] N [ CTR ] W [ CTR ] S
} def

% shape and labels of the @VLine and @VArrow symbols
/ldiagvline
{
   xmark ysize ldiagprevious /FROM ldiagpointdef
   xmark 0 ldiagprevious /TO ldiagpointdef
} def

% points of a polygon around base with given no of sides, vert init angle:
% <sides> <angle> ldiagpolygon <point> ... <point>
/ldiagpolygon
{  exch round cvi exch
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   90 sub CTR 2 copy ldiagmax 5 3 roll
   [ 4 copy pop /ldiagpolycircum cvx ] ldiagcircumdef
   exch dup 360 exch div exch
   1 1  3 2 roll
   {  4 string cvs (P) exch ldiagconcat
      3 copy exch pop (@ANGLE) ldiagconcat cvn exch 90 add exch ldiagangledef
      cvn 6 copy pop pop ldiagatangle 2 copy 10 2 roll
      3 2 roll ldiagpointdef
      dup 3 1 roll add exch
   }  for
   pop ldiagatangle
} def

% shape and labels of the @Isosceles triangle symbol
/ldiagisosceles
{
   xsize ysize 0.5 ldiagpmul /CTR ldiagpointdef
   0     0                   /SW  ldiagpointdef
   xsize 0                   /SE  ldiagpointdef
   xsize 0.5 mul ysize       /N   ldiagpointdef
   xsize 0.5 mul 0           /S   ldiagpointdef
   SE 0.5 ldiagpmul N 0.5 ldiagpmul ldiagpadd /NE ldiagpointdef
   SW 0.5 ldiagpmul N 0.5 ldiagpmul ldiagpadd /NW ldiagpointdef

   [ xsize ysize /ldiagisoscelescircum cvx ] ldiagcircumdef

     0 dg              /SW@ANGLE ldiagangledef
     0 dg              /SE@ANGLE ldiagangledef
   180 dg              /N@ANGLE  ldiagangledef
     0 dg              /S@ANGLE  ldiagangledef
     SE N ldiagangleto /NE@ANGLE ldiagangledef
     N SW ldiagangleto /NW@ANGLE ldiagangledef

   SW SE N SW
} def

% next array element:  <array> <index> ldiaggetnext <array> <index> <any> true
%                                               or <array> <index> false
/ldiaggetnext
{  2 copy exch length ge
   { false }
   { 2 copy get exch 1 add exch true } ifelse
} def

% check whether thing is number:  <any> ldiagisnumbertype <any> <bool>
/ldiagisnumbertype
{  dup type dup
   /integertype eq exch /realtype eq or
} def

% check whether thing is an array:  <any> ldiagisarraytype <any> <bool>
/ldiagisarraytype { dup type /arraytype eq } def

% check whether thing is an array:  <any> ldiagisnametype <any> <bool>
/ldiagisnametype { dup type /nametype eq } def

% get next item:  <array> <index> ldiaggetnextitem <array> <index> 0
%                                              or <array> <index> <array> 1
%                                              or <array> <index> <point> 2
/ldiaggetnextitem
{   ldiaggetnext
    {	ldiagisarraytype
	{   1
	}
	{   ldiagisnumbertype
	    {	3 1 roll
		ldiaggetnext
		{   ldiagisnumbertype
		    {	4 3 roll exch  2
		    }
		    {	pop 3 2 roll pop  0
		    } ifelse
		}
		{   3 2 roll pop  0
		} ifelse
	    }
	    {	pop 0
	    } ifelse
	} ifelse
    }
    {	0
    } ifelse
} def

% approximate equality: num1 num2  approxeq  <boolean>
/approxeq
{ dup 0 eq
  { pop 0 eq
  }
  { dup 3 1 roll sub exch div abs 0.001 lt
  } ifelse
} def

% set arc path:  bool x1 y1  x2 y2  x0 y0  ldiagsetarc  <angle> <angle> <dist>
% the path goes from x1 y1 to x2 y2 about centre x0 y0,
% anticlockwise if bool is true else clockwise.
% The orientations of backwards pointing and forwards pointing
% arrowheads are returned in the two angles, and
% the length of the arc is returned in <dist>.
/ldiagsetarc
{
  % (Entering ldiagsetarc) 7 ldiagdebugprint
  20 dict begin
     matrix currentmatrix 8 1 roll
     2 copy translate 2 copy 8 2 roll
     4 2 roll ldiagpsub 6 2 roll ldiagpsub
     dup /y1 exch def dup mul /y1s exch def
     dup /x1 exch def dup mul /x1s exch def
     dup /y2 exch def dup mul /y2s exch def
     dup /x2 exch def dup mul /x2s exch def
     /dist1 0 0 x1 y1 ldiagdistance def
     /dist2 0 0 x2 y2 ldiagdistance def

     y1s y2s approxeq
     {	-1
     }
     {	y1s x2s mul y2s x1s mul sub y1s y2s sub div
     } ifelse
     /da exch def

     x1s x2s approxeq
     {	-1
     }
     {	x1s y2s mul x2s y1s mul sub x1s x2s sub div
     } ifelse
     /db exch def

     da 0 gt db 0 gt and
     {
	% (  case 1, ellipse) 0 ldiagdebugprint
	/LMax da sqrt db sqrt ldiagmax def
	/scalex da sqrt LMax div def
	/scaley db sqrt LMax div def
	scalex scaley scale
	0 0 LMax
	0 0 x1 scalex mul y1 scaley mul ldiagangleto
	0 0 x2 scalex mul y2 scaley mul ldiagangleto
	2 copy eq { 360 add } if
	2 copy 8 2 roll
	5 index { arc } { arcn } ifelse
	2 index 1 index
	{ 90 sub } { 90 add } ifelse
	dup sin scaley mul exch cos scalex mul atan
	2 index 2 index
	{ 90 add } { 90 sub } ifelse
	dup sin scaley mul exch cos scalex mul atan
	5 2 roll  % res1 res2 ang1 ang2 anticlockwise
	{ exch sub } { sub } ifelse
	dup 0 le { 360 add } if  ldiagpi mul LMax mul 180 div
     }
     {
	dist1 dist2 approxeq
	% x1 y1 dist1 (  x1 y1, d) 3 ldiagdebugprint pop pop pop
	% x2 y2 dist2 (  x2 y2, d) 3 ldiagdebugprint pop pop pop
	{
		% (  case 2, circle) 0 ldiagdebugprint
		0 0
		dist1
		0 0 x1 y1 ldiagangleto
		0 0 x2 y2 ldiagangleto
		2 copy eq { 360 add } if
		2 copy 8 2 roll
		5 index { arc } { arcn } ifelse
		2 index 1 index
		{ 90 sub } { 90 add } ifelse
		2 index 2 index
		{ 90 add } { 90 sub } ifelse
		5 2 roll % res1 res2 ang1 ang2 clockwise
		{ exch sub } { sub } ifelse
		dup 0 le { 360 add } if
		ldiagpi mul dist1 mul 180 div
	}
	{
		% (  case 3, line) 0 ldiagdebugprint
		x2 y2 lineto pop
		x2 y2 x1 y1 ldiagangleto
		x1 y1 x2 y2 ldiagangleto
		x1 y1 x2 y2 ldiagdistance
	} ifelse
     } ifelse
     4 -1 roll setmatrix
     end
  % (Leaving ldiagsetarc) 3 ldiagdebugprint
} def

% ldiagsetcurve: set up a Bezier curve from x0 y0 to x3 y3
% and return arrowhead angles and length of curve (actually 0)
% x0 y0 x1 y1 x2 y2 x3 y3 ldiagsetcurve <angle> <angle> <length>
/ldiagsetcurve
{ 8 copy curveto pop pop
  ldiagangleto
  5 1 roll
  4 2 roll ldiagangleto
  exch
  0
} def

% ldiagsetpath: convert a Diag path into a PostScript path
% [ shape ] ldiagsetpath -
/ldiagsetpath
{
  10 dict begin
    0 newpath
    /prevseen false def
    /curveseen false def
    { ldiaggetnextitem
      dup 0 eq { pop exit }
      { 1 eq
        { /curveseen true def
	  /curve exch def
	  curve length 0 eq { /curveseen false def } if
        }
        { /ycurr exch def
	  /xcurr exch def
	  prevseen
	  { curveseen
	    { curve length 4 eq
	      { xprev yprev
		curve 0 get curve 1 get
		curve 2 get curve 3 get
		xcurr ycurr
		ldiagsetcurve pop pop pop
	      }
	      { xprev yprev xcurr ycurr
	        curve length 1 ge { curve 0 get } { 0 } ifelse
	        curve length 2 ge { curve 1 get } { 0 } ifelse
	        curve length 3 ge { curve 2 get } { true } ifelse
	        7 1 roll
	        ldiagsetarc pop pop pop
	      } ifelse
	    }
	    { xcurr ycurr lineto
	    } ifelse
	  }
	  { xcurr ycurr moveto
	  } ifelse
	  /xprev xcurr def
	  /yprev ycurr def
	  /prevseen true def
	  /curveseen false def
        } ifelse
      } ifelse
    } loop pop pop
  end
} def

% ldiagpaintpath: paint a path of the given shape
% /paint [ shape ] ldiagpaintpath -
/ldiagpaintpath
{
  ldiagsetpath cvx exec
} def

% stroke a path of the given shape in the given linestyle and dash length.
% Return the origin and angle of the backward and forward arrow heads.
% dashlength /linestyle [shape] ldiagdopath  [<point> <angle>] [<point> <angle>] 
/ldiagdopath
{
  10 dict begin
    0
    /prevseen  false def
    /curveseen false def
    /backarrow []    def
    /fwdarrow  []    def
    {
	ldiaggetnextitem
	dup 0 eq { pop exit }
	{
	    1 eq
	    {	/curveseen true def
		/curve exch def
		curve length 0 eq { /prevseen false def } if
	    }
	    {	/ycurr exch def
		/xcurr exch def
		prevseen
		{   newpath xprev yprev moveto
		    curveseen
		    {	curve length 4 eq
			{   xprev yprev
			    curve 0 get curve 1 get
			    curve 2 get curve 3 get
			    xcurr ycurr ldiagsetcurve
			}
			{   xprev yprev xcurr ycurr
			    curve length 1 ge { curve 0 get } { 0 } ifelse
			    curve length 2 ge { curve 1 get } { 0 } ifelse
			    curve length 3 ge { curve 2 get } { true } ifelse
			    7 1 roll
			    ldiagsetarc
			} ifelse
		    }
		    {	xcurr ycurr lineto
			xcurr ycurr xprev yprev ldiagangleto dup 180 sub
			xprev yprev xcurr ycurr ldiagdistance
		    } ifelse
		    6 index 6 index cvx exec
		    [ xprev yprev 5 -1 roll ]
		    backarrow length 0 eq
		    { /backarrow exch def }
		    { pop } ifelse
		    [ xcurr ycurr 4 -1 roll ] /fwdarrow exch def
		} if
		/xprev xcurr def
		/yprev ycurr def
		/prevseen true def
		/curveseen false def
	    } ifelse
	} ifelse
    } loop
    pop pop pop pop
    backarrow length 0 eq { [ 0 0 0 ] } { backarrow } ifelse
    fwdarrow  length 0 eq { [ 0 0 0 ] } { fwdarrow  } ifelse
  end
} def


% stroke a path of the given shape in the given linestyle and dash length.
% dashlength [ /linestyle ] [shape] ldiagdosegpath  -
/ldiagdosegpath
{
  12 dict begin
    1 index /seg exch def
    1 index length /seglength exch def
    0 /segcount exch def
    0
    /prevseen  false def
    /curveseen false def
    /backarrow []    def
    /fwdarrow  []    def
    {
	ldiaggetnextitem
	dup 0 eq { pop exit }
	{
	    1 eq
	    {	/curveseen true def
		/curve exch def
		curve length 0 eq { /prevseen false def } if
	    }
	    {	/ycurr exch def
		/xcurr exch def
		prevseen
		{   newpath xprev yprev moveto
		    curveseen
		    {	curve length 4 eq
			{   xprev yprev
			    curve 0 get curve 1 get
			    curve 2 get curve 3 get
			    xcurr ycurr ldiagsetcurve
			}
			{   xprev yprev xcurr ycurr
			    curve length 1 ge { curve 0 get } { 0 } ifelse
			    curve length 2 ge { curve 1 get } { 0 } ifelse
			    curve length 3 ge { curve 2 get } { true } ifelse
			    7 1 roll
			    ldiagsetarc
			} ifelse
		    }
		    {	xcurr ycurr lineto
			xcurr ycurr xprev yprev ldiagangleto dup 180 sub
			xprev yprev xcurr ycurr ldiagdistance
		    } ifelse
		    6 index seg segcount seglength mod get cvx exec
		    /segcount segcount 1 add def
		    [ xprev yprev 5 -1 roll ]
		    backarrow length 0 eq
		    { /backarrow exch def }
		    { pop } ifelse
		    [ xcurr ycurr 4 -1 roll ] /fwdarrow exch def
		} if
		/xprev xcurr def
		/yprev ycurr def
		/prevseen true def
		/curveseen false def
	    } ifelse
	} ifelse
    } loop
    pop pop pop pop
  end
} def

% ldiagnodebegin: start of node parameters
% ldiagnodebegin -
/ldiagnodebegin
{ % (Entering ldiagnodebegin) 0 ldiagdebugprint
  ldiagmaxlabels dict begin 
} def

% ldiagnodeend: end of node parameters (so do the node)
% <outline> <dashlength> <style> <linewidth> <colour> <paint> ldiagnodeend -
/ldiagnodeend
{
  % (Entering ldiagnodeend) 0 ldiagdebugprint
  end % matches begin in ldiagnodebegin
  5 index gsave ldiagpaintpath grestore         % <outline> <dl> <st> <lw> <cl>
  4 index ldiagsetpath clip newpath             % <outline> <dl> <st> <lw> <cl>
  exec						% <outline> <dl> <st> <lw>
  2 mul setlinewidth                            % <outline> <dl> <st>
  3 -1 roll                                     % <dashlength> <st> <outline>
  ldiagdosegpath                                % -
  % (Leaving ldiagnodeend) 0 ldiagdebugprint
} def

% ldiaglinkbegin: start of link parameters
% <direct> ldiaglinkbegin -
/ldiaglinkbegin
{ ldiagmaxlabels dict begin 
  1 eq /direct exch def
} def

% ldiaglinkend: end of link parameters (so do the link)
% <outline> <dashlength> <style> <linewidth> ldiaglinkend -
/ldiaglinkend
{
  end % matches begin in ldiaglinkbegin
  setlinewidth
  3 -1 roll ldiagdosegpath
} def

% ldiagdoarrow: draw an arrow head of given form
% dashlength /lstyle /pstyle hfrac height width [ <point> <angle> ] ldiagdoarrow -
/ldiagdoarrow
{  matrix currentmatrix 8 1 roll
   dup 0 get 1 index 1 get translate
   2 get rotate
   [ 2 index neg 2 index 0 0
     3 index 3 index neg
     1 index 10 index mul 0
     7 index 7 index ]
   4 1 roll pop pop pop
   dup 3 1 roll
   gsave ldiagpaintpath grestore ldiagdopath pop pop
   setmatrix
} def

% arrow head styles (unused)
% /ldiagopen     0.0 def
% /ldiaghalfopen 0.5 def
% /ldiagclosed   1.0 def

% stroke no arrows, forward, back, and both
/ldiagnoarrow { pop pop pop pop pop pop pop pop                        } def
/ldiagforward { 7 -1 roll ldiagdoarrow pop                              } def
/ldiagback    { 8 -2 roll pop ldiagdoarrow                              } def
/ldiagboth    { 8 -1 roll 7 copy ldiagdoarrow pop 7 -1 roll ldiagdoarrow } def

% ldiagprevious: return previous point on path
/ldiagprevious
{ ldiagisnumbertype
  { 2 copy }
  { ldiagisarraytype
    { 2 index 2 index }
    { 0 0 }
    ifelse
  } ifelse
} def

% Tag dictionary operators
%
% Diag's tag dictionaries are kept on the same stack as other dictionaries,
% since there is nowhere else to put them.  However, they are managed like
% a separate stack using the following operators:
%
%  <tag>  ldiagpushtagdict  -      Push a new, empty tag dictionary
%         ldiagtoptagdict   dict   Find the top tag dictionary
%         ldiagpoptagdict   -      Pop and destroy the top tag dictionary
%         ldiagpopuptagdict -      Pop top tag dict and promote its entries
% <array> ldiagpopsometagdict -    Like popuptagdict but only those promote
%                                  those labels listed in <array>
%         ldiagdebugtagdict -      Debug print of dictionary stack
%
% They are distinguished from other dictionaries by containing /ldiagtagdict,
% whose value is the <tag> which is used by ldiagpopuptagdict,
% and they are hopefully never the target of any non-tag definition because
% they are never the top dictionary, since push places the new dict second.

/ldiagpushtagdict
{ ldiagmaxlabels dict dup
  currentdict end exch begin begin
  exch /ldiagtagdict exch put
} def

/ldiagtoptagdict
{ /ldiagtagdict where not
  { (Diag internal error: no tag dictionary) show stop
  } if
} def

/ldiagpoptagdict
{
  % (Entering poptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
  mark
  { currentdict end
    dup /ldiagtagdict known
    { exit
    } if
  } loop
  pop
  counttomark
  { begin
  } repeat
  pop
  % (Leaving poptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% promote labels from top tag dictionary to second top tag dictionary
% each prefixed by <string>@ if <string> (value of /ldiagtagdict) is not empty
% - ldiagpopuptagdict -
/ldiagpopuptagdict
{
  ldiagtagdict
  % (Entering ldiagpopuptagdict) 1 ldiagdebugprint
  % ldiagdebugtagdict
  ldiagtoptagdict ldiagpoptagdict ldiagtoptagdict exch
  { exch dup length string cvs
    3 index exch ldiagmconcat
    cvn exch 2 index 3 1 roll put
  } forall
  pop pop
  % (Leaving ldiagpopuptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% similar to ldiagpopuptagdict but only those inner labels that are
% present in <array> will be promoted
% <array> ldiagpopsometagdict -
/ldiagpopsometagdict
{
  ldiagtagdict
  % (Entering ldiagpopsometagdict) 1 ldiagdebugprint
  % ldiagdebugtagdict
  ldiagtoptagdict
  ldiagpoptagdict
  ldiagtoptagdict
  4 -1 roll
  { dup 3 index exch
    get
    exch 4 index
    exch ldiagmconcat exch
    3 copy put
    pop pop
  } forall
  pop pop pop
  % (Leaving ldiagpopuptagdict) 0 ldiagdebugprint
  % ldiagdebugtagdict
} def

% debug tag dictionary stack
/ldiagdebugtagdict
{ (Entering ldiagdebugtagdict) 0 ldiagdebugprint
  30 array dictstack
  { dup /ldiagtagdict known
    { dup /ldiagtagdict get 0 ldiagdebugprint
      { pop 100 string cvs (   ) exch ldiagconcat
	dup 0 ldiagdebugprint
	pop
      }
      forall
    }
    { pop (other) 0 ldiagdebugprint
    } ifelse
  } forall
  (Leaving ldiagdebugtagdict) 0 ldiagdebugprint
} def

% label a point in top tag dictionary:  <point> /name ldiagpointdef -
/ldiagpointdef
{
  % (Entering ldiagpointdef) 3 ldiagdebugprint
  [ 4 2 roll transform /itransform cvx ] cvx
  ldiagtoptagdict 3 1 roll put
  % (Leaving ldiagpointdef) 0 ldiagdebugprint
} def

% label an angle in top tag dictionary:  <angle> /name ldiagangledef -
/ldiagangledef
{
  % (Entering ldiagangledef) 2 ldiagdebugprint
  exch ldiagfixangle ldiagtoptagdict 3 1 roll put
  % (Leaving ldiagangledef) 0 ldiagdebugprint
} def

% add CIRCUM operator with this body:  <array> ldiagcircumdef -
/ldiagcircumdef
{   % (Entering ldiagcircumdef) 1 ldiagdebugprint
    /CIRCUM exch cvx
    ldiagtoptagdict 3 1 roll put
    % currentdict end
    % 3 1 roll
    % def
    % begin
    % (Leaving ldiagcircumdef) 0 ldiagdebugprint
} def

% show points (except CIRCUM and ANGLE): - ldiagshowpoints -
/ldiagshowpoints
{
  % (Entering ldiagshowpoints) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (CIRCUM) search % if CIRCUM in key
      { pop pop pop pop pop }
      { 
        (ANGLE) search % if ANGLE in key
        {
          pop pop pop pop pop
        }
        {
          (ldiagtagdict) search
          {
            pop pop pop pop pop
          }
          {
	    pop cvx exec
	    newpath 2.0 pt 0 360 arc 0 setgray fill pop
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowpoints) 0 ldiagdebugprint
} def


/ldiagshowtags
{
  % (Entering ldiagshowtags) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    % dup 0 ldiagdebugprint
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (CIRCUM) search % if CIRCUM in key
      { pop pop pop pop pop }
      { 
        (ANGLE) search % if ANGLE in key
        {
          pop pop pop pop pop
        }
        {
          (ldiagtagdict) search
          {
            pop pop pop pop pop
          }
          {
	    pop cvx exec 2 copy
	    gsave
	    newpath 2.0 pt 0 360 arc 0 setgray fill
            /Times-Roman findfont 8 pt scalefont setfont
            translate 40 rotate 0.2 cm 0.1 cm moveto 100 string cvs show
	    grestore
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowtags) 0 ldiagdebugprint
} def


% show angles: - ldiagshowangles -
/ldiagshowangles
{
  % (Entering ldiagshowangles) 0 ldiagdebugprint
  ldiagtoptagdict
  { 1 index 100 string cvs
    % dup 0 ldiagdebugprint
    (ldiagdebugpos) search
    { pop pop pop pop pop }
    {
      (ldiagtagdict) search
      {
        pop pop pop pop pop
      }
      {
        (CIRCUM) search % if CIRCUM in key
        { pop pop pop pop pop }
        { 
          (@ANGLE) search % if ANGLE in key, draw the angle at the point
          {
            % (showing ANGLE) 5 ldiagdebugprint
            gsave exch pop exch pop cvx
            % (about to execute) 1 ldiagdebugprint
            exec translate rotate 0.8 0.8 scale pop
            newpath 0 0 2.0 pt 0 360 arc 0 setgray fill
            newpath 4 pt 0 moveto 9 pt 0 lineto
            9 pt 1.5 pt lineto 11 pt 0 lineto 9 pt -1.5 pt lineto
            9 pt 0 lineto [] 0 setdash 4 pt setlinewidth 0 setlinejoin
	    stroke grestore
            % (finished ANGLE) 5 ldiagdebugprint
          }
          {
            % else must be a point, we aren't showing those
            pop pop pop
          } ifelse
        } ifelse
      } ifelse
    } ifelse
  } forall
  % (Leaving ldiagshowangles) 0 ldiagdebugprint
} def

% fix an angle to 0 <= res < 360:  <angle> ldiagfixangle <angle>
/ldiagfixangle
{
  % (Entering ldiagfixangle) 1 ldiagdebugprint
  { dup 0 ge { exit } if
    360 add
  } loop
  { dup 360 lt { exit } if
    360 sub
  } loop
  % (Leaving ldiagfixangle) 1 ldiagdebugprint
} def

% find point on circumference of box:  alpha a b ldiagboxcircum x y
/ldiagboxcircum
{
  % (Entering ldiagboxcircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    0 0 a b ldiagangleto /theta exch def

    % if alpha <= theta, return (a, a*tan(alpha))
    alpha theta le
    { a  a alpha sin mul alpha cos div }
    {
      % else if alpha <= 180 - theta, return (b*cot(alpha), b)
      alpha 180 theta sub le
      { b alpha cos mul alpha sin div  b }
      {
        % else if alpha <= 180 + theta, return (-a, -a*tan(alpha))
        alpha 180 theta add le
        { a neg  a neg alpha sin mul alpha cos div }
        {
	  % else if alpha <= 360 - theta, return (-b*cot(alpha), -b)
	  alpha 360 theta sub le
          { b neg alpha cos mul alpha sin div  b neg }
	  {
	    % else 360 - theta <= alpha, return (a, a*tan(alpha))
	    a  a alpha sin mul alpha cos div
	  } ifelse
        } ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagboxcircum) 2 ldiagdebugprint
} def

% find quadratic roots (assume a != 0): a b c ldiagqroots x1 x2 2
%                                                     or    x2 1
%                                                     or       0
/ldiagqroots
{
  4 dict begin
    /c exch def
    /b exch def
    /a exch def
    /disc b b mul 4 a c mul mul sub def
    disc 0 lt
    { 0
    }
    { disc 0 eq
      { b neg 2 a mul div
	1
      }
      { b neg disc sqrt add 2 a mul div
        b neg disc sqrt sub 2 a mul div
	2
      }
      ifelse
    }
    ifelse
  end
} def

% work our which quadrant: <angle> ldiagquadrant <0-3>
/ldiagquadrant
{ dup 90 lt
  { pop 0
  }
  { dup 180 lt
    { pop 1
    }
    { 270 lt
      { 2
      }
      { 3
      } ifelse
    } ifelse
  } ifelse
} def

% find curvebox circum, assuming upper right quadrant: alpha a b xmk ldiagcb x y
/ldiagcb
{
  6 dict begin
    /xmk exch def
    /b exch def
    /a exch def
    /alpha exch def
    /theta1 0 0 a b xmk sub ldiagangleto def
    /theta2 0 0 a xmk sub b ldiagangleto def
    alpha theta1 le
    { % if alpha <= theta1, return (a, a*tan(alpha))
      a  a alpha sin mul alpha cos div
    }
    { alpha theta2 ge
      { % else if alpha > theta2, return (b*cot(alpha), b)
	b alpha cos mul alpha sin div  b
      }
      {
	% else, return the intersection of line and circle
	a xmk sub b xmk sub xmk  0 0 alpha ldiagcircleintersect
	dup 0 eq
	{ % should never happen, just return any reasonable point
	  pop
	  a b 0.5 ldiagpmul
	}
	{ 1 eq
	  { % should never happen, just return the point on top of stack
	  }
	  { % the usual case, two points on stack, return the larger
	    ldiagpmax
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  end
} def

% find point on circumference of curvebox: alpha a b xmk ldiagcurveboxcircum x y
/ldiagcurveboxcircum
{
  % (Entering ldiagcurveboxcircum) 4 ldiagdebugprint
  5 dict begin
    /xmk exch def
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def

    % work out which quadrant we are in, and reflect accordingly
    /quad alpha ldiagquadrant def
    quad 0 eq
    { alpha a b xmk ldiagcb
    }
    { quad 1 eq
      { 180 alpha sub a b xmk ldiagcb exch neg exch
      }
      { quad 2 eq
	{ alpha 180 sub a b xmk ldiagcb neg exch neg exch
	}
	{ 360 alpha sub a b xmk ldiagcb neg
	} ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagcurveboxcircum) 2 ldiagdebugprint
} def

% find point on circumference of diamond:  alpha a b ldiagdiamondcircum x y
/ldiagdiamondcircum
{
  % (Entering ldiagdiamondcircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    b alpha cos abs mul  a alpha sin abs mul  add  /denom exch def
    a b mul alpha cos mul denom div
    a b mul alpha sin mul denom div
  end
  % (Leaving ldiagdiamondcircum) 2 ldiagdebugprint
} def

% find point on circumference of ellipse:  alpha a b ldiagellipsecircum x y
/ldiagellipsecircum
{
  % (Entering ldiagellipsecircum) 3 ldiagdebugprint
  4 dict begin
    /b exch def
    /a exch def
    ldiagfixangle /alpha exch def
    b alpha cos mul dup mul  a alpha sin mul dup mul  add sqrt /denom exch def
    a b mul alpha cos mul denom div
    a b mul alpha sin mul denom div
  end
  % (Leaving ldiagellipsecircum) 2 ldiagdebugprint
} def

% find point on circumference of isosceles:  alpha a b ldiagisoscelescircum x y
/ldiagisoscelescircum
{
  % (Entering ldiagisoscelescircum) 3 ldiagdebugprint
  7 dict begin
    /b exch def
    /a exch def
    /alpha exch ldiagfixangle def
    /theta1 90 def
    /theta2 a b 0.5 ldiagpmul 0 0 ldiagangleto def
    /theta3 a b 0.5 ldiagpmul a 0 ldiagangleto def
    alpha theta1 ge alpha theta2 le and
    { 0 0 a 2 div b
    }
    { alpha theta2 ge alpha theta3 le and
      { 0 0 a 0
      }
      { a 0 a 2 div b
      } ifelse
    } ifelse
    a 2 div b 2 div 2 copy 1 ft alpha ldiagatangle ldiaglineintersect
    a 2 div b 2 div 4 2 roll ldiagpsub
  end
  % (Leaving ldiagisoscelescircum) 2 ldiagdebugprint
} def

% find point of intersection of two lines each defined by two points
% x1 y1 x2 y2  x3 y3 x4 y4  ldiaglineintersect x y
/ldiaglineintersect
{
  % (Entering ldiaglineintersect) 8 ldiagdebugprint
  13 dict begin
    /y4 exch def
    /x4 exch def
    /y3 exch def
    /x3 exch def
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    x2 x1 sub /x21 exch def
    x4 x3 sub /x43 exch def
    y2 y1 sub /y21 exch def
    y4 y3 sub /y43 exch def
    y21 x43 mul y43 x21 mul sub /det exch def
  
    % calculate x 
    y21 x43 mul x1 mul
    y43 x21 mul x3 mul sub
    y3 y1 sub x21 mul x43 mul add
    det div

    % calculate y
    x21 y43 mul y1 mul
    x43 y21 mul y3 mul sub
    x3 x1 sub y21 mul y43 mul add
    det neg div

  end
  % (Leaving ldiaglineintersect) 2 ldiagdebugprint
} def

% find point on circumference of polygon
% alpha radius num theta ldiagpolycircum x y
/ldiagpolycircum
{
  % (Entering ldiagpolycircum) 4 ldiagdebugprint
  13 dict begin
    /theta exch def
    /num exch def
    /radius exch def
    /alpha exch def

    % calculate delta, the angle from theta to alpha
    alpha theta sub ldiagfixangle

    % calculate the angle which is the multiple of 360/num closest to delta
    360 num div div truncate 360 num div mul theta add /anglea exch def

    % calculate the next multiple of 360/num after anglea
    anglea 360 num div add /angleb exch def

    % intersect the line through these two points with the alpha line
    anglea cos anglea sin  angleb cos angleb sin
    0 0  alpha cos 2 mul alpha sin 2 mul
    ldiaglineintersect radius ldiagpmul

  end
  % (Leaving ldiagpolycircum) 2 ldiagdebugprint
} def

% find point of intersection of a line and a circle
% x0 y0 r  x1 y1 theta  ldiagcircleintersect xa ya xb yb 2
%                                        or       xb yb 1
%                                        or             0
/ldiagcircleintersect
{
  % (Entering ldiagcircleintersect) 6 ldiagdebugprint
  15 dict begin
    /theta exch def
    /y1    exch def
    /x1    exch def
    /r     exch def
    /y0    exch def
    /x0    exch def

    % if sin(theta) = 0 then line is horizontal and y must be y1
    theta sin abs 0.00001 lt
    { 
      /a 1 def
      /b -2 x0 mul def
      /c x0 dup mul y1 y0 sub dup mul add r dup mul sub def
      a b c ldiagqroots dup
      0 eq
      { pop
	0
      }
      { 1 eq
	{ y1 1
	}
	{ y1 exch y1 2
	} ifelse
      } ifelse
    }
    {
      /ct theta cos theta sin div def
      /a ct ct mul 1 add def
      /b ct x1 x0 sub mul y1 add y0 sub 2 mul def
      /c x1 x0 sub dup mul y1 y0 sub dup mul add r dup mul sub def
      a b c ldiagqroots dup
      0 eq
      { pop
	0
      }
      { 1 eq
	{ y1 add /yb exch def
	  yb y1 sub ct mul x1 add /xb exch def
	  xb yb 1
	}
	{ y1 add /ya exch def
	  ya y1 sub ct mul x1 add /xa exch def
	  y1 add /yb exch def
	  yb y1 sub ct mul x1 add /xb exch def
	  xa ya xb yb 2
	} ifelse
      } ifelse
    } ifelse
  end
  % (Leaving ldiagcircleintersect) 1 ldiagdebugprint
} def

% find line which is the perpendicular bisector of two points, defined
% by two points
% x1 y1 x2 y2 ldiaglinebetween x3 y3 x4 y4
/ldiaglinebetween
{ % (Entering ldiaglinebetween) 4 ldiagdebugprint
  /y2 exch def /x2 exch def
  /y1 exch def /x1 exch def

  % let x3, y3 be the point halfway between the two points
  x1 y1 x2 y2 ldiagpadd 0.5 ldiagpmul
  /y3 exch def /x3 exch def

  % find a point perpendicular to x3, y3
  x3 y3 50 x1 y1 x2 y2 ldiagangleto 90 dg add ldiagatangle

  % plus x3 y3 gives the two points
  x3 y3

  % (Leaving ldiaglinebetween) 4 ldiagdebugprint
} def

% find <proc>@<string>:  <proc> <string> ldiagfindlabel <any> true
%                                                      <proc> <string> false
/ldiagfindlabel
{
  % (Entering ldiagfindlabel) 2 ldiagdebugprint
  exch dup length 1 ne
  { exch false
    % (Leaving ldiagfindabel (length not 1)) 3 ldiagdebugprint
  }
  { dup 0 get type /nametype ne
    { exch false
      % (Leaving ldiagfindabel (not a name)) 3 ldiagdebugprint
    }
    { dup 0 get dup length string cvs (@) ldiagconcat
      2 index ldiagconcat dup where
      { exch get exch pop exch pop cvx exec true
	% (Leaving ldiagfindlabel with success) 100 ldiagdebugprint
      }
      {
	pop exch false
	% (Leaving ldiagfindabel (concat not sensible)) 3 ldiagdebugprint
      } ifelse
    } ifelse
  } ifelse
} bind def

% execute <proc>@<string> or else default:  <proc> <string> ldiagdolabel <various>
/ldiagdolabel
{
  % (Entering ldiagdolabel) 2 ldiagdebugprint
  ldiagfindlabel not
  {
    dup (CIRCUM) eq
    { pop pop pop 0 0
    }
    {
      dup (ANGLE) eq
      { pop pop 0
      }
      { pop cvx exec
      } ifelse
    } ifelse
  } if
  % (Leaving ldiagdolabel) 2 ldiagdebugprint
} bind def

% execute a proc depending on whether number is negative, zero, or positive
% procneg proczero procpos number ldiagsigncase <anything>
/ldiagsigncase
{
  % (Entering ldiagsigncase) 4 ldiagdebugprint
  dup 0 lt
  { pop pop pop exec
  }
  { 0 gt
    { exch pop exch pop exec
    }
    { pop exch pop exec
    } ifelse
  } ifelse
  % (Leaving ldiagsigncase) 0 ldiagdebugprint
} bind def

% execute proci if angle is in ith quadrant
% proc45 proc270 proc180 proc90 proc0 proc315 proc225 proc135 angle ldiagquadcase <anything>
/ldiagquadcase
{
  % (Entering ldiagquadcase) 9 ldiagdebugprint
  round ldiagfixangle cvi dup 90 mod 0 eq
  { 90 idiv 4 add } { 90 idiv } ifelse
  8 exch roll pop pop pop pop pop pop pop exec
  % (Leaving ldiagquadcase) 0 ldiagdebugprint
} bind def

% decode Lout length into PostScript length
% <string> ldiagdecodelength <number>
/ldiagdecodelength
{
  % (Entering ldiagdecodelength) 1 ldiagdebugprint
  (f) search
  { exch pop exch pop cvr ft
  }
  { (c) search
    { exch pop exch pop cvr cm
    }
    { (p) search
      { exch pop exch pop cvr pt
      }
      { (m) search
	{ exch pop exch pop cvr em
	}
	{ (s) search
	  { exch pop exch pop cvr sp
	  }
	  { (v) search
	    { exch pop exch pop cvr vs
	    }
	    { (i) search
	      { exch pop exch pop cvr in
	      }
	      { pop 0
	      } ifelse
	    } ifelse
	  } ifelse
	} ifelse
      } ifelse
    } ifelse
  } ifelse
  % (Leaving ldiagdecodelength) 1 ldiagdebugprint
} def

% implement aabout function
% logical form:  <circum> <extra> <centre> aabout <point>
% actual form:   { <labelorpoint> } cvlit <length> [ <point> ] cvx aabout <point>
/ldiagaabout
{
  /centre exch def
  /extra exch def
  /circum exch def

  /ZXCTR [ centre ] cvx def
  /ZFCTR [ circum (CTR) ldiagdolabel ] cvx def
  /ZAREF ZFCTR ZXCTR ldiagangleto def
  /ZAMIN 0 dg def
  /ZPMIN [ circum (CTR) ldiagdolabel ZAREF ZAMIN sub
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMIN sub ldiagatangle
	 ldiagpadd ] cvx def

  /ZAMAX 90 dg def
  /ZPMAX [ circum (CTR) ldiagdolabel ZAREF ZAMAX sub
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMAX sub ldiagatangle
	 ldiagpadd ] cvx def

  1 1 20
  { /xval exch def
    /ZAMID ZAMIN ZAMAX add 0.5 mul def
    /ZPMID [ circum (CTR) ldiagdolabel ZAREF ZAMID sub
	   circum (CIRCUM) ldiagdolabel ldiagpadd
	   0 0 extra ZAREF ZAMID sub ldiagatangle
	   ldiagpadd ] cvx def
    ZPMID ZXCTR ldiagdistance ZFCTR ZXCTR ldiagdistance gt
    {
      /ZAMAX [ ZAMID ] cvx def
      /ZPMAX [ ZPMID ] cvx def
    }
    {
      /ZAMIN [ ZAMID ] cvx def
      /ZPMIN [ ZPMID ] cvx def
    } ifelse
  } for
  ZPMID
} def

% implement cabout function
% logical form:  <circum> <extra> <centre> cabout <point>
% actual form:   { <labelorpoint> } cvlit <length> [ <point> ] cvx cabout <point>
/ldiagcabout
{
  /centre exch def
  /extra exch def
  /circum exch def

  /ZXCTR [ centre ] cvx def
  /ZFCTR [ circum (CTR) ldiagdolabel ] cvx def
  /ZAREF ZFCTR ZXCTR ldiagangleto def
  /ZAMIN 0 dg def
  /ZPMIN [ circum (CTR) ldiagdolabel ZAREF ZAMIN add
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMIN add ldiagatangle
	 ldiagpadd ] cvx def

  /ZAMAX 90 dg def
  /ZPMAX [ circum (CTR) ldiagdolabel ZAREF ZAMAX add
	 circum (CIRCUM) ldiagdolabel ldiagpadd
	 0 0 extra ZAREF ZAMAX add ldiagatangle
	 ldiagpadd ] cvx def

  1 1 20
  { /xval exch def
    /ZAMID ZAMIN ZAMAX add 0.5 mul def
    /ZPMID [ circum (CTR) ldiagdolabel ZAREF ZAMID add
	   circum (CIRCUM) ldiagdolabel ldiagpadd
	   0 0 extra ZAREF ZAMID add ldiagatangle
	   ldiagpadd ] cvx def
    ZPMID ZXCTR ldiagdistance ZFCTR ZXCTR ldiagdistance gt
    {
      /ZAMAX [ ZAMID ] cvx def
      /ZPMAX [ ZPMID ] cvx def
    }
    {
      /ZAMIN [ ZAMID ] cvx def
      /ZPMIN [ ZPMID ] cvx def
    } ifelse
  } for
  ZPMID
} def

% fromarrowlength toarrowlength { from } { to } xindent zindent ldiaglinepath -
/ldiaglinepath
{
  % (entering ldiaglinepath) 0 ldiagdebugprint
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagangleto
  /FROM@ANGLE ldiagangledef 
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  FROM@ANGLE /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg sub to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TO@ANGLE 180 dg sub ldiagatangle ldiagpadd /TO ldiagpointdef

  FROM 0.5 ldiagpmul TO 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  FROM@ANGLE /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  0 0 ZINDENT FROM@ANGLE ldiagatangle TO ldiagpsub /LTO ldiagpointdef
  FROM@ANGLE /LTO@ANGLE ldiagangledef

  direct { FROM TO } { FROM LFROM LMID LTO TO } ifelse

  % (leaving ldiaglinepath) 0 ldiagdebugprint
} def

% fromarrowlength toarrowlength { from } { to } xindent zindent pathgap ldiagdoublelinepath -
/ldiagdoublelinepath
{
  % (entering ldiagdoublelinepath) 0 ldiagdebugprint
  /pathgap exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagangleto
  /FROM@ANGLE ldiagangledef 
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  FROM@ANGLE /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg sub to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TO@ANGLE 180 dg sub ldiagatangle ldiagpadd /TO ldiagpointdef

  FROM 0.5 ldiagpmul TO 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  FROM@ANGLE /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  0 0 ZINDENT FROM@ANGLE ldiagatangle TO ldiagpsub /LTO ldiagpointdef
  FROM@ANGLE /LTO@ANGLE ldiagangledef

  direct {
    FROM pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    TO   pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    []
    FROM pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    TO   pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
  }
  {
    FROM  pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LFROM pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LMID  pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    LTO   pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    TO    pathgap 2 div FROM@ANGLE 90 dg sub ldiagatangle
    []
    FROM  pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LFROM pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LMID  pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    LTO   pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
    TO    pathgap 2 div FROM@ANGLE 90 dg add ldiagatangle
  } ifelse

  % (leaving ldiagdoublelinepath) 0 ldiagdebugprint
} def

% fromarrowlen toarrowlen { from } { to } xindent zindent bias ldiagacurvepath -
/ldiagacurvepath
{
  % (entering ldiagacurvepath) 0 ldiagdebugprint
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  %/B1 bias 0.02 ft ldiagmax def
  %/B2 from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagdistance 0.5 mul def
  %/BIAS B1 B2 ldiagmin def
  /BIAS bias 0.02 ft ldiagmax def
  /XMID [ from (CTR) ldiagdolabel 0.5 ldiagpmul
	  to   (CTR) ldiagdolabel 0.5 ldiagpmul ldiagpadd ] cvx def
  /XTOP [ XMID 0 0 BIAS from (CTR) ldiagdolabel to (CTR) ldiagdolabel
	  ldiagangleto 90 dg sub ldiagatangle ldiagpadd ] cvx def
  /CTR [ from (CTR) ldiagdolabel XTOP ldiaglinebetween
	 to   (CTR) ldiagdolabel XTOP ldiaglinebetween
	 ldiaglineintersect ] cvx def

  from fromarrowlength [ CTR ] cvx ldiagaabout /FROM ldiagpointdef
  from (CTR) ldiagdolabel FROM ldiagdistance 0 gt
  { from (CTR) ldiagdolabel FROM ldiagangleto
  }
  { CTR FROM ldiagangleto 90 dg add
  } ifelse /FROM@ANGLE ldiagangledef

  to toarrowlength [ CTR ] cvx ldiagcabout /TO ldiagpointdef
  TO to (CTR) ldiagdolabel ldiagdistance 0 gt
  { TO to (CTR) ldiagdolabel ldiagangleto
  }
  { CTR TO ldiagangleto 90 dg add
  } ifelse /TO@ANGLE ldiagangledef

  /RADIUS CTR FROM ldiagdistance def
  CTR 0 0 RADIUS CTR FROM ldiagangleto 360 dg CTR TO ldiagangleto
  add CTR FROM ldiagangleto sub cvi 360 mod 0.5 mul add
  ldiagatangle ldiagpadd /LMID ldiagpointdef
  CTR LMID ldiagangleto 90 dg add /LMID@ANGLE ldiagangledef

  /XINDENT xindent FROM LMID ldiagdistance ldiagmin def
  CTR 0 0 RADIUS CTR FROM 0 0 XINDENT FROM@ANGLE ldiagatangle
  ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LFROM ldiagpointdef
  CTR LFROM ldiagangleto 90 dg add /LFROM@ANGLE ldiagangledef

  /ZINDENT zindent TO LMID ldiagdistance ldiagmin def
  CTR 0 0 RADIUS CTR TO 0 0 ZINDENT TO@ANGLE 180 dg add
  ldiagatangle ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LTO ldiagpointdef
  CTR LTO ldiagangleto 90 dg add /LTO@ANGLE ldiagangledef

  direct
  { FROM [CTR] TO }
  { FROM [CTR] LFROM [CTR] LMID [CTR] LTO [CTR] TO }
  ifelse

  % (leaving ldiagacurvepath) 0 ldiagdebugprint
} def

% fromarrowlen toarrowlen { from } { to } xindent zindent bias ldiagccurvepath -
/ldiagccurvepath
{
  % (entering ldiagccurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  %/B1 bias 0.02 ft ldiagmax def
  %/B2 from (CTR) ldiagdolabel to (CTR) ldiagdolabel ldiagdistance 0.5 mul def
  %/BIAS B1 B2 ldiagmin def
  /BIAS bias 0.02 ft ldiagmax def
  /XMID [ from (CTR) ldiagdolabel 0.5 ldiagpmul
	to (CTR) ldiagdolabel 0.5 ldiagpmul ldiagpadd ] cvx def
  /XTOP [ XMID 0 0 BIAS from (CTR) ldiagdolabel to (CTR) ldiagdolabel
	ldiagangleto 90 dg add ldiagatangle ldiagpadd ] cvx def
  /CTR [ from (CTR) ldiagdolabel XTOP ldiaglinebetween
         to (CTR) ldiagdolabel XTOP ldiaglinebetween ldiaglineintersect ] cvx def

  from fromarrowlength [ CTR ] cvx ldiagcabout /FROM ldiagpointdef
  from (CTR) ldiagdolabel FROM ldiagdistance 0 gt
  { from (CTR) ldiagdolabel FROM ldiagangleto }
  { CTR FROM ldiagangleto 90 dg sub }
  ifelse /FROM@ANGLE ldiagangledef

  to toarrowlength [ CTR ] cvx ldiagaabout /TO ldiagpointdef
  TO to (CTR) ldiagdolabel ldiagdistance 0 gt
  { TO to (CTR) ldiagdolabel ldiagangleto }
  { CTR TO ldiagangleto 90 dg sub }
  ifelse /TO@ANGLE ldiagangledef

  /RADIUS [ CTR FROM ldiagdistance ] cvx def
  CTR 0 0 RADIUS CTR TO ldiagangleto 360 dg CTR FROM ldiagangleto add
  CTR TO ldiagangleto sub cvi 360 cvi mod 2 div add ldiagatangle
  ldiagpadd /LMID ldiagpointdef
  CTR LMID ldiagangleto 90 dg sub /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM LMID ldiagdistance ldiagmin ] cvx def
  CTR 0 0 RADIUS CTR FROM 0 0 XINDENT FROM@ANGLE ldiagatangle ldiagpadd
  ldiagangleto ldiagatangle ldiagpadd /LFROM ldiagpointdef
  CTR LFROM ldiagangleto 90 dg sub /LFROM@ANGLE ldiagangledef

  /ZINDENT [ zindent TO LMID ldiagdistance ldiagmin ] cvx def
  CTR 0 0 RADIUS CTR TO 0 0 ZINDENT TO@ANGLE 180 dg add ldiagatangle
  ldiagpadd ldiagangleto ldiagatangle ldiagpadd /LTO ldiagpointdef
  CTR LTO ldiagangleto 90 dg sub /LTO@ANGLE ldiagangledef

  direct
  { FROM [CTR clockwise] TO }
  { FROM [CTR clockwise] LFROM [CTR clockwise]
  LMID [CTR clockwise] LTO [CTR clockwise] TO }
  ifelse
  % (leaving ldiagccurvepath) 0 ldiagdebugprint
} def


% farr tarr { from } { to } xindent zindent [frompt] [topt] ldiagbezierpath -
/ldiagbezierpath
{
  % (entering ldiagbezierpath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  cvx /topt exch def
  cvx /frompt exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel frompt ldiagangleto /FROM@ANGLE ldiagangledef
  from (CTR) ldiagdolabel FROM@ANGLE from (CIRCUM) ldiagdolabel
  ldiagpadd 0 0 fromarrowlength FROM@ANGLE ldiagatangle ldiagpadd
  /FROM ldiagpointdef

  topt to (CTR) ldiagdolabel ldiagangleto /TO@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TO@ANGLE 180 dg add to (CIRCUM) ldiagdolabel
  ldiagpadd 0 0 toarrowlength TO@ANGLE 180 dg add ldiagatangle ldiagpadd
  /TO ldiagpointdef

  FROM 0 0 xindent FROM@ANGLE ldiagatangle ldiagpadd
  /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef

  TO 0 0 zindent TO@ANGLE 180 dg add ldiagatangle ldiagpadd
  /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  FROM TO ldiagpadd frompt ldiagpadd topt ldiagpadd 0.25 ldiagpmul
  /LMID ldiagpointdef

  FROM [frompt topt] TO

  % (leaving ldiagbezierpath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent ldiagvhlinepath -
/ldiagvhlinepath
{
  % (entering ldiagvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /XINDENT [ xindent FDIST ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST ldiagmin ] cvx def
  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  CTR /LMID ldiagpointdef
  0 0 1 ft FANG 180 dg add ldiagatangle
  0 0 1 ft TANG 180 dg add ldiagatangle
  ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM LMID LTO TO

  % (leaving ldiagvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent radius ldiagvhcurvepath -
/ldiagvhcurvepath
{
  % (entering ldiagvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /RADIUS [ radius FDIST TDIST ldiagmin ldiagmin ] cvx def
  /XINDENT [ xindent FDIST RADIUS sub ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST RADIUS sub ldiagmin ] cvx def

  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  /FCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd ] cvx def
  /TCTR [ CTR 0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  /XCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd
              0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  XCTR 0 0 RADIUS XCTR CTR ldiagangleto ldiagatangle ldiagpadd
  /LMID ldiagpointdef
  FCTR TCTR ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM FCTR
  {[XCTR clockwise]} {} {} {} {} {[XCTR]} {[XCTR clockwise]} {[XCTR]}
  FCTR TCTR ldiagangleto ldiagquadcase
  TCTR LTO TO

  % (leaving ldiagvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent ldiaghvlinepath -
/ldiaghvlinepath
{
  % (entering ldiaghvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ to (CTR) ldiagdolabel pop from (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /XINDENT [ xindent FDIST ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST ldiagmin ] cvx def

  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  CTR /LMID ldiagpointdef
  0 0 1 ft FANG 180 dg add ldiagatangle
  0 0 1 ft TANG 180 dg add ldiagatangle ldiagangleto
  /LMID@ANGLE ldiagangledef

  FROM LFROM LMID LTO TO

  % (leaving ldiaghvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent radius ldiaghvcurvepath -
/ldiaghvcurvepath
{
  % (entering ldiaghvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /CTR [ to (CTR) ldiagdolabel pop from (CTR) ldiagdolabel exch pop ] cvx def
  /FANG [ from (CTR) ldiagdolabel CTR ldiagangleto ] cvx def
  /TANG [ to (CTR) ldiagdolabel CTR ldiagangleto ] cvx def

  from (CTR) ldiagdolabel FANG from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FANG ldiagatangle ldiagpadd /FROM ldiagpointdef
  FANG /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel TANG to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TANG ldiagatangle ldiagpadd /TO ldiagpointdef
  TANG 180 dg add /TO@ANGLE ldiagangledef

  /FDIST [ FROM CTR ldiagdistance ] cvx def
  /TDIST [ TO CTR ldiagdistance ] cvx def
  /RADIUS [ radius FDIST TDIST ldiagmin ldiagmin ] cvx def
  /XINDENT [ xindent FDIST RADIUS sub ldiagmin ] cvx def
  /ZINDENT [ zindent TDIST RADIUS sub ldiagmin ] cvx def
  FROM 0 0 XINDENT FANG ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TANG ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef

  /FCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd ] cvx def
  /TCTR [ CTR 0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  /XCTR [ CTR 0 0 RADIUS FROM@ANGLE 180 dg add ldiagatangle ldiagpadd
	      0 0 RADIUS TO@ANGLE ldiagatangle ldiagpadd ] cvx def
  XCTR 0 0 RADIUS XCTR CTR ldiagangleto ldiagatangle ldiagpadd
  /LMID ldiagpointdef
  FCTR TCTR ldiagangleto /LMID@ANGLE ldiagangledef

  FROM LFROM FCTR
  {[XCTR]} {} {} {} {} {[XCTR clockwise]} {[XCTR]} {[XCTR clockwise]}
  FCTR TCTR ldiagangleto ldiagquadcase
  TCTR LTO TO

  % (leaving ldiaghvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiaglvrlinepath -
/ldiaglvrlinepath
{
  % (entering ldiaglvrlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 180 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 180 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  180 dg /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel 180 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 180 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  0 dg /TO@ANGLE ldiagangledef

  /XLEFT [ FROM pop TO pop ldiagmin bias sub ] cvx def
  XLEFT FROM exch pop /P1 ldiagpointdef
  XLEFT TO exch pop /P2 ldiagpointdef
  /VERT [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 180 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 0 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef

  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  XINDENT 0 FROM ldiagpsub /LFROM ldiagpointdef
  180 dg /LFROM@ANGLE ldiagangledef
  ZINDENT 0 TO ldiagpsub /LTO ldiagpointdef
  0 dg /LTO@ANGLE ldiagangledef

  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaglvrlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias radius ldiaglvrcurvepath -
/ldiaglvrcurvepath
{
  % (entering ldiaglvrcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 180 dg from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength 180 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  180 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 180 dg to (CIRCUM) ldiagdolabel ldiagpadd 0 0
  toarrowlength 180 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  0 dg /TO@ANGLE ldiagangledef
  /XLEFT [ FROM pop TO pop ldiagmin bias sub ] cvx def
  /XP1 [ XLEFT FROM exch pop ] cvx def
  /XP2 [ XLEFT TO exch pop ] cvx def
  /VERT [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  XINDENT 0 FROM ldiagpsub /LFROM ldiagpointdef
  180 dg /LFROM@ANGLE ldiagangledef
  ZINDENT 0 TO ldiagpsub /LTO ldiagpointdef
  0 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 0 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {  } { [XP1CTR] P1 [XP1CTR] } {  } { [XP1CTR clockwise] P1 [XP1CTR clockwise] }
  {  } {  } {  } {  } VERT round ldiagquadcase
  XP1POST LMID XP2PRE
  {  } { [XP2CTR] P2 [XP2CTR] } {  } { [XP2CTR clockwise] P2 [XP2CTR clockwise] }
  {  } {  } {  } {  } VERT round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiaglvrcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiagrvllinepath -
/ldiagrvllinepath
{
  % (entering ldiagrvllinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 0 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 0 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  0 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 0 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 0 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  180 dg /TO@ANGLE ldiagangledef
  /XRIGHT [ FROM pop TO pop ldiagmax bias add ] cvx def
  XRIGHT FROM exch pop /P1 ldiagpointdef
  XRIGHT TO exch pop /P2 ldiagpointdef
  /VERT [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 0 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 180 dg ldiagatangle ldiagpadd 0 0 1 ft VERT ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM XINDENT 0 ldiagpadd /LFROM ldiagpointdef
  0 dg /LFROM@ANGLE ldiagangledef
  TO ZINDENT 0 ldiagpadd /LTO ldiagpointdef
  180 dg /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagrvllinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent bias radius ldiagrvlcurvepath -
/ldiagrvlcurvepath
{
  % (entering ldiagrvlcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 0 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 0 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  0 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 0 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 0 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  180 dg /TO@ANGLE ldiagangledef
  /XRIGHT [ FROM pop TO pop ldiagmax bias add ] cvx def
  /XP1 [ XRIGHT FROM exch pop ] cvx def
  /XP2 [ XRIGHT TO exch pop ] cvx def
  /VERT [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM XINDENT 0 ldiagpadd /LFROM ldiagpointdef
  0 dg /LFROM@ANGLE ldiagangledef
  TO ZINDENT 0 ldiagpadd /LTO ldiagpointdef
  180 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 0.5 mul ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 180 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {} {[XP1CTR clockwise] P1 [XP1CTR clockwise]} {} {[XP1CTR] P1 [XP1CTR]}
  {} {} {} {} VERT round ldiagquadcase
  XP1POST LMID XP2PRE
  {} {[XP2CTR clockwise] P2 [XP2CTR clockwise]} {} {[XP2CTR] P2 [XP2CTR]}
  {} {} {} {} VERT round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiagrvlcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiagdhulinepath -
/ldiagdhulinepath
{
  % (entering ldiagdhulinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 270 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  270 dg /FROM@ANGLE ldiagangledef

  to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 270 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  90 dg /TO@ANGLE ldiagangledef

  /XDOWN [ FROM exch pop TO exch pop ldiagmin bias sub ] cvx def
  FROM pop XDOWN /P1 ldiagpointdef
  TO pop XDOWN /P2 ldiagpointdef
  /HORIZ [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 270 dg ldiagatangle ldiagpadd 0 0 1 ft HORIZ ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 90 dg ldiagatangle ldiagpadd 0 0 1 ft HORIZ ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef

  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  HORIZ /LMID@ANGLE ldiagangledef

  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  0 XINDENT FROM ldiagpsub /LFROM ldiagpointdef
  270 dg /LFROM@ANGLE ldiagangledef
  0 ZINDENT TO ldiagpsub /LTO ldiagpointdef
  90 dg /LTO@ANGLE ldiagangledef

  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagdhulinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias radius ldiagdhucurvepath -
/ldiagdhucurvepath
{
  % (entering ldiagdhucurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength 270 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  270 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd 0 0
  toarrowlength 270 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  90 dg /TO@ANGLE ldiagangledef
  /XDOWN [ FROM exch pop TO exch pop ldiagmin bias sub ] cvx def
  /XP1 [ FROM pop XDOWN ] cvx def
  /XP2 [ TO pop XDOWN ] cvx def
  /HORIZ [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  HORIZ /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  0 XINDENT FROM ldiagpsub /LFROM ldiagpointdef
  270 dg /LFROM@ANGLE ldiagangledef
  0 ZINDENT TO ldiagpsub /LTO ldiagpointdef
  90 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 90 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS HORIZ ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS HORIZ ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS HORIZ ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 90 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 90 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {} {} { [XP1CTR clockwise] P1 [XP1CTR clockwise] } {} { [XP1CTR] P1 [XP1CTR] }
  {} {} {} HORIZ round ldiagquadcase
  XP1POST LMID XP2PRE
  {} {} { [XP2CTR clockwise ] P2 [XP2CTR clockwise ] } {} { [XP2CTR] P2 [XP2CTR] }
  {} {} {} HORIZ round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiagdhucurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias ldiaguhdlinepath -
/ldiaguhdlinepath
{
  % (entering ldiaguhdlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 90 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  90 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 90 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  270 dg /TO@ANGLE ldiagangledef
  /XUP [ FROM exch pop TO exch pop ldiagmax bias add ] cvx def
  FROM pop XUP /P1 ldiagpointdef
  TO pop XUP /P2 ldiagpointdef
  /HORIZ [ P1 P2 ldiagangleto ] cvx def
  P1 P1 0 0 1 ft 90 dg ldiagatangle ldiagpadd 0 0 1 ft HORIZ ldiagatangle
  ldiagpadd ldiagangleto /P1@ANGLE ldiagangledef
  P2 P2 0 0 1 ft 270 dg ldiagatangle ldiagpadd 0 0 1 ft HORIZ ldiagatangle
  ldiagpadd ldiagangleto /P2@ANGLE ldiagangledef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  HORIZ /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 XINDENT ldiagpadd /LFROM ldiagpointdef
  90 dg /LFROM@ANGLE ldiagangledef
  TO 0 ZINDENT ldiagpadd /LTO ldiagpointdef
  270 dg /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaguhdlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent bias radius ldiaguhdcurvepath -
/ldiaguhdcurvepath
{
  % (entering ldiaguhdcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength 90 dg ldiagatangle ldiagpadd /FROM ldiagpointdef
  90 dg /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength 90 dg ldiagatangle ldiagpadd /TO ldiagpointdef
  270 dg /TO@ANGLE ldiagangledef
  /XUP [ FROM exch pop TO exch pop ldiagmax bias add ] cvx def
  /XP1 [ FROM pop XUP ] cvx def
  /XP2 [ TO pop XUP ] cvx def
  /HORIZ [ XP1 XP2 ldiagangleto ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  HORIZ /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 XINDENT ldiagpadd /LFROM ldiagpointdef
  90 dg /LFROM@ANGLE ldiagangledef
  TO 0 ZINDENT ldiagpadd /LTO ldiagpointdef
  270 dg /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 0.5 mul ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS 270 dg ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS HORIZ ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS HORIZ ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd
  /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS HORIZ ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS 270 dg ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RADIUS 270 dg ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd
  /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FROM LFROM XP1PRE
  {} {} {[XP1CTR] P1 [XP1CTR]} {} {[XP1CTR clockwise] P1 [XP1CTR clockwise]}
  {} {} {} HORIZ round ldiagquadcase
  XP1POST LMID XP2PRE
  {} {} {[XP2CTR] P2 [XP2CTR]} {} {[XP2CTR clockwise] P2 [XP2CTR clockwise]}
  {} {} {} HORIZ round ldiagquadcase
  XP2POST LTO TO

  % (leaving ldiaguhdcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent hfrac hbias ldiaghvhlinepath -
/ldiaghvhlinepath % still to do
{
  % (entering ldiaghvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 0 dg } { 180 dg } { 180 dg } { 0 dg }
  { 0 dg } { 0 dg } { 180 dg } { 180 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg add ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM pop TO pop sub abs hfrac mul hbias add ] cvx def
  FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  P1 pop TO exch pop /P2 ldiagpointdef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  P1 P2 ldiagangleto /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiaghvhlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent hfrac hbias radius ldiaghvhcurvepath -
/ldiaghvhcurvepath % still to do
{
  % (entering ldiaghvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 0 dg } { 180 dg } { 180 dg } { 0 dg }
  { 0 dg } { 0 dg } { 180 dg } { 180 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg add ] cvx def

  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef

  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM pop TO pop sub abs hfrac mul hbias add ] cvx def
  /XP1 [ FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2 [ XP1 pop TO exch pop ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  /VERT [ XP1 XP2 ldiagangleto round ] cvx def
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS TODIRN ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ 0 0 RADIUS VERT ldiagatangle XP2POST ldiagpsub ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  VERT FRDIRN sub 90 eq
  { /P1GO [ anticlockwise ] cvx def /P2GO [ clockwise ] cvx def }
  { /P1GO [ clockwise ] cvx def /P2GO [ anticlockwise ] cvx def }
  ifelse
  FROM LFROM
  XP1PRE [XP1CTR P1GO] P1 [XP1CTR P1GO] XP1POST
  LMID
  XP2PRE [XP2CTR P2GO] P2 [XP2CTR P2GO] XP2POST
  LTO TO

  % (leaving ldiaghvhcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent hfrac hbias ldiagvhvlinepath -
/ldiagvhvlinepath % still to do
{
  % (entering ldiagvhvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 90 dg } { 270 dg } { 270 dg } { 0 dg }
  { 90 dg } { 270 dg } { 270 dg } { 90 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg sub ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM exch pop TO exch pop sub abs hfrac mul hbias ft add ] cvx def
  FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  TO pop P1 exch pop /P2 ldiagpointdef
  P1 0.5 ldiagpmul P2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  P1 P2 ldiagangleto /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent P2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  FROM LFROM P1 LMID P2 LTO TO

  % (leaving ldiagvhvlinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def


% farr tarr { from } { to } xindent zindent hfrac hbias radius ldiagvhvcurvepath -
/ldiagvhvcurvepath % still to do
{
  % (entering ldiagvhvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /hbias exch def
  /hfrac exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /FRDIRN [ { 90 dg } { 270 dg } { 270 dg } { 0 dg }
  { 90 dg } { 270 dg } { 270 dg } { 90 dg }
  from (CTR) ldiagdolabel to (CTR) ldiagdolabel
  ldiagangleto ldiagquadcase ] cvx def
  /TODIRN [ FRDIRN 180 dg sub ] cvx def
  from (CTR) ldiagdolabel FRDIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength FRDIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  FRDIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel TODIRN to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength TODIRN ldiagatangle ldiagpadd /TO ldiagpointdef
  FRDIRN /TO@ANGLE ldiagangledef
  /BIAS [ FROM exch pop TO exch pop sub abs hfrac mul hbias add ] cvx def
  /XP1 [ FROM 0 0 BIAS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2 [ TO pop XP1 exch pop ] cvx def
  XP1 0.5 ldiagpmul XP2 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  /VERT [ XP1 XP2 ldiagangleto round ] cvx def
  VERT /LMID@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1 ldiagdistance ldiagmin ] cvx def
  /ZINDENT [ zindent XP2 TO ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT FRDIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FRDIRN /LFROM@ANGLE ldiagangledef
  TO 0 0 ZINDENT TODIRN ldiagatangle ldiagpadd /LTO ldiagpointdef
  FRDIRN /LTO@ANGLE ldiagangledef
  /RADIUS [ radius XP1 XP2 ldiagdistance 2 div ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RADIUS TODIRN ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RADIUS VERT ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RADIUS XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1PRE XP1POST ldiagangleto /P1@ANGLE ldiagangledef
  /XP2PRE [ 0 0 RADIUS VERT ldiagatangle XP2 ldiagpsub ] cvx def
  /XP2POST [ XP2 0 0 RADIUS FRDIRN ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ 0 0 RADIUS VERT ldiagatangle XP2POST ldiagpsub ] cvx def
  XP2CTR 0 0 RADIUS XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2PRE XP2POST ldiagangleto /P2@ANGLE ldiagangledef
  FRDIRN VERT sub 90 eq
  { /P1GO [ clockwise ] cvx def /P2GO [ anticlockwise ] cvx def }
  { /P1GO [ anticlockwise ] cvx def /P2GO [ clockwise ] cvx def }
  ifelse
  FROM LFROM
  XP1PRE [XP1CTR P1GO] P1 [XP1CTR P1GO] XP1POST
  LMID
  XP2PRE [XP2CTR P2GO] P2 [XP2CTR P2GO] XP2POST
  LTO TO


  % (leaving ldiagvhvcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias ldiagdwraplinepath -
/ldiagdwraplinepath
{
  % (entering ldiagdwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop
  lt { 180 dg } { 0 dg } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd 0 0
  fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  DIRN 180 dg eq { 225 dg } { -45 dg } ifelse /P1@ANGLE ldiagangledef
  TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd
  /P4 ldiagpointdef
  DIRN 180 dg eq { 135 dg } { 45 dg } ifelse /P4@ANGLE ldiagangledef
  /YC [ from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmin bias 0 ldiagmax sub ] cvx def
  P1 pop YC /P2 ldiagpointdef
  P4@ANGLE 180 dg sub /P2@ANGLE ldiagangledef
  P4 pop YC /P3 ldiagpointdef
  P1@ANGLE 180 dg sub /P3@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  /ZINDENT [ zindent TO P4 ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  P2 0.5 ldiagpmul P3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  FROM P1 P2 P3 P4 TO

  % (leaving ldiagdwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias radius
% ldiagdwrapcurvepath -
/ldiagdwrapcurvepath
{
  % (entering ldiagdwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  /CLOCK [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { anticlockwise } { clockwise } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  /XP1 [ FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd ] cvx def
  /XP4 [ TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd ] cvx def
  /YC [ from (CTR) ldiagdolabel 270 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 270 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmin bias 0 ldiagmax sub ] cvx def
  /XP2 [ XP1 pop YC ] cvx def
  /XP3 [ XP4 pop YC ] cvx def
  /RP1 [ radius XP1 FROM ldiagdistance XP1 XP2 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RP1 XP1 FROM ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RP1 XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1CTR P1 ldiagangleto DIRN add 90 dg sub /P1@ANGLE ldiagangledef
  /RP2 [ radius XP1 XP2 ldiagdistance 2 div XP2 XP3 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP2PRE [ XP2 0 0 RP2 XP2 XP1 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2POST [ XP2 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RP2 XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2CTR P2 ldiagangleto DIRN add 90 dg sub /P2@ANGLE ldiagangledef
  /RP3 [ radius XP2 XP3 ldiagdistance 2 div XP3 XP4 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP3PRE [ XP3 0 0 RP3 XP3 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3POST [ XP3 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3CTR [ XP3PRE 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP3CTR 0 0 RP3 XP3CTR XP3 ldiagangleto ldiagatangle ldiagpadd /P3 ldiagpointdef
  XP3CTR P3 ldiagangleto DIRN add 90 dg sub /P3@ANGLE ldiagangledef
  /RP4 [ radius XP4 XP3 ldiagdistance 2 div XP4 TO ldiagdistance
  ldiagmin ldiagmin ] cvx def
  /XP4PRE [ XP4 0 0 RP4 XP4 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4POST [ XP4 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4CTR [ XP4PRE 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP4CTR 0 0 RP4 XP4CTR XP4 ldiagangleto ldiagatangle ldiagpadd /P4 ldiagpointdef
  XP4CTR P4 ldiagangleto DIRN add 90 dg sub /P4@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1PRE ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  XP2 0.5 ldiagpmul XP3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  /ZINDENT [ zindent TO XP4POST ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  FROM LFROM
  XP1PRE [XP1CTR CLOCK] XP1POST
  XP2PRE [XP2CTR CLOCK] XP2POST
  LMID
  XP3PRE [XP3CTR CLOCK] XP3POST
  XP4PRE [XP4CTR CLOCK] XP4POST
  LTO TO

  % (leaving ldiagdwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias ldiaguwraplinepath -
/ldiaguwraplinepath
{
  % (entering ldiaguwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd /P1 ldiagpointdef
  DIRN 180 dg eq { 135 dg } { 45 dg } ifelse /P1@ANGLE ldiagangledef
  TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd
  /P4 ldiagpointdef
  DIRN 180 dg eq { 225 dg } { -45 dg } ifelse /P4@ANGLE ldiagangledef
  /YC [ from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmax bias 0 ldiagmax add ] cvx def
  P1 pop YC /P2 ldiagpointdef
  P4@ANGLE 180 dg sub /P2@ANGLE ldiagangledef
  P4 pop YC /P3 ldiagpointdef
  P1@ANGLE 180 dg sub /P3@ANGLE ldiagangledef
  /XINDENT [ xindent FROM P1 ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  /ZINDENT [ zindent TO P4 ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  P2 0.5 ldiagpmul P3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  FROM P1 P2 P3 P4 TO

  % (leaving ldiaguwraplinepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% farr tarr { from } { to } xindent zindent bias fbias tbias radius
% ldiaguwrapcurvepath -
/ldiaguwrapcurvepath
{
  % (entering ldiaguwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
  /radius exch def
  /tbias exch def
  /fbias exch def
  /bias exch def
  /zindent exch def
  /xindent exch def
  cvlit /to exch def
  cvlit /from exch def
  /toarrowlength exch def
  /fromarrowlength exch def

  /DIRN [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { 180 dg } { 0 dg } ifelse ] cvx def
  /CLOCK [ from (CTR) ldiagdolabel pop to (CTR) ldiagdolabel pop lt
  { clockwise } { anticlockwise } ifelse ] cvx def
  from (CTR) ldiagdolabel DIRN from (CIRCUM) ldiagdolabel ldiagpadd
  0 0 fromarrowlength DIRN ldiagatangle ldiagpadd /FROM ldiagpointdef
  DIRN /FROM@ANGLE ldiagangledef
  to (CTR) ldiagdolabel DIRN 180 dg add to (CIRCUM) ldiagdolabel ldiagpadd
  0 0 toarrowlength DIRN 180 dg add ldiagatangle ldiagpadd /TO ldiagpointdef
  DIRN /TO@ANGLE ldiagangledef
  /XP1 [ FROM 0 0 fbias 0 ldiagmax DIRN ldiagatangle ldiagpadd ] cvx def
  /XP4 [ TO 0 0 tbias 0 ldiagmax DIRN 180 dg add ldiagatangle ldiagpadd ] cvx def
  /YC [ from (CTR) ldiagdolabel 90 dg from (CIRCUM) ldiagdolabel ldiagpadd
  exch pop to (CTR) ldiagdolabel 90 dg to (CIRCUM) ldiagdolabel ldiagpadd
  exch pop ldiagmax bias 0 ldiagmax add ] cvx def
  /XP2 [ XP1 pop YC ] cvx def
  /XP3 [ XP4 pop YC ] cvx def
  /RP1 [ radius XP1 FROM ldiagdistance XP1 XP2 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP1PRE [ XP1 0 0 RP1 XP1 FROM ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1POST [ XP1 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP1CTR [ XP1PRE 0 0 RP1 XP1 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP1CTR 0 0 RP1 XP1CTR XP1 ldiagangleto ldiagatangle ldiagpadd /P1 ldiagpointdef
  XP1CTR P1 ldiagangleto DIRN add 90 dg add /P1@ANGLE ldiagangledef
  /RP2 [ radius XP1 XP2 ldiagdistance 2 div XP2 XP3 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP2PRE [ XP2 0 0 RP2 XP2 XP1 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2POST [ XP2 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP2CTR [ XP2PRE 0 0 RP2 XP2 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP2CTR 0 0 RP2 XP2CTR XP2 ldiagangleto ldiagatangle ldiagpadd /P2 ldiagpointdef
  XP2CTR P2 ldiagangleto DIRN add 90 dg add /P2@ANGLE ldiagangledef
  /RP3 [ radius XP2 XP3 ldiagdistance 2 div XP3 XP4 ldiagdistance 2 div
  ldiagmin ldiagmin ] cvx def
  /XP3PRE [ XP3 0 0 RP3 XP3 XP2 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3POST [ XP3 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP3CTR [ XP3PRE 0 0 RP3 XP3 XP4 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP3CTR 0 0 RP3 XP3CTR XP3 ldiagangleto ldiagatangle ldiagpadd /P3 ldiagpointdef
  XP3CTR P3 ldiagangleto DIRN add 90 dg add /P3@ANGLE ldiagangledef
  /RP4 [ radius XP4 XP3 ldiagdistance 2 div XP4 TO ldiagdistance
  ldiagmin ldiagmin ] cvx def
  /XP4PRE [ XP4 0 0 RP4 XP4 XP3 ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4POST [ XP4 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  /XP4CTR [ XP4PRE 0 0 RP4 XP4 TO ldiagangleto ldiagatangle ldiagpadd ] cvx def
  XP4CTR 0 0 RP4 XP4CTR XP4 ldiagangleto ldiagatangle ldiagpadd /P4 ldiagpointdef
  XP4CTR P4 ldiagangleto DIRN add 90 dg add /P4@ANGLE ldiagangledef
  /XINDENT [ xindent FROM XP1PRE ldiagdistance ldiagmin ] cvx def
  FROM 0 0 XINDENT DIRN ldiagatangle ldiagpadd /LFROM ldiagpointdef
  FROM@ANGLE /LFROM@ANGLE ldiagangledef
  XP2 0.5 ldiagpmul XP3 0.5 ldiagpmul ldiagpadd /LMID ldiagpointdef
  DIRN 180 dg sub /LMID@ANGLE ldiagangledef
  /ZINDENT [ zindent TO XP4POST ldiagdistance ldiagmin ] cvx def
  TO 0 0 ZINDENT DIRN 180 dg add ldiagatangle ldiagpadd /LTO ldiagpointdef
  TO@ANGLE /LTO@ANGLE ldiagangledef
  FROM LFROM
  XP1PRE [XP1CTR CLOCK] XP1POST
  XP2PRE [XP2CTR CLOCK] XP2POST
  LMID
  XP3PRE [XP3CTR CLOCK] XP3POST
  XP4PRE [XP4CTR CLOCK] XP4POST
  LTO TO

  % (leaving ldiaguwrapcurvepath) 0 ldiagdebugprint
  % count (  stack size is) 1 ldiagdebugprint pop
} def

% shape and labels of the @SolidArrowHead symbol
% - ldiagsolidarrowhead -
/ldiagsolidarrowhead
{
  0 0 xsize ysize 0.5 mul 0 ysize
} def

% shape and labels of the @SolidWithBarArrowHead symbol
% <pathwidth> ldiagsolidwithbararrowhead -
/ldiagsolidwithbararrowhead
{
  /pathwidth exch def
  /XBK [ xsize pathwidth 0.5 mul sub ] cvx def
  /XFW [ xsize pathwidth 0.5 mul add ] cvx def
  0 0 XBK ysize 0.5 mul XBK 0 XFW 0 XFW ysize
  XBK ysize XBK ysize 0.5 mul 0 ysize 0 0
} def

% shape and labels of the @OpenArrowHead symbol
% <pathwidth> <pathgap> ldiagopenarrowhead -
/ldiagopenarrowhead
{
  /pathgap exch def
  /pathwidth exch def
  /PSW [ 0 0 ] cvx def
  /PNW [ 0 ysize ] cvx def
  /PE  [ xsize ysize 0.5 mul ] cvx def
  /REL [ 0 0 pathwidth PE PNW ldiagangleto 90 add ldiagatangle ] cvx def
  pathgap 0 eq
  {
    /PNA [ 0 ysize 0.5 mul pathwidth 0.5 mul add ] cvx def
    /PSA [ 0 ysize 0.5 mul pathwidth 0.5 mul sub ] cvx def
    /PNI [ PNA PNA xsize 0 ldiagpadd PNW REL ldiagpadd
	   PE REL ldiagpadd ldiaglineintersect ] cvx def
    /PSI [ 0 pathwidth PNI ldiagpsub ] cvx def

    PSW PE PNW PNI PNA PSA PSI PSW
  }
  {
    /PNA [ 0 ysize 0.5 mul pathgap 0.5 mul add pathwidth 0.5 mul add ] cvx def
    /PSA [ 0 ysize 0.5 mul pathgap 0.5 mul sub pathwidth 0.5 mul sub ] cvx def
    /PNI [ PNA PNA xsize 0 ldiagpadd PNW REL ldiagpadd
	   PE REL ldiagpadd ldiaglineintersect ] cvx def
    /PSI [ 0 pathwidth pathgap add PNI ldiagpsub ] cvx def
    /PXA [ 0 pathwidth PNA ldiagpsub ] cvx def
    /PXI [ 0 pathwidth PNI ldiagpsub ] cvx def
    /PYA [ 0 pathwidth PSA ldiagpadd ] cvx def
    /PYI [ 0 pathwidth PSI ldiagpadd ] cvx def

    PSW PE PNW PNI PNA PXA PXI PYI PYA PSA PSI PSW
  } ifelse
} def

% shape and labels of the @HalfOpenArrowHead symbol
% <pathwidth> <pathgap> ldiaghalfopenarrowhead -
/ldiaghalfopenarrowhead
{
  /pathgap exch def
  /pathwidth exch def
  0 0
  xsize ysize 0.5 mul
  0 ysize
  pathgap 0 eq
  {
    xsize 0.3 mul ysize 0.5 mul pathwidth 0.5 mul add
    0             ysize 0.5 mul pathwidth 0.5 mul add
    0             ysize 0.5 mul pathwidth 0.5 mul sub
    xsize 0.3 mul ysize 0.5 mul pathwidth 0.5 mul sub
  }
  {
    xsize 0.3 mul ysize 0.5 mul pathgap 0.5 mul add pathwidth 0.5 mul add
    0             ysize 0.5 mul pathgap 0.5 mul add pathwidth 0.5 mul add
    0             ysize 0.5 mul pathgap 0.5 mul add pathwidth 0.5 mul sub
    xsize 0.3 mul ysize 0.5 mul pathgap 0.5 mul add pathwidth 0.5 mul sub
    xsize 0.3 mul ysize 0.5 mul pathgap 0.5 mul sub pathwidth 0.5 mul add
    0             ysize 0.5 mul pathgap 0.5 mul sub pathwidth 0.5 mul add
    0             ysize 0.5 mul pathgap 0.5 mul sub pathwidth 0.5 mul sub
    xsize 0.3 mul ysize 0.5 mul pathgap 0.5 mul sub pathwidth 0.5 mul sub
  } ifelse
  0 0
} def

% shape and labels of the @SolidCurvedArrowHead symbol
% - ldiagsolidcurvedarrowhead -
/ldiagsolidcurvedarrowhead
{
  0 0
  [0 0 xsize ysize 0.5 mul ldiaglinebetween
   xsize 0 xsize ysize ldiaglineintersect clockwise]
  xsize ysize 0.5 mul
  [xsize ysize 0.5 mul 0 ysize ldiaglinebetween
   xsize 0 xsize ysize ldiaglineintersect clockwise]
  0 ysize
} def

% shape and labels of the @OpenCurvedArrowHead symbol
% <pathwidth> <pathgap> ldiagopencurvedarrowhead -
/ldiagopencurvedarrowhead
{
  /pathgap exch def
  /pathwidth exch def
  /LR [ 0 0 xsize ysize 0.5 mul ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /UR [ xsize ysize 0.5 mul 0 ysize ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /PW2 [ pathwidth 0.5 mul ] cvx def
  0 0
  [LR clockwise]
  xsize ysize 0.5 mul
  [UR clockwise]
  0 ysize
  pathgap 0 eq
  {
    /UMID [
	0 ysize 0.5 mul PW2 add
	xsize ysize 0.5 mul PW2 add
	0 ysize 0 0 1 ft UR 0 ysize ldiagangleto 90 add ldiagatangle
	ldiagpadd 0 ysize ldiaglineintersect
    ] cvx def
    /LMID [ 0 pathwidth UMID ldiagpsub ] cvx def
    UMID
    0 ysize 0.5 mul PW2 add
    0 ysize 0.5 mul PW2 sub
    LMID
  }
  {
    /UMIDU [
	0 ysize 0.5 mul PW2 add pathgap 0.5 mul add
	xsize ysize 0.5 mul PW2 add pathgap 0.5 mul add
	0 ysize 0 0 1 ft UR 0 ysize ldiagangleto 90 add ldiagatangle
	ldiagpadd 0 ysize ldiaglineintersect
    ] cvx def
    /UMIDL [ 0 pathwidth UMIDU ldiagpsub ] cvx def
    /LMIDL [ 0 pathgap 0 pathwidth UMIDU ldiagpsub ldiagpsub ] cvx def
    /LMIDU [ 0 pathwidth LMIDL ldiagpadd ] cvx def
    UMIDU
    0 UMIDU exch pop
    0 UMIDL exch pop
    UMIDL
    LMIDU
    0 LMIDU exch pop
    0 LMIDL exch pop
    LMIDL
  } ifelse
  0 0
} def

% shape and labels of the @HalfOpenCurvedArrowHead symbol
% <pathwidth> <pathgap> ldiaghalfopencurvedarrowhead -
/ldiaghalfopencurvedarrowhead
{
  /pathgap exch def
  /pathwidth exch def
  /LR [ 0 0 xsize ysize 0.5 mul ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /UR [ xsize ysize 0.5 mul 0 ysize ldiaglinebetween
	xsize 0 xsize ysize ldiaglineintersect
      ] cvx def
  /BR [ 0 0 LR 0 ysize UR ldiaglineintersect ] cvx def
  /BRAD [ 0 0 BR ldiagdistance ] cvx def
  /PW2 [ pathwidth 0.5 mul ] cvx def
  0 0
  [LR clockwise]
  xsize ysize 0.5 mul
  [UR clockwise]
  0 ysize
  [BR clockwise]
  pathgap 0 eq
  {
    /XDIST [ BRAD dup mul PW2 dup mul sub sqrt ] cvx def
    /UMID [ BR XDIST PW2 ldiagpadd ] cvx def
    /LMID [ BR XDIST 0 PW2 sub ldiagpadd ] cvx def
    UMID
    0 ysize 0.5 mul PW2 add
    0 ysize 0.5 mul PW2 sub
    LMID
  }
  {
    /XDIST [ BRAD dup mul PW2 dup mul sub sqrt ] cvx def
    /UMIDU [ BR XDIST PW2 pathgap 0.5 mul add ldiagpadd ] cvx def
    /UMIDL [ 0 pathwidth UMIDU ldiagpsub ] cvx def
    /LMIDL [ BR XDIST 0 PW2 sub pathgap 0.5 mul sub ldiagpadd ] cvx def
    /LMIDU [ 0 pathwidth LMIDL ldiagpadd ] cvx def
    UMIDU
    0 UMIDU exch pop
    0 UMIDL exch pop
    UMIDL
    LMIDU
    0 LMIDU exch pop
    0 LMIDL exch pop
    LMIDL
  } ifelse
  [BR clockwise]
  0 0
} def

% shape and labels of the @ManyArrowHead symbol
% <pathwidth> ldiagmanyarrowhead -
/ldiagmanyarrowhead
{
  /pathwidth exch def
  /LL [ 0 ysize 2 div pathwidth 2 div sub ] cvx def
  /LU [ 0 ysize 2 div pathwidth 2 div add ] cvx def
  LL
  xsize 0
  xsize pathwidth
  LU
  LL
  []
  LL
  xsize LL exch pop
  xsize LU exch pop
  LU
  LL
  []
  LL
  xsize ysize pathwidth sub
  xsize ysize
  LU
  LL
} def

end
%%EndResource

%%BeginResource: procset LoutGraphPrependGraphic
% @PrependGraphic file /home/arnau/lout.lib/include/graphf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Graph (Version 1.0)       %
%                                                                    %
%  Version 1.0 by Jeffrey H. Kingston, December 1993.                %
%  swapxandy added September 2001 by JHK.                            %
%                                                                    %
%  This file has been placed in the public domain by its author,     %
%  Jeffrey H. Kingston                                               %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup lgraphdict exch known
	 { lgraphdict exch get }
	 { 30 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 30 string cvs show
      } stopped {} if
      showpage stop
   } def
end

/lgraphdebugposy 432 def
/lgraphdebugposx 72 def

% - lgraphdebugnextline -
/lgraphdebugnextline
{
  lgraphdebugposy 72 lt
  { /lgraphdebugposx lgraphdebugposx 144 add store
    /lgraphdebugposy 432 store
  }
  {
    /lgraphdebugposy lgraphdebugposy 12 sub store
  } ifelse
  lgraphdebugposx lgraphdebugposy moveto
} def

% - lgraphdebugbeginindent -
/lgraphdebugbeginindent
{
  /lgraphdebugposx lgraphdebugposx 12 add store
} def

% - lgraphdebugendindent -
/lgraphdebugendindent
{
  /lgraphdebugposx lgraphdebugposx 12 sub store
} def

% <string> <int> lgraphdebugprint -
% must be defined outside lgraphdict since used in arbitrary places
% print <string> plus count or <int> stack entries, whichever is the smaller
/lgraphdebugprint
{
  exch
  gsave
  initgraphics
  lgraphdebugnextline
  /Times-Roman findfont 10 scalefont setfont
  0 setgray show
  lgraphdebugbeginindent
  count 1 sub 2 copy lt { pop } { exch pop } ifelse 1 sub
  0 exch 1 exch
  {
    lgraphdebugnextline
    index
    dup type (dicttype) eq
    {
      (begin dict) show
      lgraphdebugbeginindent
      {
	lgraphdebugnextline
	pop 100 string cvs show
      } forall
      lgraphdebugendindent
      lgraphdebugnextline
      (end dict) show
    }
    {
      dup type (arraytype) eq
      {
        (begin array) show
        lgraphdebugbeginindent
	{
	  lgraphdebugnextline
	  100 string cvs show
	} forall
	lgraphdebugendindent
	lgraphdebugnextline
        (end array) show
      }
      {
        100 string cvs show
      } ifelse
    } ifelse
  } for
  lgraphdebugendindent
  grestore
} def


/lgraphdict 200 dict def
lgraphdict begin

% error messages
/dictfull (dictfull error) def
/dictstackoverflow (dictstackoverflow error) def
/execstackoverflow (execstackoverflow error:  expression too complex?) def
/limitcheck (limitcheck error:  graph too complex or too large?) def
/syntaxerror (syntaxerror error:  syntax error in text of graph?) def
/typecheck (typecheck error:  syntax error in text of graph?) def
/undefined (undefined error:  unknown or misspelt symbol?) def
/rangecheck (rangecheck error:  undefined expression (e.g. divide by zero)?) def
/VMError (VMError error:  run out of memory?) def

% random number between x and y inclusive: x y dorand num
/dorand { 1 index sub 1 add rand exch mod add } def

% log to given base: base num dolog num
/dolog { ln exch ln div } def

% maximum of two numbers:  <num> <num> max <num>
/max { 2 copy gt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> padd <point>
/padd { exch 3 1 roll add 3 1 roll add exch } def

% subtract first point from second:  <point> <point> psub <point>
/psub { 3 2 roll sub 3 1 roll exch sub exch } def

% distance between two points:  <point> <point> distance <length>
/distance { psub dup mul exch dup mul add sqrt } def

% point at angle and distance:  <point> <length> <angle> atangle <point>
/atangle { 2 copy cos mul 3 1 roll sin mul padd } def

% angle from one point to another:  <point> <point> angle <angle>
/angle { psub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse } def


% set up for line
% - linesetup <length> <dashlength>
/linesetup
{ newpath
  xcurr ycurr trpoint xprev yprev trpoint
  4 copy moveto lineto distance dashlength
} def

% set up for icon-avoiding line
% - ilinesetup <length> <dashlength>
/ilinesetup
{ newpath
  xprev yprev trpoint xcurr ycurr trpoint 4 copy
  4 copy angle symbolsize 1.5 mul exch 4 2 roll pop pop atangle
  6 2 roll 4 2 roll
  4 copy angle symbolsize 1.5 mul exch 4 2 roll pop pop atangle 
  4 copy moveto lineto distance dashlength
} def


% stroke a solid line:  <length> <dashlength> solid -
/solid
{ pop pop [] 0 setdash linewidth setlinewidth stroke
} def
  
% stroke a dashed line:   <length> <dashlength> dashed -
/dashed
{  2 copy 2 mul le 1 index 0 le or
   {  exch pop 1 pt max [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse linewidth setlinewidth stroke
} def

% stroke a cdashed line:  <length> <dashlength> cdashed -
/cdashed
{  2 copy le 1 index 0 le or
   { exch pop 1 pt max [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse linewidth setlinewidth stroke
} def

% stroke a dotted line:  <length> <dashlength> dotted -
/dotted
{  2 copy le 1 index 0 le or
   { exch pop 1 pt max [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div 0.99999 mul
     [ 0 3 2 roll ] 0 setdash
   } ifelse gsave 1 setlinecap linewidth setlinewidth stroke grestore newpath
} def

% stroke a noline line:  <length> <dashlength> noline -
/noline
{ pop pop
} def

% scale array elements by factor:  <array> <factor> scalearray <array>
/scalearray
{
  [ exch 3 2 roll
  { exch dup 3 1 roll mul exch } forall
  pop ]
} def

% sum array elements:  <array> sumarray <number>
/sumarray
{
  0 exch { add } forall
} def

% begin a more complex line: <length> <dashlength> linebegin -
/linebegin
{
  % (Entering linebegin) 2 debugprint
  20 dict begin
  /dashlen exch 1 pt max def
  /len exch def
  /gap dashlen def
  /halfgap dashlen 2 div def
  /dash dashlen def
  /halfdash dashlen 2 div def
  /dot 0 def
  % (Leaving linebegin) 0 debugprint
} def
% end a more complex line: <linecap> <cycle> <startpos> <stoppos> lineend -
/lineend
{
  % (Entering lineend) 3 debugprint
  /stoppos exch def
  /startpos exch def
  /cycle exch def
  /linecap exch def
  /stopposlen stoppos sumarray def
  /startposlen startpos sumarray def
  /cyclelen cycle sumarray def
  /effectivelen len startposlen add stopposlen sub def
  effectivelen 0 gt cyclelen 0 gt and
  {
    /repeats effectivelen cyclelen div ceiling def
    /factor len repeats cyclelen mul startposlen sub stopposlen add div def
    cycle factor scalearray startposlen factor mul setdash
    linecap setlinecap stroke
  } if
  end
  % (Leaving lineend) 0 debugprint
} def

% stroke a dotdashed line: <length> <dashlength> dotdashed -
/dotdashed
{
  linebegin
  1 [dash gap dot gap] [] [dash]
  lineend
} def

% stroke a dotcdashed line: <length> <dashlength> dotcdashed -
/dotcdashed
{
  linebegin
  1 [dash gap dot gap] [halfdash] [halfdash]
  lineend
} def

% stroke a dotdotdashed line: <length> <dashlength> dotdotdashed -
/dotdotdashed
{
  linebegin
  1 [dash gap dot gap dot gap] [] [dash]
  lineend
} def

% stroke a dotdotcdashed line: <length> <dashlength> dotdotcdashed -
/dotdotcdashed
{
  linebegin
  1 [dash gap dot gap dot gap] [halfdash] [halfdash]
  lineend
} def

% stroke a dotdotdotdashed line: <length> <dashlength> dotdotdotdashed -
/dotdotdotdashed
{
  linebegin
  1 [dash gap dot gap dot gap dot gap] [] [dash]
  lineend
} def

% stroke a dotdotdotcdashed line: <length> <dashlength> dotdotdotcdashed -
/dotdotdotcdashed
{
  linebegin
  1 [dash gap dot gap dot gap dot gap] [halfdash] [halfdash]
  lineend
} def


% stroke a y histogram: - yhisto -
/yhisto
{ xprev yleft trpoint yextra sub moveto
  xprev yprev trpoint lineto
  xcurr yprev trpoint lineto
  xcurr yleft trpoint yextra sub lineto 
  linewidth setlinewidth stroke
} def

% stroke an x histogram: - xhisto -
/xhisto
{ xleft yprev trpoint exch xextra sub exch moveto
  xcurr yprev trpoint lineto
  xcurr ycurr trpoint lineto
  xleft ycurr trpoint exch xextra sub exch lineto 
  linewidth setlinewidth stroke
} def

% stroke a surface y histogram: - surfaceyhisto -
/surfaceyhisto
{ firstpair
  { xprev yleft trpoint yextra sub moveto
    xprev yprev trpoint lineto
  }
  { xprev yprev trpoint moveto
  } ifelse
  xcurr yprev trpoint lineto
  lastpair
  { xcurr yleft trpoint yextra sub lineto 
  }
  { xcurr ycurr trpoint lineto
  } ifelse
  linewidth setlinewidth stroke
} def

% stroke a surface x histogram: - surfacexhisto -
/surfacexhisto
{ firstpair
  { xleft yprev trpoint exch xextra sub exch moveto
  }
  { xprev yprev trpoint moveto
  } ifelse
  xcurr yprev trpoint lineto
  xcurr ycurr trpoint lineto
  lastpair
  { xleft ycurr trpoint exch xextra sub exch lineto 
  } if
  linewidth setlinewidth stroke
} def

% % pre-texture versions
% % stroke a filled y histogram: - filledyhisto -
% /filledyhisto
% {
%   linewidth setlinewidth
%   xprev yleft trpoint exch currentlinewidth 2 div add exch yextra sub moveto
%   xprev yprev trpoint exch currentlinewidth 2 div add exch lineto
%   xcurr yprev trpoint exch currentlinewidth 2 div sub exch lineto
%   xcurr yleft trpoint exch currentlinewidth 2 div sub exch yextra sub lineto 
%   closepath fill
% } def

% % stroke a filled x histogram: - filledxhisto -
% /filledxhisto
% {
%   linewidth setlinewidth
%   xleft yprev trpoint currentlinewidth 2 div add exch xextra sub exch moveto
%   xcurr yprev trpoint currentlinewidth 2 div add lineto
%   xcurr ycurr trpoint currentlinewidth 2 div sub lineto
%   xleft ycurr trpoint currentlinewidth 2 div sub exch xextra sub exch lineto 
%   closepath fill
% } def

% stroke a filled y histogram: - filledyhisto -
/filledyhisto
{
  linewidth setlinewidth
  xprev yleft trpoint exch currentlinewidth 1.3 mul add exch yextra sub moveto
  xprev yprev trpoint exch currentlinewidth 1.3 mul add exch lineto
  xcurr yprev trpoint exch currentlinewidth 1.3 mul sub exch lineto
  xcurr yleft trpoint exch currentlinewidth 1.3 mul sub exch yextra sub lineto 
  gsave texture fill grestore stroke
} def

% stroke a filled x histogram: - filledxhisto -
/filledxhisto
{
  linewidth setlinewidth
  xleft yprev trpoint currentlinewidth 1.3 mul add exch xextra sub exch moveto
  xcurr yprev trpoint currentlinewidth 1.3 mul add lineto
  xcurr ycurr trpoint currentlinewidth 1.3 mul sub lineto
  xleft ycurr trpoint currentlinewidth 1.3 mul sub exch xextra sub exch lineto 
  gsave texture fill grestore stroke
} def


% docross: show a cross with a given symbolsize and symbollinewidth
% <x> <y> <symbolsize> <symbollinewidth> docross -
/docross
{
  setlinewidth
  /ss exch def
  newpath
  moveto
  ss neg ss neg rmoveto
  ss 2 mul ss 2 mul rlineto
  0 ss -2 mul rmoveto
  ss -2 mul ss 2 mul rlineto
  [] 0 setdash 0 setlinecap stroke
} def

% cross: show a cross
% - cross -
/cross { xcurr ycurr trpoint symbolsize symbollinewidth docross } def

% doplus: show a plus with a given symbolsize and symbollinewidth
% <x> <y> <symbolsize> <symbollinewidth> doplus -
/doplus
{
  setlinewidth
  /ss exch def
  newpath
  moveto
  ss neg 0 rmoveto
  ss 2 mul 0 rlineto
  ss neg ss neg rmoveto
  0 ss 2 mul rlineto
  [] 0 setdash 0 setlinecap stroke
} def

% plus: show a plus
% - plus -
/plus { xcurr ycurr trpoint symbolsize symbollinewidth doplus } def

% dosquare: show an open square with a given symbolsize and symbollinewidth
% NB symbolsize is reduced by half the line width to get size exactly right
% <x> <y> <symbolsize> <symbollinewidth> dosquare -
/dosquare
{
  dup setlinewidth
  0.5 mul sub 0 max /ss exch def
  newpath
  moveto
  ss neg ss neg rmoveto
  ss 2 mul 0 rlineto
  0 ss 2 mul rlineto
  ss -2 mul 0 rlineto
  closepath [] 0 setdash stroke
} def

% square: show an open square
% - square -
/square { xcurr ycurr trpoint symbolsize symbollinewidth dosquare } def

% dofilledsquare: show filled square with given symbolsize and symbollinewidth
% NB symbollinewidth is not used
% <x> <y> <symbolsize> <symbollinewidth> dofilledsquare -
/dofilledsquare
{
  pop /ss exch def
  newpath
  moveto
  ss neg ss neg rmoveto
  ss 2 mul 0 rlineto
  0 ss 2 mul rlineto
  ss -2 mul 0 rlineto
  closepath fill
} def

% filledsquare: show a filled square
% - filledsquare -
/filledsquare { xcurr ycurr trpoint symbolsize symbollinewidth dofilledsquare } def

% dodiamond: show an open diamond with a given symbolsize and symbollinewidth
% NB symbolsize is reduced by half the line width to get size exactly right
% <x> <y> <symbolsize> <symbollinewidth> dodiamond -
/dodiamond
{
  dup setlinewidth
  0.5 mul sub 0 max /ss exch def
  newpath
  moveto
  ss neg 0 rmoveto
  ss ss neg rlineto
  ss ss rlineto
  ss neg ss rlineto
  closepath [] 0 setdash stroke
} def

% diamond: show an open diamond
% - diamond -
/diamond { xcurr ycurr trpoint symbolsize symbollinewidth dodiamond } def

% dofilleddiamond: show filled diamond with given symbolsize and symbollinewidth
% NB symbollinewidth is not used
% <x> <y> <symbolsize> <symbollinewidth> dofilleddiamond -
/dofilleddiamond
{
  pop /ss exch def
  newpath
  moveto
  ss neg 0 rmoveto
  ss ss neg rlineto
  ss ss rlineto
  ss neg ss rlineto
  closepath fill
} def

% filleddiamond: show a filled diamond
% - filleddiamond -
/filleddiamond { xcurr ycurr trpoint symbolsize symbollinewidth dofilleddiamond } def

% docircle: show an open circle with a given symbolsize and symbollinewidth
% NB symbolsize is reduced by half the line width to get size exactly right
% <x> <y> <symbolsize> <symbollinewidth> docircle -
/docircle
{
  dup setlinewidth
  0.5 mul sub 0 max /ss exch def
  newpath
  ss 0 360 arc [] 0 setdash stroke
} def

% circle: show an open circle
% - circle -
/circle { xcurr ycurr trpoint symbolsize symbollinewidth docircle } def

% dofilledcircle: show filled circle with given symbolsize and symbollinewidth
% NB symbollinewidth is not used
% <x> <y> <symbolsize> <symbollinewidth> dofilledcircle -
/dofilledcircle
{
  pop /ss exch def
  newpath
  ss 0 360 arc fill
} def

% filledcircle: show a filled circle
% - filledcircle -
/filledcircle { xcurr ycurr trpoint symbolsize symbollinewidth dofilledcircle } def

% dotriangle: show an open triangle with a given symbolsize and symbollinewidth
% NB symbolsize is reduced by half the line width to get size exactly right
% <x> <y> <symbolsize> <symbollinewidth> dotriangle -
/dotriangle
{
  dup setlinewidth
  0.5 mul sub 0 max /ss exch def
  newpath
  moveto
  0 ss 1.5 mul rmoveto
  ss neg ss -2.5 mul rlineto
  ss 2 mul 0 rlineto
  closepath [] 0 setdash stroke
} def

% triangle: show an open triangle
% - triangle -
/triangle { xcurr ycurr trpoint symbolsize symbollinewidth dotriangle } def

% dofilledtriangle: show filled triangle with symbolsize and symbollinewidth
% NB symbollinewidth is not used
% <x> <y> <symbolsize> <symbollinewidth> dofilledtriangle -
/dofilledtriangle
{
  pop /ss exch def
  newpath
  moveto
  0 ss 1.5 mul rmoveto
  ss neg ss -2.5 mul rlineto
  ss 2 mul 0 rlineto
  closepath fill
} def

% filledtriangle: show a filled triangle
% - filledtriangle -
/filledtriangle { symbolsize symbollinewidth dofilledtriangle } def


%plog: like log only with a base, and protected from failing if <= 0
% base x plog res
/plog { dup 0 le { pop pop 0 } { ln exch ln div } ifelse } def

% xtr: transform one x value logarithmically if xlog > 1
% <num> xtr <num>
/xtr
{ xlog 1 gt
  { xlog exch plog
  } if
} def

% ytr: transform one y value logarithmically if ylog > 1
% <num> ytr <num>
/ytr
{ ylog 1 gt
  { ylog exch plog
  } if
} def


% trpoint: transform (x, y) in graph space into (x', y') in print space
% x y trpoint x' y'
/trpoint
{ exch xtr xdecr { trxmax exch sub } { trxmin sub } ifelse
  trxmax trxmin sub div xwidth mul xextra add

  exch ytr ydecr { trymax exch sub } { trymin sub } ifelse
  trymax trymin sub div ywidth mul yextra add
} def


% yonly: interpolate x values 1, 2, ... into data
% [ data ] yonly [ newdata ]
/yonly
{ dup /tmp exch def
  length [ exch 1 exch 1 exch
  { dup tmp exch 1 sub get
  } for
  ]
} def

% xonly: interpolate y values 1, 2, ... into data
% [ data ] yonly [ newdata ]
/xonly
{ dup /tmp exch def
  length [ exch 1 exch 1 exch
  { dup tmp exch 1 sub get exch
  } for
  ]
} def

% xandy: no interpolation of x or y values
% [ data ] xandy [ data ]
/xandy {} def

% swapxandy: swap x and y values
% [ data ] swapxandy [ data ]
/swapxandy
{ dup /tmp exch def
  length [ exch 2 exch 2 exch
  { dup tmp exch 1 sub get exch 2 sub tmp exch get
  } for
  ]
} def


% expstringwidth: calculate width of string containing optional exponent
% <string> expstringwidth <width>
/expstringwidth
{ (^) search
  { exch pop stringwidth pop exch stringwidth pop 0.7 mul add }
  { stringwidth pop }
  ifelse
} def

% expstringshow: show string containing optional exponent
% <string> expstringshow -
/expstringshow
{ (^) search
  { exch pop show 0 0.5 ft rmoveto
    gsave currentfont 0.7 scalefont setfont show grestore
  }
  { show
  }
  ifelse
} def

% concatenate two strings: <string> <string> strconcat <string>
/strconcat
{ 2 copy length exch length add string
  dup 0 4 index putinterval
  dup 3 index length 3 index putinterval
  3 1 roll pop pop
} def

% lgen: generate one label automatically
% num lgen num string
/lgen { dup 20 string cvs } def

% loglgen: generate one logarithmic label (with exponent)
% <base> <exponent> loglgen <string>
/loglgen
{ 20 string cvs exch 20 string cvs
  (^) strconcat exch strconcat
} def


% printxtick: print one x tick
% xpos printxtick -
/printxtick
{ newpath
  yleft trpoint moveto 0 yextra neg rmoveto
  0 xticklength neg rlineto [] 0 setdash stroke
} def

% printxgrid: print one x grid line
% xpos printxgrid -
/printxgrid
{ dup newpath
  yleft trpoint moveto 0 yextra neg rmoveto
  yright trpoint lineto 0 yextra rlineto [] 0 setdash stroke
} def

% printxlabel: print one x label
% (xlabel) xpos printxlabel -
/printxlabel
{ yleft trpoint moveto 0 yextra neg rmoveto
  0 xticklength neg rmoveto 0 0.9 ft neg rmoveto
  xlog 1 gt { 0 0.3 ft neg rmoveto } if
  dup expstringwidth -2 div 0 rmoveto expstringshow
} def

% printytick: print one y tick
% ypos printytick -
/printytick
{ newpath
  xleft exch trpoint moveto xextra neg 0 rmoveto
  yticklength neg 0 rlineto [] 0 setdash stroke
} def

% printygrid: print one y grid line
% ypos printygrid -
/printygrid
{ dup newpath
  xleft exch trpoint moveto xextra neg 0 rmoveto
  xright exch trpoint lineto xextra 0 rlineto [] 0 setdash stroke
} def

% printylabel: print one y label
% (ylabel) ypos printylabel -
/printylabel
{ xleft exch trpoint moveto xextra neg 0 rmoveto
  yticklength neg 0 rmoveto -0.3 ft -0.3 ft rmoveto
  dup expstringwidth neg 0 rmoveto expstringshow
} def

% printrtick: print one r tick
% ypos printrtick -
/printrtick
{ newpath
  xright exch trpoint moveto xextra 0 rmoveto
  rticklength 0 rlineto [] 0 setdash stroke
} def

% printrlabel: print one r label
% (rlabel) ypos printrlabel -
/printrlabel
{ xright exch trpoint moveto xextra 0 rmoveto
  rticklength 0 rmoveto  0.3 ft -0.3 ft rmoveto
  expstringshow
} def

% printticks: print ticks and labels
% /tickproc /labelproc [ tickandlabeldata ] min printticks -
/printticks
{ /prev exch def
  { dup type dup dup /integertype eq exch /realtype eq or
    { pop dup /prev exch def 2 index cvx exec
    }
    { /stringtype eq
      { prev 2 index cvx exec
      }
      { pop
      } ifelse
    } ifelse
  } forall
  pop pop
} def


% printxaxistick: print one x axis tick
% xpos printxaxistick -
/printxaxistick
{ newpath
  yaxis trpoint moveto 0 xticklength -2 div rmoveto
  0 xticklength rlineto [] 0 setdash stroke
} def

% printxaxislabel: print one x axis label
% (xlabel) xpos printxaxislabel -
/printxaxislabel
{ yaxis trpoint moveto
  0 xticklength -2 div rmoveto 0 0.9 ft neg rmoveto
  xlog 1 gt { 0 0.3 ft neg rmoveto } if
  dup expstringwidth -2 div 0 rmoveto expstringshow
} def

% printyaxistick: print one y axis tick
% ypos printyaxistick -
/printyaxistick
{ newpath
  xaxis exch trpoint moveto
  yticklength -2 div 0 rmoveto
  yticklength 0 rlineto [] 0 setdash stroke
} def

% printyaxislabel: print one y axis label
% (ylabel) ypos printyaxislabel -
/printyaxislabel
{ xaxis exch trpoint moveto
  yticklength -2 div 0 rmoveto -0.3 ft -0.3 ft rmoveto
  dup expstringwidth neg 0 rmoveto expstringshow
} def


% <val> minmax -
% perform minv := min(minv, val); maxv := max(maxv, val)
% allowing for the possibility of minv, maxv, val being false (undefined)
/minmax
{ dup false eq
  { pop }
  { minv false eq
    { dup /minv exch def /maxv exch def }
    { dup minv lt
      { /minv exch def }
      { dup maxv gt
	{ /maxv exch def }
	{ pop }
	ifelse
      } ifelse
    } ifelse
  } ifelse
} def

% <ticks> ticksundef <ticks> <bool>
% returns true iff the ticks array is undefined (one false entry)
/ticksundef
{ dup length 1 eq
  { dup 0 get false eq
  }
  { false }
  ifelse
} def

% <number> integral <boolean>
% true if the number has an integral value
/integral { dup round eq } def

% ticksep ticks xory alldata minval maxval axis base ticksandlimits ticks min max base
% ticksandlimits: sort out value of x or y ticks and limits and log base
/ticksandlimits
{ /base exch def
  /minv false def
  /maxv false def

  % min and max of user-supplied minval, maxval, and axis
  minmax minmax minmax

  % min and max of data points
  { 0 get dup dup length 1 sub 3 index exch 2 exch
    { get minmax dup
    } for pop pop
  } forall
  pop dup

  % min and max of tick values
  { dup type /stringtype eq
    { pop } { minmax } ifelse
  } forall

  % fix minv and maxv if undefined (false) or equal
  minv false eq
  { /minv -1 def /maxv 1 def }
  { minv maxv eq
    { minv 0 lt
      { /minv 2 minv mul def /maxv 0 def
      }
      { minv 0 eq
	{ /minv -1 def /maxv 1 def
	}
	{ /minv 0 def /maxv 2 maxv mul def
	} ifelse
      } ifelse
    } if
  } ifelse

  % invent ticks if undefined
  ticksundef
  { pop /ticksep exch def

    % if base is reasonable and minv is positive, logarithmic ticks
    base 1 gt minv 0 gt and
    {
      % get integral log of minv and maxv
      /logminv base minv plog floor   cvi def
      /logmaxv base maxv plog ceiling cvi def

      % if minv close to base, make it 1; reset minv and maxv
      logminv 1 eq logmaxv 4 ge and { /logminv 0 def } if
      /minv base logminv exp def
      /maxv base logmaxv exp def

      % ticks := [ base**logminv, ... , base**logmaxv ]
      [ logminv 1 logmaxv
	{ dup base exch exp
	  exch base exch loglgen
	} for
      ]
    }
    { % non-logarithmic ticks
      {
        % fix tick separation if undefined (0) or too small
	/base 0 def
        /delta maxv minv sub def
        ticksep delta 30 div le
        { /ticksep 10 delta log 1 sub ceiling exp def
	  ticksep delta 2 div ge
	  { /ticksep ticksep 2 div def }
	  { ticksep delta 5 div lt
	    { /ticksep 2 ticksep mul def
	    } if
	  } ifelse
        } if

        % adjust minv and maxv to be multiples of ticksep
        /minv minv ticksep div floor   ticksep mul def
        /maxv maxv ticksep div ceiling ticksep mul def
        /delta maxv minv sub def

        % if minv or maxv near zero, move to zero and redo
        minv ticksep eq
        { /minv 0 def }
        { maxv ticksep neg eq { /maxv 0 def } { exit } ifelse
        } ifelse
      } loop

      % if minv, maxv, and ticksep are all integral, set "makeint" to true
      /makeint minv integral maxv integral ticksep integral and and def

      % ticks := [ minv, minv+ticksep, ... , maxv ]
      [ 0 1 delta ticksep div round
	{ ticksep mul minv add makeint { cvi } if lgen }
	for
      ]
    } ifelse
  }
  { exch pop
  } ifelse
  minv maxv base
} def

% xset: set up all data for x axis, including limits and ticks
% xticksep xticks 0 alldata xmin xmax xlog xextra xdecr xaxis xticklength xset -
/xset
{ /xticklength exch def
  /xaxis exch def
  /xdecr exch def
  /xextra exch def
  xaxis exch ticksandlimits
  /xlog exch def /xmax exch def /xmin exch def /xticks exch def
  /xleft xdecr { xmax } { xmin } ifelse def
  /xright xdecr { xmin } { xmax } ifelse def
  /xwidth xsize xextra 2 mul sub def
  /trxmin xmin xtr def /trxmax xmax xtr def
} def

% yset: set up all data for y axis, including limits and yticks
% yticksep yticks 0 alldata ymin ymax ylog yextra ydecr yaxis yticklength yset -
/yset
{ /yticklength exch def
  /yaxis exch def
  /ydecr exch def
  /yextra exch def
  yaxis exch ticksandlimits
  /ylog exch def /ymax exch def /ymin exch def /yticks exch def
  /yleft ydecr { ymax } { ymin } ifelse def
  /yright ydecr { ymin } { ymax } ifelse def
  /ywidth ysize yextra 2 mul sub def
  /trymin ymin ytr def /trymax ymax ytr def
} def

% rset: set up all data for y axis (again), but including limits and rticks
% rticksep rticks 0 alldata ymin ymax ylog yextra ydecr yaxis rticklength rset -
/rset
{ /rticklength exch def
  /yaxis exch def
  /ydecr exch def
  /yextra exch def
  yaxis exch ticksandlimits
  /ylog exch def /ymax exch def /ymin exch def /rticks exch def
  /yleft ydecr { ymax } { ymin } ifelse def
  /yright ydecr { ymin } { ymax } ifelse def
  /ywidth ysize yextra 2 mul sub def
  /trymin ymin ytr def /trymax ymax ytr def
} def

% norset: set up data for no rticks
% - norset -
/norset
{ /rticklength 0 def
  /rticks [] def
} def

% framestyle: print a frame around the graph
/framestyle
{ 0 0 moveto xsize 0 lineto xsize ysize lineto
  0 ysize lineto closepath stroke
  /printxtick /printxlabel xticks xleft printticks
  /printytick /printylabel yticks ymin printticks
  /printrtick /printrlabel rticks ymin printticks
} def

% gridstyle: print a frame around the graph, plus a grid
/gridstyle
{ 0 0 moveto xsize 0 lineto xsize ysize lineto
  0 ysize lineto closepath stroke
  /printxgrid /printxlabel xticks xleft printticks
  /printygrid /printylabel yticks ymin printticks
  /printrtick /printrlabel rticks ymin printticks
} def

% nonestyle: print nothing around the graph
/nonestyle
{
} def

% axesstyle: print axes for the graph (unless axis values missing)
/axesstyle
{
  xaxis false eq yaxis false eq or
  { framestyle }
  { xaxis yaxis trpoint dup 0 exch moveto xsize exch lineto
    dup 0 moveto ysize lineto stroke
    /printxaxistick /printxaxislabel xticks xleft printticks
    /printyaxistick /printyaxislabel yticks ymin printticks
  } ifelse
} def

% rundata: run all data sets
/rundata
{ alldata
  { gsave
    dup dup dup dup dup
    5 get /texture exch def
    4 get /dopaint exch def
    3 get /initrun exch def
    2 get /pairs exch def
    1 get /points exch def
    0 get /data exch def
    dopaint
    { data length 4 ge
      {
	gsave
	initrun
	newpath
	data 0 get ymin trpoint yextra sub moveto
	0 2 data length 2 sub
	{ dup 1 add
	  data exch get /ycurr exch def
	  data exch get /xcurr exch def
	  xcurr ycurr trpoint lineto
	} for
	data dup length 2 sub get ymin trpoint yextra sub lineto
	closepath texture fill
	grestore
      } if
    } if
    initrun
    data length 2 ge
    {
      /xcurr data 0 get def
      /ycurr data 1 get def
      points
      data length 4 ge
      { 2 2 data length 2 sub
	{ /xprev xcurr def
          /yprev ycurr def
	  dup dup 2 eq /firstpair exch def
	  data length 2 sub eq /lastpair exch def
	  dup 1 add
          data exch get /ycurr exch def
          data exch get /xcurr exch def
	  pairs
	  points
	} for
      } if
    } if
    grestore
  } forall
} def

end
%%EndResource

%%BeginResource: procset LoutPiePrependGraphic
% @PrependGraphic file /home/arnau/lout.lib/include/pief.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @Pie  Jeffrey H. Kingston  %
%  Version 1.0                                                       %
%                                                                    %
%  Jeffrey H. Kingston                                               %
%  October 2002                                                      %
%                                                                    %
%  This file has been placed in the public domain by its author,     %
%  Jeffrey H. Kingston                                               %
%                                                                    %
%  To assist in avoiding name clashes, the names of all symbols      %
%  defined here begin with "lpie".                                   %
%                                                                    %
%  <point>      is two numbers, a point.                             %
%  <length>     is one number, a length                              %
%  <angle>      is one number, an angle in degrees                   %
%  <dashlength> is one number, the preferred length of a dash        %
%                                                                    %
%  The following invariant is maintained from the end of the         %
%  call to lpiebegin to the beginning of the call to lpieend:        %
%                                                                    %
%  lpiecentre        is an executable function which leaves the two  %
%                    coordinates of the centre of the pie on the     %
%                    operand stack (signature - lpiectr <x> <y>)     %
%                                                                    %
%  lpieradius        is the radius of the pie                        %
%                                                                    %
%  lpieinitangle     is the initial angle                            %
%                                                                    %
%  lpietotalweight   is the total weight of all slices               %
%                                                                    %
%  lpiecurrentweight is the total weight of all slices so far        %
%                                                                    %
%  The first four are constants set by lpiebegin; the last is        %
%  updated as each slice is printed.                                 %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% install error handler into error dictionary
errordict begin
   /handleerror
   {
      {  /Times-Roman findfont 8 pt scalefont setfont
	 0 setgray 4 pt 4 pt moveto
	 $error /errorname get
	 dup lpiedict exch known
	 { lpiedict exch get }
	 { 100 string cvs } ifelse
	 show
	 (  Command: ) show
	 $error /command get 100 string cvs show
      } stopped {} if
      showpage stop
   } def
end

% initial coordinates of debug output
/lpiedebugposy 432 def
/lpiedebugposx 72 def

% <string> <int> lpiedebugprint -
% must be defined outside lpiedict since used in arbitrary places
% print <string> plus count or <int> stack entries, whichever is the smaller
/lpiedebugprint
{
  exch
  gsave
  initgraphics
  lpiedebugposy 72 lt
  { /lpiedebugposx lpiedebugposx 144 add store
    /lpiedebugposy 432 store
  }
  {
    /lpiedebugposy lpiedebugposy 12 sub store
  } ifelse
  lpiedebugposx lpiedebugposy moveto
  /Times-Roman findfont 10 scalefont setfont
  0 setgray show
  count 1 sub 2 copy lt { pop } { exch pop } ifelse 1 sub
  0 exch 1 exch
  {
    /lpiedebugposy lpiedebugposy 12 sub store
    lpiedebugposx 12 add lpiedebugposy moveto
    index
    dup type (dicttype) eq
    {
      (begin dict) show
      {
        /lpiedebugposy lpiedebugposy 12 sub store
        lpiedebugposx 24 add lpiedebugposy moveto
	pop 100 string cvs show
      } forall
      /lpiedebugposy lpiedebugposy 12 sub store
      lpiedebugposx 12 add lpiedebugposy moveto
      (end dict) show
    }
    {
      dup type (arraytype) eq
      {
	dup xcheck { (executable array) } { (literal array) } ifelse show
	{
          /lpiedebugposy lpiedebugposy 12 sub store
          lpiedebugposx 24 add lpiedebugposy moveto
	  100 string cvs show
        } forall
        /lpiedebugposy lpiedebugposy 12 sub store
        lpiedebugposx 12 add lpiedebugposy moveto
        (end array) show
      }
      {
        dup xcheck { (ex: ) } { (lit: ) } ifelse show
        100 string cvs show
      } ifelse
    } ifelse
  } for
  grestore
} def

% name lpiedebugpoint -
/lpieshowpoint
{
  dup cvx exec moveto 20 string cvs show newpath
} def

% begin pie: <totalweight> <initialangle> lpiebegin -
% must be defined outside lpiedict since it loads it
/lpiebegin
{ lpiedict begin
  20 dict begin
  xmark ymark /lpiecentre lpiepointdef
  /lpieradius xmark def
  /lpieinitialangle exch def
  /lpietotalweight exch def
  /lpiecurrentweight 0 def
} def

% end pie: - lpieend -
/lpieend
{
  end
  end
} def

% pie dictionary
/lpiedict 200 dict def

% subsequent definitions are held within the pie dictionary
lpiedict begin

% error messages
/syntaxerror (syntaxerror error:  syntax error in text of pie chart?) def
/typecheck (typecheck error:  syntax error in text of pie chart?) def
/undefined (undefined error:  unknown or misspelt label?) def
/VMError (VMError error:  run out of memory?) def

% maximum of two numbers:  <num> <num> lpiemax <num>
/lpiemax { 2 copy gt { pop } { exch pop } ifelse } def

% minimum of two numbers:  <num> <num> lpiemin <num>
/lpiemin { 2 copy lt { pop } { exch pop } ifelse } def

% add two points:  <point> <point> lpiepadd <point>
/lpiepadd
{
  % (Entering padd) 4 lpiedebugprint
  exch 3 1 roll add 3 1 roll add exch
  % (Leaving padd) 2 lpiedebugprint
} def

% subtract first point from second:  <point> <point> lpiepsub <point>
/lpiepsub { 3 2 roll sub 3 1 roll exch sub exch } def

% max two points:  <point> <point> lpiepmax <point>
/lpiepmax { exch 3 1 roll lpiemax 3 1 roll lpiemax exch } def

% min two points:  <point> <point> lpiepmin <point>
/lpiepmin { exch 3 1 roll lpiemin 3 1 roll lpiemin exch } def

% scalar multiplication: <point> <num> lpiepmul <point>
/lpiepmul { dup 3 1 roll mul 3 1 roll mul exch } def

% distance between two points:  <point> <point> lpiedistance <length>
/lpiedistance { lpiepsub dup mul exch dup mul add sqrt } def

% point at angle and distance
% <point> <length> <angle> lpieatangle <point>
/lpieatangle { 2 copy cos mul 3 1 roll sin mul lpiepadd } def

% stroke a solid line:  <length> <dashlength> lpiesolid -
/lpiesolid
{ % (Entering lpiesolid) 2 lpiedebugprint
  gsave pop pop [] 0 setdash 1 setlinecap stroke grestore newpath
  % (Leaving lpiesolid) 0 lpiedebugprint
} def

% stroke a dashed line:   <length> <dashlength> lpiedashed -
/lpiedashed
{  gsave
   2 copy div 2 le 1 index 0 le or
   {  exch pop 1 pt lpiemax [ exch dup ] 0 setdash }
   {  dup [ exch 4 2 roll 2 copy div
      1 sub 2 div ceiling dup 4 1 roll
      1 add mul sub exch div ] 0 setdash
   } ifelse 0 setlinecap stroke
   grestore newpath
} def

% stroke a cdashed line:  <length> <dashlength> lpiecdashed -
/lpiecdashed
{  % (Entering lpiecdashed) 2 lpiedebugprint
   gsave
   2 copy le 1 index 0 le or
   { exch pop 1 pt lpiemax [ exch dup ] dup 0 get 2 div setdash }
   { dup [ 4 2 roll exch 2 copy exch div
     2 div ceiling div 1 index sub
     ] exch 2 div setdash
   } ifelse 0 setlinecap stroke
   grestore newpath
   % (Leaving lpiecdashed) 0 lpiedebugprint
} def

% stroke a dotted line:  <length> <dashlength> lpiedotted -
/lpiedotted
{  gsave
   2 copy le 1 index 0 le or
   { exch pop 1 pt lpiemax [ exch 0 exch ] 0 setdash }
   { 1 index exch div ceiling div
     [ 0 3 2 roll ] 0 setdash
   } ifelse 1 setlinecap stroke
   grestore newpath
} def

% stroke a noline line:  <length> <dashlength> lpienoline -
/lpienoline
{ pop pop
} def

% label a point in current dictionary:  <point> /name lpiepointdef -
/lpiepointdef
{
  % (Entering lpiepointdef) 3 lpiedebugprint
  [ 4 2 roll transform /itransform cvx ] cvx def
  % (Leaving lpiepointdef) 0 lpiedebugprint
} def

% find the angle that the current slice starts at
% - lpiesliceangle1 <angle>
/lpiesliceangle1
{ lpiecurrentweight lpietotalweight div 360 mul lpieinitialangle add
} def

% find the angle that the current slice stops at
% - lpiesliceangle2 <angle>
/lpiesliceangle2
{ weight lpiecurrentweight add lpietotalweight div 360 mul lpieinitialangle add
} def

% find the angle that bisects the current slice
% - lpieslicemidangle <angle>
/lpieslicemidangle
{ weight 2 div lpiecurrentweight add lpietotalweight div 360 mul lpieinitialangle add
} def

% update the total weight
% - lpieupdateweight -
/lpieupdateweight
{ weight lpiecurrentweight add /lpiecurrentweight exch def
} def

% find the apex of the slice
% - lpiesliceapex <x> <y>
/lpiesliceapex
{ lpiecentre lpieradius detach mul lpieslicemidangle lpieatangle
} def

% find the end of the first arm of the slice
% - lpieslicearm1 <x> <y>
/lpieslicearm1
{ lpiesliceapex lpieradius lpiesliceangle1 lpieatangle
} def

% find the end of the second arm of the slice
% - lpieslicearm2 <x> <y>
/lpieslicearm2
{ lpiesliceapex lpieradius lpiesliceangle2 lpieatangle
} def

% set the whole closed path for the current slice
% - lpiesetslicepath -
/lpiesetslicepath
{ newpath lpiesliceapex moveto
  currentpoint lpieradius lpiesliceangle1 lpiesliceangle2 arc
  closepath
} def

% set the first segment of the current slice and return its length
% - lpiesetsegment1 <length>
/lpiesetsegment1
{ newpath lpiesliceapex moveto lpieslicearm1 lineto
  lpieradius
} def

% set the second segment of the current slice and return its length
% - lpiesetsegment2 <length>
/lpiesetsegment2
{ newpath lpiesliceapex moveto lpieslicearm2 lineto
  lpieradius
} def

% set the arc segment of the current slice and return its length
% - lpiesetarcsegment <length>
/lpiesetarcsegment
{ newpath
  lpiesliceapex lpieradius lpiesliceangle1 lpiesliceangle2 arc
  lpiesliceangle2 lpiesliceangle1 sub 180 div 3.14159 mul lpieradius mul
} def

% draw one slice
% <dashlength> [ <outlinecommand> ] <outlinewidth> { <paintcommand> }
% <weight> <detach> lpiedrawslice -
/lpiebeginslice
{
  % (Entering lpiebeginslice) 6 lpiedebugprint
  /detach exch def
  /weight exch def

  % paint the slice
  gsave lpiesetslicepath exec grestore

  % set the line width
  setlinewidth

  % stroke each segment separately to get dashes right
  2 copy lpiesetsegment1 3 1 roll
  dup length 0 exch mod get cvx
  % (Stroking segment1) count 1 sub lpiedebugprint
  exec

  2 copy lpiesetarcsegment 3 1 roll
  dup length 1 exch mod get cvx
  % (Stroking arc segment) count 1 sub lpiedebugprint
  exec

  lpiesetsegment2 3 1 roll
  dup length 2 exch mod get cvx
  % (Stroking segment2) count 1 sub lpiedebugprint
  exec

  % (Leaving lpiebeginslice) 0 lpiedebugprint
} def

% finish off one slice
/lpieendslice
{
  % (Entering lpieendslice) 0 lpiedebugprint

  % update current weight ready for next slice
  lpieupdateweight

  % (Leaving lpieendslice) 0 lpiedebugprint
} def

% translate label
% <xadjust> <yadjust> <labelradius> lpietranslatelabel -
/lpietranslatelabel
{
  % (Entering lpietranslatelabel) 3 lpiedebugprint 
  /labelradius exch def
  % lpiecentre (lpiecentre:) 2 lpiedebugprint pop pop
  % lpieradius (lpieradius:) 1 lpiedebugprint pop
  % labelradius (labelradius:) 1 lpiedebugprint pop
  % lpieslicemidangle (lpieslicemidangle:) 1 lpiedebugprint pop
  xsize 2 div ysize 2 div /labelcentre lpiepointdef
  labelcentre
  lpiesliceapex lpieradius labelradius mul lpieslicemidangle lpieatangle lpiepsub
  lpiepadd
  translate
  % (Leaving lpietranslatelabel) 0 lpiedebugprint 
} def

% fix an angle to 0 <= res < 360:  <angle> lpiefixangle <angle>
/lpiefixangle
{
  % (Entering lpiefixangle) 1 lpiedebugprint
  { dup 0 ge { exit } if
    360 add
  } loop
  { dup 360 lt { exit } if
    360 sub
  } loop
  % (Leaving lpiefixangle) 1 lpiedebugprint
} def

% angle from one point to another
% <point> <point> lpieangleto <angle>
/lpieangleto {
  lpiepsub 2 copy 0 eq exch 0 eq and {pop} {exch atan} ifelse
} def

% find point on circumference of box:  alpha a b lpieboxcircum x y
/lpieboxcircum
{
  % (Entering lpieboxcircum) 3 lpiedebugprint
  4 dict begin
    /b exch def
    /a exch def
    lpiefixangle /alpha exch def
    0 0 a b lpieangleto /theta exch def
    % a (a:) 1 lpiedebugprint pop
    % b (b:) 1 lpiedebugprint pop
    % theta (theta:) 1 lpiedebugprint pop
    % alpha (alpha:) 1 lpiedebugprint pop

    % if alpha <= theta, return (a, a*tan(alpha))
    alpha theta le
    { a  a alpha sin mul alpha cos div }
    {
      % else if alpha <= 180 - theta, return (b*cot(alpha), b)
      alpha 180 theta sub le
      { b alpha cos mul alpha sin div  b }
      {
        % else if alpha <= 180 + theta, return (-a, -a*tan(alpha))
        alpha 180 theta add le
        { a neg  a neg alpha sin mul alpha cos div }
        {
	  % else if alpha <= 360 - theta, return (-b*cot(alpha), -b)
	  alpha 360 theta sub le
          { b neg alpha cos mul alpha sin div  b neg }
	  {
	    % else 360 - theta <= alpha, return (a, a*tan(alpha))
	    a  a alpha sin mul alpha cos div
	  } ifelse
        } ifelse
      } ifelse
    } ifelse
  end
  % (Leaving lpieboxcircum) 2 lpiedebugprint
} def


% draw finger (will immediately follow lpietranslatelabel)
% <fingerdashlength> "[" <fingerstyle> "]" fingerwidth
% <fingeradjustx> <fingeradjusty> <fingerradius> lpiedrawfinger -
/lpiedrawfinger
{
  % (Entering lpidrawfinger) 6 lpiedebugprint
  % find inner endpoint of finger
  /fingerradius exch def
  lpiesliceapex lpieradius fingerradius mul
  lpieslicemidangle lpieatangle lpiepadd
  /fingerinner lpiepointdef
  xsize 2 div ysize 2 div /labelcentre lpiepointdef
  0 0 /labelorigin lpiepointdef

  % find outer endpoint of finger, on circumference of label
  labelcentre fingerinner lpieangleto
  xsize 2 div ysize 2 div
  lpieboxcircum labelcentre lpiepadd
  /fingerouter lpiepointdef

  % set the line width
  setlinewidth

  % draw line
  newpath fingerinner moveto fingerouter lineto
  fingerinner fingerouter lpiedistance 3 1 roll 0 get cvx exec
  % (Leaving lpiedrawfinger) 0 lpiedebugprint
} def

% draw arrowhead (will immediately follow lpiedrawfinger if reqd)
% <headlength> <headwidth> lpiedrawarrowhead
/lpiedrawarrowhead
{
  gsave
  /headwidth exch def
  /headlength exch def
  fingerinner translate
  fingerouter fingerinner lpieangleto rotate
  0 0 moveto
  headlength neg headwidth 2 div lineto
  0 headwidth neg rlineto
  closepath fill
  grestore
} def
end
%%EndResource

%%BeginResource: procset LoutBasicSetup
% @PrependGraphic file /home/arnau/lout.lib/include/bsf.lpg
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
%  PostScript @SysPrependGraphic file for @BasicSetup                %
%                                                                    %
%  This file has been placed in the public domain by its author,     %
%  Jeffrey H. Kingston                                               %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% width height linethickness louteuro -
% draw a Euro symbol of this width and height with this line thickness
/louteuro {
  20 dict begin
    /eurothick exch def
    /euroheight exch def
    /eurowidth exch def
    /eurostrokewidth euroheight 0.8 mul def
    /eurostep eurothick 60 cos mul 60 sin div def
    /eurotheta 40 def

    % llx lly width thickness louteurobox -
    % draw angled box starting at (llx, lly) with given width and thickness
    /louteurobox
    {
      /euroboxthick exch def
      /euroboxwidth exch def
      newpath moveto euroboxwidth 0 rlineto
      eurostep euroboxthick rlineto
      euroboxwidth neg 0 rlineto closepath fill
    } def

    % lower cross stroke
    0 euroheight 2 div eurothick 1.5 mul sub
    eurostrokewidth eurothick louteurobox

    % upper cross stroke
    0 euroheight 2 div eurothick 0.5 mul add
    eurostrokewidth eurostep 2 mul add eurothick louteurobox

    % circular part
    /eurohctr eurowidth euroheight 2 div eurotheta cos mul sub def
    /eurovctr euroheight 2 div def
    newpath
    eurohctr eurovctr eurovctr eurotheta 350 eurotheta sub arc
    eurohctr eurovctr eurovctr eurothick sub 365 eurotheta sub eurotheta arcn
    closepath fill
  end
} def

% path for @FullWidthRule symbol
/LoutRule
{ 0 0 moveto xsize 0 lineto
} def

% path for @Box symbol
/LoutBox
{ 0 0 moveto xsize 0 lineto
  xsize ysize lineto 0 ysize lineto
  closepath
} def

% path for @CurveBox symbol
/LoutCurveBox
{ xmark 0 moveto
  xsize xmark sub xmark xmark 270 360 arc
  xsize xmark sub ysize xmark sub xmark 0 90 arc
  xmark ysize xmark sub xmark 90 180 arc
  xmark xmark xmark 180 270 arc
  closepath
} def

% path for @ShadowBox symbol
/LoutShadowBox
{ xmark 2 mul 0 moveto xsize 0 lineto
  xsize ysize xmark 2 mul sub lineto
  xsize xmark sub ysize xmark 2 mul sub lineto
  xsize xmark sub xmark lineto
  xmark 2 mul xmark lineto
  closepath
} def

% set up dictionary containing margin note data: parity LoutMargSet -
/LoutMargSet
{ /LoutMargDict 12 dict def
  LoutMargDict begin
    /parity exch def
    /matr matrix currentmatrix def
    /rightx xsize def
    /lefty ysize def   % highest allowable point for top of next left note
    /righty ysize def  % highest allowable point for top of next right note
    /max { 2 copy gt { pop } { exch pop } ifelse } def
    /min { 2 copy lt { pop } { exch pop } ifelse } def
  end
} def

%translate coordinate system for marginal notes:  type LoutMargShift -
% where type 0 is left margin, 1 is right margin, 2 is outer, 3 is inner
/LoutMargShift
{ LoutMargDict begin

    % y coordinate of top of note, in margin coords, before vertical adjust
    0 ysize transform matr itransform exch pop

    % decide whether left or right margin based on type and parity
    exch [ 0 1 parity 1 parity sub ] exch get 0 eq
    {
      % left margin: adjust top of note downwards if overlaps previous note
      lefty min

      % bottom of note is new lefty position and also translate position
      ysize sub dup /lefty exch def

      % want right edge of note at coordinate zero
      xsize neg exch
    }
    {
      % right margin: adjust top of note downwards if overlaps previous note
      righty min

      % bottom of note is new righty position and also translate position
      ysize sub dup /righty exch def

      % want left edge of note at coordinate rightx
      rightx exch
    } ifelse

    % stack now contains coord of bottom left corner in margin coordinates
    matr setmatrix translate
  end
} def

% create LoutPageDict with left, right, foot, top for @Place symbol users
/LoutPageSet
{
  /LoutPageDict 5 dict def
  LoutPageDict begin
    /matr matrix currentmatrix def
    /left 0 def
    /right xsize def
    /foot 0 def
    /top ysize def
  end

} def

%%EndResource

%%EndProlog

%%BeginSetup
%%BeginResource: encoding vec2
/vec2 [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/quotesinglbase /quotedblbase /ellipsis /OE /oe /quotedblleft /quotedblright /fi
/fl /endash /emdash /bullet /dagger /daggerdbl /florin /fraction
/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
/dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
] def
%%EndResource

/pdfmark where {pop} {userdict /pdfmark /cleartomark load put} ifelse
%%EndSetup

%%Page: i 1
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup

gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
gsave
1417 -15423 translate
0.0 0.0 0.0 LoutSetRGBColor
9066 14006 0 14006 220 264 55 LoutGraphic
gsave
1 LoutMargSet
grestore
220 fnt2 1829 12415(Notes)m 2401(on)s 2685(cr)s 3(eating)k
3501(a)s 3664(solv)s 2(er)k 4275(f)s 5(or)k
4603(the)s 4947(Na)s 5(vier\211Stok)k 2(es)k 6341(equations)s
220 fnt3 3718 11957(Arnau)m 4317(Pr)s 3(at)k 4762(Gasull)s
220 fnt1 4090 11541(ESEIAA)m 24(T)k 3974 11126(August)m 4663(2017)s
220 fnt2 4125 10399(Abstract)m 220 fnt1 0 9983(In)m 233(this)s
593(document)s 1511(the)s 1827(reader)s 2426(will)s 2815(\207nd)s
3208(information)s 4295(concerning)s 5316(the)s 5632(de)s 5(v)k 3(elopment)k
6810(of)s 7056(a)s 7205(Na)s 4(vier\211Stok)k 2(es)k
8533(solv)s 3(er)k 0 9719(which)m 593(uses)s 1021(numerical)s
1954(analysis.)s 2759(This)s 3200(information)s 4294(is)s 4490(collected)s
5340(from)s 5827(dif)s 5(ferent)k 6636(sources,)s 7396(as)s
7629(part)s 8029(of)s 8283(my)s 8619(Final)s 0 9455(Y)m 22(ear)k
458(Aerospace)s 1433(Engineering)s 2555(Project.)s 
grestore
gsave
1417 -15423 translate
0.0 0.0 0.0 LoutSetRGBColor 0 0 0 0 220 264 55 LoutGraphic
gsave
1 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 1 2
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
gsave
1417 -15423 translate
0.0 0.0 0.0 LoutSetRGBColor
9066 14006 0 14006 220 264 55 LoutGraphic
gsave
1 LoutMargSet
grestore
220 fnt2 1829 12415(Notes)m 2401(on)s 2685(cr)s 3(eating)k
3501(a)s 3664(solv)s 2(er)k 4275(f)s 5(or)k
4603(the)s 4947(Na)s 5(vier\211Stok)k 2(es)k 6341(equations)s
220 fnt3 3718 11957(Arnau)m 4317(Pr)s 3(at)k 4762(Gasull)s
220 fnt1 4090 11541(ESEIAA)m 24(T)k 3974 11126(August)m 4663(2017)s
220 fnt2 4116 10502(Contents)m 
[ /Rect [0 9918 8406 10150] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUT26_694_contents_introduction_1 /ANN pdfmark
220 fnt1 0 10001(1.)m 260(Introduction)s
1696(..)s 2011(..)s 2326(..)s 2641(..)s 2956(..)s
3271(..)s 3586(..)s 3901(..)s 4216(..)s 4531(..)s
4846(..)s 5161(..)s 5476(..)s 5791(..)s 6106(..)s
6421(..)s 6736(..)s 7051(..)s 7366(..)s 7681(..)s
7996(..)s 8311(..)s 
[ /Rect [8961 10001 9066 10149] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUT26_694_contents_introduction_1 /ANN pdfmark
8961(2)s 
[ /Rect [0 9602 8406 9834] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUT26_694_contents_natureofflow_1 /ANN pdfmark
0 9685(2.)m 260(Understanding)s
1601(the)s 1920(nature)s 2519(of)s 2768(the)s 3087(\210uid)s
3544(\210o)s 5(w)k 4216(..)s 4531(..)s 4846(..)s
5161(..)s 5476(..)s 5791(..)s 6106(..)s 6421(..)s
6736(..)s 7051(..)s 7366(..)s 7681(..)s 7996(..)s
8311(..)s 
[ /Rect [8961 9685 9066 9833] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUT26_694_contents_natureofflow_1 /ANN pdfmark
8961(2)s 
[ /Rect [0 9286 8406 9518] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUTintegral /ANN pdfmark
0 9369(3.)m 260(Finite)s 823(control)s
1496(v)s 4(olume)k 2202(inte)s 3(gration)k 3586(..)s
3901(..)s 4216(..)s 4531(..)s 4846(..)s 5161(..)s
5476(..)s 5791(..)s 6106(..)s 6421(..)s 6736(..)s
7051(..)s 7366(..)s 7681(..)s 7996(..)s 8311(..)s

[ /Rect [8961 9369 9066 9517] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUTintegral /ANN pdfmark
8961(2)s 
[ /Rect [0 8970 8406 9203] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUTcoupling /ANN pdfmark
0 9053(4.)m 260(Pressure\211v)s 3(elocity)k 1866(coupling)s
2684(and)s 3055(time)s 3496(inte)s 3(gration)k 4846(..)s
5161(..)s 5476(..)s 5791(..)s 6106(..)s 6421(..)s
6736(..)s 7051(..)s 7366(..)s 7681(..)s 7996(..)s
8311(..)s 
[ /Rect [8969 9050 9066 9203] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUTcoupling /ANN pdfmark
8969(5)s 
[ /Rect [0 8654 8406 8887] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUT26_694_contents_codecomments_1 /ANN pdfmark
0 8737(5.)m 260(Comments)s 1257(on)s
1529(the)s 1848(code)s 2641(..)s 2956(..)s 3271(..)s
3586(..)s 3901(..)s 4216(..)s 4531(..)s 4846(..)s
5161(..)s 5476(..)s 5791(..)s 6106(..)s 6421(..)s
6736(..)s 7051(..)s 7366(..)s 7681(..)s 7996(..)s
8311(..)s 
[ /Rect [8968 8734 9066 8885] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUT26_694_contents_codecomments_1 /ANN pdfmark
8968(8)s 
[ /Rect [0 8078 8406 8311] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUT26_385_main_1 /ANN pdfmark
220 fnt2 0 8160(Refer)m 3(ences)k
220 fnt1 1381 8161(..)m 1696(..)s 2011(..)s 2326(..)s
2641(..)s 2956(..)s 3271(..)s 3586(..)s 3901(..)s
4216(..)s 4531(..)s 4846(..)s 5161(..)s 5476(..)s
5791(..)s 6106(..)s 6421(..)s 6736(..)s 7051(..)s
7366(..)s 7681(..)s 7996(..)s 8311(..)s 
[ /Rect [8869 8161 9066 8309] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUT26_385_main_1 /ANN pdfmark
8869(11)s

grestore
gsave
1417 -15423 translate
0.0 0.0 0.0 LoutSetRGBColor 0 0 0 0 220 264 55 LoutGraphic
gsave
1 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 2 3
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Symbol
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5779 -1565(-)m 5897(2)s 6057(-)s 9066 13433 0 13433 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore
220 fnt2 0 13282(1.)m
267(Intr)s 3(oduction)k 
[ /Dest /LOUT26_694_contents_introduction_1 /DEST pdfmark
220 fnt1 440 12887(The)m 851(aim)s
1254(of)s 1522(Computational)s 2897(Fluid)s 3434(Dynamics)s 4388(\(CFD\))s
5024(is)s 5235(to)s 5474(model)s 6093(the)s 6431(continuous)s
7460(\210uids)s 8013(by)s 8303(applying)s 0 12623(mathematical)m 1247(resources)s
2135(on)s 2422(the)s 2756(equations)s 3658(that)s 4057(go)s 3(v)k 3(ern)k
4728(the)s 5062(\210uid)s 5534(\210o)s 5(w)k 14(,)k
6018(the)s 6352(Na)s 4(vier\211Stok)k 2(es)k 7698(\(NS\))s
8185(equations.)s 0 12359(In)m 235(order)s 754(to)s 975(obtain)s
1576(a)s 1729(v)s 5(alid)k 2218(solution)s 2978(ef\207ciently)s 14(,)k
3952(a)s 4105(good)s 4599(understanding)s 5893(of)s 6143(the)s
6462(ph)s 1(ysics)k 7166(that)s 7551(come)s 8077(into)s
8469(play)s 8898(in)s 0 12095(the)m 311(problems)s 1166(is)s
1349(required,)s 2170(as)s 2390(well)s 2809(as)s 3029(computer)s
3904(operations)s 4856(and)s 5219(po)s 5(wer)k 5808(management)s
6976(kno)s 5(wledge.)k 8020(Information)s 0 11831(related)m 650(to)s
870(these)s 1371(topics)s 1941(is)s 2133(found)s 2700(in)s
2923(this)s 3286(document.)s 440 11488(The)m 872(solv)s 3(er)k
1501(soon-to-be)s 2532(de)s 5(v)k 3(eloped)k 3520(will)s
3953(f)s 2(all)k 4335(under)s 4930(the)s 5290(cate)s 3(gory)k
6133(of)s 6422(numerical)s 7391(solv)s 3(ers,)k 8148(which)s
8778(use)s 0 11224(numerical)m 968(analysis)s 1761(to)s 2021(compute)s
2869(an)s 3168(approximation)s 4542(of)s 4831(the)s 5191(desired)s
5918(solution.)s 6762(Note)s 7279(that)s 7704(solving)s 8440(the)s
8800(NS)s 0 10960(equations)m 887(analytically)s 1960(for)s 2271(the)s
2590(v)s 5(ast)k 2993(majority)s 3787(of)s 4036(practical)s
4841(applications)s 5947(is)s 6139(impossible)s 140 fnt1 7086 11041(1)m
220 fnt1 7142 10960(.)m 440 10617(Because)m 1247(my)s 1606(Final)s
2136(Y)s 22(ear)k 2622(Project)s 3326(\(FYP\))s 3946(will)s
4366(be)s 4652(related)s 5330(to)s 5578(a)s 5757(project)s
6449(aimed)s 7067(at)s 7308(de)s 5(v)k 3(eloping)k
8353(a)s 8533(solv)s 3(er)k 0 10353(for)m 328(the)s
664(NS)s 1003(equations,)s 1959(I)s 2102(must)s 2601(mak)s 2(e)k
3143(sure)s 3576(that)s 3978(the)s 4314(inner)s 4837(w)s 2(orkings)k
5716(of)s 5982(a)s 6152(basic)s 6667(solv)s 3(er)k
7273(are)s 7608(fully)s 8091(understood)s 0 10089(by)m 285(the)s
620(time)s 1077(I)s 1217(start)s 1665(coding)s 2328(for)s
2655(the)s 2989(FYP)s 24(.)k 3478(I)s 3619(ha)s 4(v)k 3(e)k
4092(written)s 4781(this)s 5160(report)s 5755(to)s 5990(summary)s
6873(the)s 7208(information)s 8313(g)s 1(athered)k 0 9825(from)m
484(dif)s 5(ferent)k 1292(sources)s 1998(and)s 2371(document)s
3295(my)s 3629(progress.)s 4470(The)s 4864(reader)s 5469(must)s
5954(kno)s 5(w)k 6489(that)s 6875(this)s 7241(document)s
8165(will)s 8560(suf)s 5(fer)k 0 9561(constant)m 793(changes)s
1552(until)s 2014(I)s 2146(feel)s 2532(suf\207ciently)s 3577(con\207dent)s
4456(to)s 4683(pursue)s 5327(the)s 5653(FYP)s 24(.)k
6133(Once)s 6654(I)s 6786(de)s 5(v)k 4(ote)k
7420(myself)s 8091(to)s 8318(the)s 8645(FYP)s 24(,)k
0 9297(this)m 363(document)s 1284(will)s 1676(be)s 1934(freezed)s
2632(and)s 3003(remain)s 3664(as)s 3892(proof)s 4434(of)s
4683(the)s 5002(w)s 2(ork)k 5507(done.)s 440 8954(This)m
879(document)s 1803(is)s 1998(typeset)s 2677(with)s 3124(and)s
3498(compiled)s 4372(using)s 4900(Lout.)s 5414(In)s 5652(this)s
6018(project)s 6685(Lout)s 7159(is)s 7354(used)s 7813(as)s
8044(a)s 8200(document)s 0 8690(formatter)m 882(similar)s 1557(to)s
1788(L)s 176 fnt1 1854 8722(A)m 220 fnt1 1942 8690(T)m
2030 8646(E)m 2129 8690(X)m 2284(,)s 2394(so)s 2649(I)s
2785(can)s 3152(test)s 3523(the)s 3853(con)s 8(v)k 3(enience)k
5000(of)s 5261(writing)s 5955(the)s 6285(FYP)s 6750(using)s
7287(the)s 7617(former)s 8280(tool.)s 8729(The)s 0 8426(initial)m
563(idea)s 984(is)s 1177(to)s 1398(write)s 1900(the)s
2220(FYP)s 2675(in)s 2898(Lout,)s 3412(so)s 3657(I)s
3783(can)s 4140(reuse)s 4654(some)s 5169(of)s 5418(the)s
5738(parts)s 6211(of)s 6461(these)s 6963(document)s 7885(without)s
8612(mod-)s 0 8162(i\207cation.)m 440 7819(It)m 627(is)s 817(recommended)s
2111(that)s 2493(the)s 2810(reader)s 3409(has)s 3745(a)s
3895(good)s 4386(understanding)s 5677(of)s 5924(Fluid)s 6439(Mechanics)s
7432(so)s 7674(the)s 7990(assumptions)s 0 7555(and)m 371(the)s
690(equations)s 1577(presented)s 2471(are)s 2789(grasped.)s 220 fnt2
0 6828(2.)m 267(Understanding)s 1720(the)s 2064(natur)s 3(e)k
2734(of)s 2984(the)s 3328(\210uid)s 3806(\210o)s 2(w)k

[ /Dest /LOUT26_694_contents_natureofflow_1 /DEST pdfmark
220 fnt1 1.0 0.0 0.0 LoutSetRGBColor 0 6635(\(V)m 8(OID\))k gsave
675 5870 translate
176 fnt1
0.0 0.0 0.0 LoutSetRGBColor 1416 894 0 814 176 193 44 LoutGraphic
gsave
1 LoutMargShift gsave
grestore
1.0 0.0 0.0 LoutSetRGBColor 283 775(REV)m 22(.:)k 733(A)s
902(de-)s 283 582(scription)m 937(of)s 283 389(the)m 538(\210uid)s
283 196(\210o)m 4(w)k grestore
grestore
220 fnt2 0.0 0.0 0.0 LoutSetRGBColor 0 5917(3.)m
267(Finite)s 867(contr)s 3(ol)k 1584(v)s 2(olume)k
2317(integration)s 
[ /Dest /LOUTintegral /DEST pdfmark
220 fnt1 440 5480(The)m 838(three)s 1334(fundamental)s
2488(equations)s 3382(of)s 3637(Fluid)s 4162(Mechanics)s 5164(arise)s
5634(from)s 6123(the)s 6448(la)s 3(ws)k 6899(of)s
7154(conserv)s 5(ation)k 8329(of)s 8585(mass,)s 0 5216(conserv)m 5(ation)k
1210(of)s 1501(momentum)s 2600(and)s 3013(conserv)s 5(ation)k
4223(of)s 4515(ener)s 3(gy)k 14(.)k 5232(While)s
5862(the)s 6223(equations)s 7152(can)s 7551(be)s 7851(written)s
8567(either)s 0 4952(in)m 246(dif)s 5(ferential)k 1289(or)s
1550(inte)s 3(gral)k 2292(form,)s 2840(it)s 3040(is)s
3255(often)s 3782(preferred)s 4662(to)s 4905(w)s 2(ork)k
5433(with)s 5900(the)s 6242(dif)s 5(ferential)k 7285(arrangement.)s
8499(In)s 8758(this)s 0 4688(arrangement,)m 1189(the)s 1503(equations)s
2385(are)s 2698(e)s 3(xpressed)k 3607(according)s 4516(to)s
4731(elementary)s 5750(v)s 4(olumes)k 6531(of)s 6774(the)s
7088(\210uid,)s 7584(as)s 7807(opposed)s 8588(to)s 8802(the)s
0 4424(inte)m 3(gral)k 707(form,)s 1221(which)s 1799(tak)s 2(es)k
2282(into)s 2662(account)s 3388(macroscopic)s 4533(v)s 4(olumes)k
5308(and)s 5668(the)s 5976(properties)s 6888(are)s 7195(e)s 3(xpressed)k
8099(as)s 8316(a)s 4(v)k 3(erages)k 0 4160(o)m 3(v)k 3(er)k
433(the)s 746(entire)s 1289(domain.)s 2037(The)s 2422(former)s
3068(is)s 3253(e)s 3(xtensi)k 5(v)k 3(ely)k
4285(used)s 4734(through)s 5465(the)s 5777(Finite)s 6334(Element)s
7113(Method)s 7844(\(FEM\),)s 8532(which)s 0 3896(pro)m 3(vides)k
799(numerical)s 1727(solutions)s 2566(for)s 2877(the)s 3196(P)s 3(artial)k
3816(Dif)s 5(ferential)k 4884(Equations)s 5808(\(PDEs\))s 6498(referenced)s
7476(abo)s 3(v)k 3(e)k 8045(in)s 8268(CFD.)s
440 3553(The)m 843(Na)s 4(vier)k 4(-Stok)k 2(es)k
2144(equations)s 3043(cannot)s 3694(be)s 3963(understood)s 5005(without)s
5742(the)s 6072(Re)s 3(ynolds')k 7013(transport)s 7859(theorem.)s
8685(This)s 0 3289(theorem)m 795(links)s 1290(the)s 1630(change)s
2324(of)s 2594(an)s 2875(e)s 3(xtensi)k 5(v)k 3(e)k
3764(magnitude)s 220 fnt3 4764 3290(F)m 220 fnt1 4981 3289(in)m
5226(a)s 5399(\210uid)s 5878(of)s 6148(density)s 220 fnt4
6854 3283(r)m 220 fnt1 7038 3289(to)m 7280(the)s 7620(same)s
8143(magnitude)s 0 3025(e)m 3(xpressed)k 915(per)s 1250(unit)s
1647(of)s 1896(mass)s 220 fnt3 2380 3026(f)m 220 fnt1
2528 3025(according)m 3442(to)s 3662(the)s 3981(equation)s 4789(3.1.)s

[ /Dest /LOUTreynoldstt /DEST pdfmark
220 fnt3 3115 2564(dF)m 251 0 0 0 220 264 11 3115 2517 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
3153 2315(dt)m 220 fnt4 3443 2462(=)m
220 fnt3 3667 2564(d)m 174 0 0 0 220 264 11 3638 2517 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
3638 2315(dt)m 286 fnt4 3823 2402(\362)m
154 fnt3 3905 2338(CV)m 220 fnt4 4123 2462(r)m 220 fnt3
4242 2469(f)m 4346(dV)s 220 fnt4 4672 2462(+)m 4856 2414(\260)m
286 fnt4 4859 2402(\362)m 154 fnt3 4941 2338(CV)m 220 fnt4
5159 2462(r)m 220 fnt3 5278 2469(f)m 220 fnt2 5382 2467(v)m
154 fnt2 5474 2388(r)m 220 fnt4 5607 2462(\327)m 220 fnt3
5711 2469(d)m 220 fnt2 5837 2467(S)m 220 fnt1 8655 2468(\(3.1\))m
0 1840(where)m 220 fnt3 577 1841(CS)m 220 fnt1 879 1840(and)m
220 fnt3 1240 1841(CV)m 220 fnt1 1582 1840(are)m 1890(the)s
2199(control)s 2862(system)s 3517(and)s 3878(the)s 4187(control)s
4851(v)s 4(olume,)k 5594(respecti)s 5(v)k 3(ely)k 14(,)k
6719(while)s 220 fnt2 7247 1839(v)m 154 fnt2 7339 1788(r)m
220 fnt1 7452 1840(is)m 7634(the)s 7943(\210o)s 5(w)k
8367(v)s 3(elocity)k 0 1576(relati)m 5(v)k 3(e)k
700(to)s 920(the)s 220 fnt3 1239 1577(CV)m 220 fnt1
1535 1576(.)m 440 1233(Using)m 1070(the)s 1446(Re)s 3(ynold')k 12(s)k
2436(transport)s 3328(theorem)s 4159(one)s 4584(can)s 4997(\207nd)s
5450(the)s 5826(NS)s 6204(equations.)s 7197(The)s 7646(conserv)s 5(ation)k
8872(of)s 1134 0 0 0 220 264 55 0 677 LoutGr2
0 0 moveto xsize 0 lineto stroke
grestore

grestore
112 fnt1 0 489(1)m 176 fnt1 54 425(If)m
223(the)s 479(reader)s 962(is)s 1117(interested)s 1841(in)s
2020(de)s 4(v)k 2(eloping)k 2834(an)s 3044(analytical)s
3766(solv)s 2(er)k 7(,)k 4265(an)s 4474(obligatory)s
5236(step)s 5558(is)s 5712(to)s 5888(solv)s 2(e)k
6299(the)s 6555(reno)s 4(wned)k 7288(Millenium)s 8071(Prize)s
8473(Problem)s 0 214(stated)m 461(by)s 687(the)s 953(Clay)s
1334(Mathematics)s 2285(Institute,)s 2947(which)s 3428(challenges)s 4215(the)s
4481(fearless)s 5062(mathematician)s 6144(to)s 6330(proof)s 6772(the)s
7037(e)s 2(xistence)k 7739(and)s 8046(smoothness)s 8912(of)s
0 3(NS)m 257(solutions.)s 
grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 3 4
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Italic
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5784 -1565(-)m 5902(3)s 6052(-)s 9066 13430 0 13330 220 264 55 1417 -15423 LoutGr2
1 LoutMargSet
grestore
0 13281(momentum\212one)m 1589(of)s
1838(the)s 2157(equations\212is)s 3410(written)s 4083(as)s 4311(in)s
4534(equation)s 5342(3.2.)s 
[ /Dest /LOUTGeneralNSMomentum /DEST pdfmark
220 fnt4 2825 12805(\266)m 220 fnt2
2937 12810(v)m gsave
2825 12757 translate
220 fnt3 219 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 2846 12548(\266)m 220 fnt3
2958 12555(t)m 220 fnt4 3110 12702(+)m 3294(\()s 220 fnt2
3371 12707(v)m 220 fnt4 3544 12702(\327)m 3648(\321)s 3808(\))s
220 fnt2 3880 12707(v)m 220 fnt4 4064 12702(=)m 4314(-)s
4497(\321)s 220 fnt3 4657 12709(p)m 220 fnt4 4827 12702(+)m
5011(n)s 5126(D)s 220 fnt2 5271 12707(v)m 220 fnt4
5444 12702(+)m 220 fnt2 5628 12707(f)m 220 fnt4 5724 12702(\()m
220 fnt2 5801 12707(x)m 220 fnt4 5963 12702(,)m 220 fnt3
6105 12709(t)m 220 fnt4 6180 12702(\))m 220 fnt1 8655 12708(\(3.2\))m
440 11837(Gi)m 5(v)k 3(en)k 1028(the)s 1356(comple)s 3(xity)k
2400(of)s 2657(creating)s 3421(a)s 3582(general)s 4286(solv)s 3(er)k 8(,)k
4918(some)s 5441(assumptions)s 6580(will)s 6981(be)s 7248(made)s
7782(to)s 8011(simplify)s 8802(the)s 0 11573(coding.)m 704(F)s 3(or)k
1073(an)s 1344(incompressible)s 2734(Ne)s 5(wtonian)k 3755(\210uid,)s
4268(the)s 4598(NS)s 4931(equations)s 5830(for)s 6152(the)s
6483(conserv)s 5(ation)k 7663(of)s 7923(mass)s 8419(and)s
8802(the)s 0 11309(conserv)m 5(ation)k 1168(of)s 1417(linear)s
1971(momentum)s 3027(are)s 3345(written\212in)s 4409(Enstein)s 5119(notation\212as)s
6287(in)s 6510(3.3)s 6825(and)s 7196(3.4,)s 7569(respecti)s 5(v)k 3(ely)k 14(.)k

[ /Dest /LOUTNSmasssimple /DEST pdfmark
220 fnt4 3853 10833(\266)m 220 fnt3 3965 10840(u)m 154 fnt3
4070 10789(i)m gsave
3853 10743 translate
220 fnt3 257 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 3857 10534(\266)m 220 fnt3
3969 10541(x)m 154 fnt3 4066 10490(i)m 220 fnt4 4198 10688(=)m
4393(0)s 220 fnt1 8655 10694(\(3.3\))m 
[ /Dest /LOUTNSMomHyp /DEST pdfmark
220 fnt4 1.0 0.0 0.0 LoutSetRGBColor
3188 9740(\266)m 220 fnt3 3300 9747(u)m 154 fnt3 3405 9696(i)m
gsave
3188 9650 translate
220 fnt3 257 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 3228 9441(\266)m 220 fnt3 3340 9448(t)m
220 fnt4 3511 9595(+)m 220 fnt3 3695 9602(u)m 154 fnt3
3800 9523(j)m 220 fnt4 3853 9740(\266)m 220 fnt3 3965 9747(u)m
154 fnt3 4070 9696(i)m gsave
3853 9650 translate
220 fnt3 257 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 3856 9441(\266)m
220 fnt3 3968 9448(x)m 154 fnt3 4065 9397(j)m 220 fnt4
4198 9595(=)m 4448(-)s 4642 9694(1)m gsave
4631 9650 translate
220 fnt3 108 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4631 9441(r)m
4766 9732(\266)m 220 fnt3 4878 9739(p)m 249 0 0 0 220 264 11 4750 9650 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 4750 9441(\266)m
220 fnt3 4862 9448(x)m 154 fnt3 4959 9397(i)m 220 fnt4
5065 9595(+)m 5249(n)s 154 fnt4 5556 9846(2)m 220 fnt4
5455 9740(\266)m 220 fnt3 5641 9747(u)m 154 fnt3 5746 9696(i)m
gsave
5364 9650 translate
220 fnt3 513 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 5364 9441(\266)m 220 fnt3 5476 9448(x)m
154 fnt3 5573 9397(j)m 220 fnt4 5626 9441(\266)m 220 fnt3
5738 9448(x)m 154 fnt3 5835 9397(j)m gsave
5877 8565 translate
176 fnt1 0.0 0.0 0.0 LoutSetRGBColor
1416 1161 0 1085 176 193 44 LoutGraphic
gsave
1 LoutMargShift gsave
grestore
1.0 0.0 0.0 LoutSetRGBColor 283 1046(REV)m 22(.:)k 176 fnt4 283 848(\266)m
176 fnt3 372 854(x)m 123 fnt3 450 790(j)m 176 fnt4
492 848(\266)m 176 fnt3 581 854(x)m 123 fnt3 659 790(j)m
176 fnt4 753 848(\271)m 283 609(\266)m 123 fnt4 484 682(2)m
176 fnt3 372 615(x)m 123 fnt3 450 551(j)m 176 fnt1
944 853(on)m 283 388(denomina-)m 283 195(tor?)m grestore
grestore
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor
8655 9601(\(3.4\))m 0 8952(Notice)m 635(that)s 1019(in)s 1242(equation)s
2050(3.4:)s 220 fnt4 0 8476(\266)m 220 fnt3 112 8483(u)m
154 fnt3 217 8432(i)m gsave
0 8386 translate
220 fnt3 257 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 40 8177(\266)m
220 fnt3 152 8184(t)m 220 fnt1 880 8337(is)m 1072(kno)s 5(wn)k
1717(as)s 1945(the)s 2264(time)s 2705(deri)s 5(v)k 5(ati)k 5(v)k 3(e,)k
220 fnt3 0 7556(u)m 154 fnt3 105 7505(j)m 220 fnt4
158 7694(\266)m 220 fnt3 270 7701(u)m 154 fnt3 375 7650(i)m
gsave
158 7604 translate
220 fnt3 257 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 161 7395(\266)m 220 fnt3 273 7402(x)m
154 fnt3 370 7351(j)m 220 fnt1 880 7555(as)m 1108(the)s
1427(con)s 8(v)k 3(ection)k 2431(term,)s 220 fnt4
55 6754(-)m 249 6853(1)m gsave
238 6809 translate
220 fnt3 108 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
238 6600(r)m 373 6891(\266)m
220 fnt3 485 6898(p)m 249 0 0 0 220 264 11 357 6809 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 357 6600(\266)m 220 fnt3
469 6607(x)m 154 fnt3 566 6556(i)m 220 fnt1 880 6760(as)m
1108(the)s 1427(pressure)s 2208(gradient,)s 3025(and)s 220 fnt4
0 5925(n)m 154 fnt4 307 6176(2)m 220 fnt4 206 6070(\266)m
220 fnt3 392 6077(u)m 154 fnt3 497 6026(i)m gsave
115 5980 translate
220 fnt3
513 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 115 5771(\266)m 220 fnt3 227 5778(x)m 154 fnt3
324 5727(j)m 220 fnt4 377 5771(\266)m 220 fnt3 489 5778(x)m
154 fnt3 586 5727(j)m 220 fnt1 880 5931(as)m 1108(the)s
1427(dif)s 5(fusion)k 2267(term.)s 440 5039(A)m 650(more)s
1153(general)s 1850(e)s 3(xpression)k 2838(for)s 3150(3.4,)s
3523(with)s 220 fnt3 1.0 0.0 0.0 LoutSetRGBColor 3967 5040(S)m 220 fnt4
4155 5033(=)m 4350(\321)s 220 fnt3 4510 5040(p)m gsave
4614 4239 translate
176 fnt1
0.0 0.0 0.0 LoutSetRGBColor 1416 928 0 849 176 193 44 LoutGraphic
gsave
1 LoutMargShift gsave
grestore
1.0 0.0 0.0 LoutSetRGBColor 283 810(REV)m 22(.:)k 733(Com-)s
283 617(pare)m 626(with)s 283 424(transparen-)m 283 231(c)m 2(y)k
487(21)s grestore
grestore
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor 4670 5039(as)m 4899(the)s
5219(pressure)s 6000(gradient)s 6775(and)s 220 fnt4 7147 5033(G)m
7357(=)s 7552(r)s 7671(n)s 220 fnt1 7831 5039(and)m
8203(taking)s 8802(the)s 0 4775(general)m 696(v)s 5(ariable)k
220 fnt4 1448 4769(f)m 220 fnt1 1611 4775(as)m 220 fnt3
1839 4776(u)m 154 fnt3 1944 4725(j)m 220 fnt1 1986 4775(,)m
2084(is)s 2276(written)s 2949(as)s 
[ /Dest /LOUTGenNSMomHyp /DEST pdfmark
220 fnt4 2995 4265(\266)m
3107(\()s 3184(r)s 3303(f)s 3422(\))s gsave
2995 4171 translate
220 fnt3
488 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
3151 3962(\266)m 220 fnt3 3263 3969(t)m 220 fnt4 3549 4116(+)m
3733(\321)s 3948(\327)s 4052(\()s 4129(r)s 220 fnt2
4248 4121(u)m 220 fnt4 4377 4116(f)m 4496(\))s 4634(=)s
4829(\321)s 5044(\327)s 5148(\()s 5225(G)s 5369(\321)s
5529(f)s 5648(\))s 5775(+)s 220 fnt3 5959 4123(S)m
220 fnt1 8655 4122(\(3.5\))m 0 3494(Note)m 483(that)s 874(this)s
1244(e)s 3(xpression)k 2238(tak)s 2(es)k 2739(almost)s
3386(the)s 3712(same)s 4220(form)s 4709(when)s 5243(w)s 2(orking)k
6029(with)s 6479(ener)s 3(gy)k 7130(or)s 7375(entrop)s 2(y)k 14(.)k
8132(Modifying)s 0 3230(the)m 311(v)s 5(ariables)k 220 fnt4
1134 3224(f)m 220 fnt1 1289 3230(and)m 220 fnt3 1651 3231(S)m
220 fnt1 1809 3230(to)m 2020(the)s 2331(corresponding)s 3627(desired)s
4305(v)s 5(ariable)k 5049(or)s 5278(e)s 3(xpression)k
6257(will)s 6640(suf\207ce)s 7267(on)s 7530(paradigm)s 8405(change.)s
0 2966(The)m 392(rest)s 763(of)s 1012(the)s 1331(equation)s
2139(may)s 2567(remain)s 3228(intact.)s 440 2623(Earlier)m 1082(in)s
1296(this)s 1649(document,)s 2604(it)s 2772(w)s 2(as)k
3146(mentioned)s 4118(that)s 4492(the)s 4802(FEM)s 5294(w)s 2(as)k
5668(the)s 5978(go-to)s 6482(numerical)s 7400(method)s 8104(to)s
8314(compute)s 0 2359(the)m 334(solution)s 1110(of)s 1374(the)s
1709(NS)s 2046(equations.)s 2997(By)s 3319(taking)s 3933(one)s
4316(general)s 5028(element\212the)s 6276(E)s 6478(in)s 6717(the)s
7051(acron)s 3(ym\212as)k 8280(a)s 8448(control)s 0 2095(v)m 4(olume)k
706(\(CV\),)s 1254(of)s 1503(a)s 1655(general)s 2351(v)s 4(olume)k
220 fnt3 3057 2096(V)m 220 fnt1 3207 2095(,)m 3305(the)s
3624(e)s 3(xpression)k 4611(3.6)s 4934(is)s 5126(found.)s

[ /Dest /LOUTINTGenNSMomHyp /DEST pdfmark
286 fnt4 1741 1410(\362)m 154 fnt3 1823 1346(V)m 220 fnt4
1939 1619(\266)m 2051(\()s 2128(r)s 2247(f)s 2366(\))s
gsave
1939 1525 translate
220 fnt3 488 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
2095 1316(\266)m 220 fnt3 2207 1323(t)m 2438 1477(dV)m
220 fnt4 2764 1470(+)m 286 fnt4 2948 1410(\362)m 154 fnt3
3030 1346(V)m 220 fnt4 3146 1470(\321)m 3361(\327)s 3465(\()s
3542(r)s 220 fnt2 3661 1475(u)m 220 fnt4 3790 1470(f)m
3909(\))s 220 fnt3 3981 1477(dV)m 220 fnt4 4329 1470(=)m
286 fnt4 4524 1410(\362)m 154 fnt3 4606 1346(V)m 220 fnt4
4722 1470(\321)m 4937(\327)s 5041(\()s 5118(G)s 5262(\321)s
5422(f)s 5541(\))s 220 fnt3 5613 1477(dV)m 220 fnt4
5939 1470(+)m 286 fnt4 6123 1410(\362)m 154 fnt3 6205 1346(V)m
220 fnt3 6321 1477(S)m 6443(dV)s 220 fnt1 8655 1476(\(3.6\))m
0 848(W)m 8(ith)k 484(further)s 1136(modi\207cations,)s 2429(one)s
2797(arri)s 5(v)k 3(es)k 3431(at)s 3644(e)s 3(xpression)k
4631(3.7.)s 
grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
1 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 4 5
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Symbol
%%+ font Times-Italic
%%+ font Times-Bold
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5780 -1565(-)m 5898(4)s 6057(-)s 9066 13433 0 13149 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore

[ /Dest /LOUTINTGenNSMomHypMOD1 /DEST pdfmark
220 fnt4 2198 13094(r)m
220 fnt3 2317 13101(V)m 220 fnt4 2478 13242(\266)m gsave
2590 0 translate
0.9231 1.0000 scale
0 13370(-)m

grestore
2590(f)s gsave
2478 13149 translate
220 fnt3 220 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
2500 12940(\266)m 220 fnt3 2612 12947(t)m
220 fnt4 2764 13094(+)m 286 fnt4 2948 13034(\362)m 154 fnt3
3030 12970(V)m 220 fnt4 3146 13094(\321)m 3361(\327)s 3465(\()s
3542(r)s 220 fnt2 3661 13099(u)m 220 fnt4 3790 13094(f)m
3909(\))s 220 fnt3 3981 13101(dV)m 220 fnt4 4329 13094(=)m
286 fnt4 4524 13034(\362)m 154 fnt3 4606 12970(V)m 220 fnt4
4722 13094(\321)m 4937(\327)s 5041(\()s 5118(G)s 5262(\321)s
5422(f)s 5541(\))s 220 fnt3 5613 13101(dV)m 220 fnt4
5939 13094(+)m gsave
6123 0 translate
0.9487 1.0000 scale
0 13228(-)m 
grestore
220 fnt3 6123 13101(S)m 6245(V)s
220 fnt1 8655 13100(\(3.7\))m 0 12446(By)m 328(applying)s 1169(the)s
1510(di)s 5(v)k 3(er)k 3(gence)k 2535(theorem)s
140 fnt1 3254 12527(1)m 220 fnt1 3387 12446(on)m 3682(con)s 8(v)k 3(ection)k
4709(and)s 5102(dif)s 5(fusion)k 5965(inte)s 3(grals)k
6785(and)s 7179(assuming)s 8080(rectangular)s 0 12182(control)m 666(v)s 4(olumes)k
1444(with)s 1879(f)s 2(aces)k 2364(North)s 220 fnt3
2921 12183(n)m 220 fnt1 3026 12182(,)m 3116(East)s 220 fnt3
3540 12183(e)m 220 fnt1 3630 12182(,)m 3720(South)s 220 fnt3
4278 12183(s)m 220 fnt1 4405 12182(and)m 4769(W)s 17(est)k
220 fnt3 5249 12183(w)m 220 fnt1 5438 12182(and)m 5801(sides)s
6277(of)s 6518(length)s 220 fnt4 7112 12176(D)m 220 fnt3
7257 12183(x)m 220 fnt1 7401 12182(and)m 220 fnt4 7764 12176(D)m
220 fnt3 7909 12183(y)m 220 fnt1 8050 12182(and)m 8413(making)s
0 11918(some)m 514(approximations,)s 1978(it)s 2155(is)s 2347(easy)s
2786(to)s 3006(arri)s 5(v)k 3(e)k 3560(at)s
3773(e)s 3(xpression)k 4760(3.8.)s 
[ /Dest /LOUTINTGenNSMomHypMOD2 /DEST pdfmark
220 fnt4 1.0 0.0 0.0 LoutSetRGBColor
4252 11267(r)m 220 fnt3 4371 11274(V)m 220 fnt4 4532 11415(\266)m
gsave
4644 0 translate
0.9231 1.0000 scale
0 11543(-)m 
grestore
4644(f)s gsave
4532 11322 translate
220 fnt3 220 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4554 11113(\266)m 220 fnt3
4666 11120(t)m 220 fnt4 4818 11267(+)m 5002(r)s 220 fnt3
5121 11274(u)m 154 fnt3 5226 11195(n)m 220 fnt4 5310 11267(D)m
220 fnt3 5455 11274(x)m 220 fnt4 5563 11267(f)m 154 fnt3
5671 11185(n)m 220 fnt4 5810 11267(+)m 5994(r)s 220 fnt3
6113 11274(u)m 154 fnt3 6218 11195(e)m 220 fnt4 6293 11267(D)m
220 fnt3 6438 11274(y)m 220 fnt4 6543 11267(f)m 154 fnt3
6651 11185(e)m 220 fnt4 2306 10699(+)m 2490(r)s 220 fnt3
2609 10706(u)m 154 fnt3 2714 10627(s)m 220 fnt4 2781 10699(D)m
220 fnt3 2926 10706(x)m 220 fnt4 3034 10699(f)m 154 fnt3
3142 10617(s)m 220 fnt4 3264 10699(+)m 3448(r)s 220 fnt3
3567 10706(u)m 154 fnt3 3672 10627(w)m 220 fnt4 3783 10699(D)m
220 fnt3 3928 10706(y)m 220 fnt4 4033 10699(f)m 154 fnt3
4141 10617(w)m 220 fnt4 4329 10699(=)m 4524(G)s 154 fnt3
4657 10627(n)m gsave
0 10760 translate
1.0000 2.1444 scale
330 fnt4 4741 -82(\()m 
grestore
220 fnt4 4873 10850(\266)m
4985(f)s gsave
4873 10757 translate
220 fnt3 220 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4880 10548(\266)m 220 fnt3 4992 10555(y)m
gsave
0 10760 translate
1.0000 2.1444 scale
330 fnt4 5126 -82(\))m 
grestore
154 fnt3 5217 10416(n)m 220 fnt4
5301 10699(D)m 220 fnt3 5446 10706(x)m 220 fnt4 5609 10699(+)m
5793(G)s 154 fnt3 5926 10627(e)m gsave
0 10760 translate
1.0000 2.1444 scale
330 fnt4 6001 -82(\()m

grestore
220 fnt4 6133 10850(\266)m 6245(f)s gsave
6133 10757 translate
220 fnt3 220 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
6138 10548(\266)m
220 fnt3 6250 10555(x)m gsave
0 10760 translate
1.0000 2.1444 scale
330 fnt4 6386 -82(\))m 
grestore
154 fnt3
6477 10416(e)m 220 fnt4 6552 10699(D)m 220 fnt3 6697 10706(y)m
220 fnt4 4307 10055(-)m 4490(G)s 154 fnt3 4623 9983(s)m
gsave
0 10116 translate
1.0000 2.1444 scale
330 fnt4 4690 -82(\()m 
grestore
220 fnt4 4822 10206(\266)m 4934(f)s
gsave
4822 10113 translate
220 fnt3 220 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4829 9904(\266)m 220 fnt3 4941 9911(y)m gsave
0 10116 translate
1.0000 2.1444 scale
330 fnt4
5075 -82(\))m 
grestore
154 fnt3 5166 9772(e)m 220 fnt4 5241 10055(D)m
220 fnt3 5386 10062(x)m 220 fnt4 5549 10055(-)m 5732(G)s
154 fnt3 5865 9983(w)m gsave
0 10116 translate
1.0000 2.1444 scale
330 fnt4 5976 -82(\()m 
grestore
220 fnt4
6108 10206(\266)m 6220(f)s gsave
6108 10113 translate
220 fnt3 220 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
6113 9904(\266)m 220 fnt3
6225 9911(x)m gsave
0 10116 translate
1.0000 2.1444 scale
330 fnt4 6361 -82(\))m 
grestore
154 fnt3 6452 9772(w)m
220 fnt4 6563 10055(D)m 220 fnt3 6708 10062(y)m 220 fnt4
6868 10055(+)m gsave
7052 0 translate
0.9487 1.0000 scale
0 10189(-)m 
grestore
220 fnt3 7052 10062(S)m 7174(V)s
gsave
7324 9894 translate
176 fnt1 0.0 0.0 0.0 LoutSetRGBColor 1416 1504 0 1428 176 193 44 LoutGraphic
gsave
1 LoutMargShift gsave
grestore
1.0 0.0 0.0 LoutSetRGBColor 283 1389(REV)m 22(.:)k
283 1196(Break)m 746(equa-)s 283 1003(tion)m 597(o)s 2(v)k 2(er)k
283 810(multiple)m 283 617(lines)m 650(with)s 283 424(aligned)m 283 231(equals.)m
grestore
grestore
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor 8655 11273(\(3.8\))m 0 9356(Notice)m 676(that)s
1102(the)s 1463(normal)s 2178(deri)s 5(v)k 5(ati)k 5(v)k 3(es)k
3210(of)s 220 fnt4 3501 9350(f)m 220 fnt1 3706 9356(at)m
3961(the)s 4321(f)s 2(aces)k 4856(are)s 5216(needed.)s
5974(The)s 6408(simplest)s 7236(w)s 2(ay)k 7691(to)s
7953(compute)s 8802(the)s 0 9092(equation)m 812(3.8)s 1134(is)s
1330(by)s 1604(using)s 2133(a)s 2289(staggered)s 3187(mesh)s
3707(as)s 3939(sho)s 5(wn)k 4563(in)s 4790(\207gure)s
5357(1)s 5503(and)s 5878(the)s 6201(follo)s 5(wing)k
7103(for)s 7418(the)s 7741(con)s 8(v)k 3(ection)k
8750(and)s 0 8828(dif)m 5(fusion)k 840(terms.)s 220 fnt2
3371 8411(Con)m 8(v)k 2(ection)k 4473(in)s 220 fnt3
4708 8413(x)m 220 fnt2 4860 8411(dir)m 3(ection)k 220 fnt1
0 7968(The)m 392(con)s 8(v)k 3(ection)k 1396(term)s
140 fnt1 1798 8049(2)m 220 fnt1 1920 7968(can)m 2276(be)s
2534(re)s 5(written)k 3372(as)s 3600(in)s 3823(3.9.)s

[ /Dest /LOUTConvNotApprox /DEST pdfmark
286 fnt4 2224 7438(\362)m 154 fnt3 2306 7374(V)m 220 fnt4
2422 7498(\321)m 2637(\327)s 2741(\()s 220 fnt2 2818 7503(u)m
220 fnt3 2947 7505(u)m 154 fnt3 3052 7426(k)m 220 fnt4
3133 7498(\))m 220 fnt3 3205 7505(dV)m 220 fnt4 3476 7498(\273)m
220 fnt3 3603 7505(u)m 154 fnt3 3708 7426(n)m 220 fnt4
3792 7498(D)m 220 fnt3 3937 7505(x)m 220 fnt4 4045 7498(f)m
154 fnt3 4153 7416(n)m 220 fnt4 4292 7498(+)m 220 fnt3
4476 7505(u)m 154 fnt3 4581 7426(e)m 220 fnt4 4656 7498(D)m
220 fnt3 4801 7505(y)m 220 fnt4 4906 7498(f)m 154 fnt3
5014 7416(e)m 220 fnt4 5144 7498(+)m 220 fnt3 5328 7505(u)m
154 fnt3 5433 7426(s)m 220 fnt4 5500 7498(D)m 220 fnt3
5645 7505(x)m 220 fnt4 5753 7498(f)m 154 fnt3 5861 7416(s)m
220 fnt4 5983 7498(+)m 220 fnt3 6167 7505(u)m 154 fnt3
6272 7426(w)m 220 fnt4 6383 7498(D)m 220 fnt3 6528 7505(y)m
220 fnt4 6633 7498(f)m 154 fnt3 6741 7416(w)m 220 fnt1
8655 7504(\(3.9\))m 0 6958(Assuming)m 220 fnt4 955 6952(f)m 1140(=)s
220 fnt3 1335 6959(u)m 220 fnt1 1440 6958(,)m 1554(it)s
1747(is)s 1955(f)s 2(air)k 2328(to)s 2565(assume)s
3277(the)s 3612(follo)s 5(wing)k 4526(e)s 3(xpressions)k
5608(for)s 5935(each)s 6406(magnitude)s 7400(at)s 7629(one)s
8013(point)s 8536(of)s 8802(the)s 0 6694(domain)m 711(for)s
1022(the)s 1341(situation)s 2149(sho)s 5(wn)k 2769(in)s
2992(\207gure)s 3555(1:)s 0 6096(V)m 24(elocities)k 910(at)s
1123(f)s 2(aces)k 220 fnt3 1760 6097(u)m 154 fnt3
1865 6046(n)m 220 fnt4 2015 6090(=)m 220 fnt3 2210 6272(u)m
154 fnt3 2315 6221(i)m 154 fnt4 2362 6216(,)m 154 fnt3
2410 6221(j)m 154 fnt4 2472 6216(+)m 2575(1)s 220 fnt4
2702 6265(+)m 220 fnt3 2886 6272(u)m 154 fnt3 2991 6221(i)m
154 fnt4 3038 6216(,)m 154 fnt3 3086 6221(j)m gsave
2210 6145 translate
220 fnt3
918 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 2616 5936(2)m 220 fnt1 3128 6096(,)m 220 fnt3
3226 6097(u)m 154 fnt3 3331 6046(e)m 220 fnt4 3472 6090(=)m
220 fnt3 3667 6272(u)m 154 fnt3 3772 6221(i)m 154 fnt4
3832 6216(+)m 3935(1)s 4003(,)s 154 fnt3 4051 6221(j)m
220 fnt4 4159 6265(+)m 220 fnt3 4343 6272(u)m 154 fnt3
4448 6221(i)m 154 fnt4 4495 6216(,)m 154 fnt3 4543 6221(j)m
gsave
3667 6145 translate
220 fnt3 918 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 4073 5936(2)m 220 fnt1 4585 6096(,)m
220 fnt3 4683 6097(u)m 154 fnt3 4788 6046(s)m 220 fnt4
4921 6090(=)m 220 fnt3 5116 6272(u)m 154 fnt3 5221 6221(i)m
154 fnt4 5268 6216(,)m 154 fnt3 5316 6221(j)m 154 fnt4
5378 6216(-)m 5480(1)s 220 fnt4 5607 6265(+)m 220 fnt3
5791 6272(u)m 154 fnt3 5896 6221(i)m 154 fnt4 5943 6216(,)m
154 fnt3 5991 6221(j)m gsave
5116 6145 translate
220 fnt3 917 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 5522 5936(2)m
220 fnt1 6088 6096(and)m 220 fnt3 6459 6097(u)m 154 fnt3
6564 6046(w)m 220 fnt4 6741 6090(=)m 220 fnt3 6936 6272(u)m
154 fnt3 7041 6221(i)m 154 fnt4 7101 6216(-)m 7203(1)s
7271(,)s 154 fnt3 7319 6221(j)m 220 fnt4 7427 6265(+)m
220 fnt3 7611 6272(u)m 154 fnt3 7716 6221(i)m 154 fnt4
7763 6216(,)m 154 fnt3 7811 6221(j)m gsave
6936 6145 translate
220 fnt3 917 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4
7342 5936(2)m 0 5285(\255)m 220 fnt1 180 5291(v)m 4(ol.)k
552(\210o)s 5(w)k 986(rates)s 220 fnt3 1760 5292(F)m
154 fnt3 1872 5241(n)m 220 fnt4 2022 5285(=)m 220 fnt3
2217 5467(v)m 154 fnt3 2295 5416(i)m 154 fnt4 2342 5411(,)m
154 fnt3 2390 5416(j)m 220 fnt4 2443 5460(D)m 154 fnt4
2698 5541(-)m 220 fnt3 2588 5467(x)m 220 fnt4 2859 5460(+)m
220 fnt3 3043 5467(v)m 154 fnt3 3121 5416(i)m 154 fnt4
3181 5411(+)m 3284(1)s 3352(,)s 154 fnt3 3400 5416(j)m
220 fnt4 3453 5460(D)m 154 fnt4 3708 5536(+)m 220 fnt3
3598 5467(x)m 1587 0 0 0 220 264 11 2217 5340 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 2958 5131(2)m 220 fnt1 3804 5291(,)m
220 fnt3 3902 5292(F)m 154 fnt3 4014 5241(s)m 220 fnt4
4147 5285(=)m 220 fnt3 4342 5467(v)m 154 fnt3 4420 5416(i)m
154 fnt4 4467 5411(,)m 154 fnt3 4515 5416(j)m 154 fnt4
4577 5411(-)m 4679(1)s 220 fnt4 4751 5460(D)m 154 fnt4
5006 5541(-)m 220 fnt3 4896 5467(x)m 220 fnt4 5167 5460(+)m
220 fnt3 5351 5467(v)m 154 fnt3 5429 5416(i)m 154 fnt4
5489 5411(+)m 5592(1)s 5660(,)s 154 fnt3 5708 5416(j)m
154 fnt4 5770 5411(-)m 5872(1)s 220 fnt4 5944 5460(D)m
154 fnt4 6199 5536(+)m 220 fnt3 6089 5467(x)m 1953 0 0 0 220 264 11 4342 5340 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4
5266 5131(2)m 0 4486(\256)m 220 fnt1 266 4492(v)m 4(ol.)k
638(\210o)s 5(w)k 1072(rates)s 220 fnt3 1760 4493(F)m
154 fnt3 1872 4442(w)m 220 fnt4 2049 4486(=)m 220 fnt3
2244 4668(u)m 154 fnt3 2349 4617(i)m 154 fnt4 2409 4612(-)m
2511(1)s 2579(,)s 154 fnt3 2627 4617(j)m 220 fnt4
2680 4661(D)m 220 fnt3 2825 4668(y)m 220 fnt4 2985 4661(+)m
220 fnt3 3169 4668(u)m 154 fnt3 3274 4617(i)m 154 fnt4
3321 4612(,)m 154 fnt3 3369 4617(j)m 220 fnt4 3422 4661(D)m
220 fnt3 3567 4668(y)m 1417 0 0 0 220 264 11 2244 4541 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 2900 4332(2)m 220 fnt1
3661 4492(,)m 220 fnt3 3759 4493(F)m 154 fnt3 3871 4442(e)m
220 fnt4 4012 4486(=)m 220 fnt3 4207 4668(u)m 154 fnt3
4312 4617(i)m 154 fnt4 4359 4612(,)m 154 fnt3 4407 4617(j)m
220 fnt4 4460 4661(D)m 220 fnt3 4605 4668(y)m 220 fnt4
4765 4661(+)m 220 fnt3 4949 4668(u)m 154 fnt3 5054 4617(i)m
154 fnt4 5114 4612(+)m 5217(1)s 5285(,)s 154 fnt3
5333 4617(j)m 220 fnt4 5386 4661(D)m 220 fnt3 5531 4668(y)m
1418 0 0 0 220 264 11 4207 4541 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 4863 4332(2)m 220 fnt1 0 3862(Element)m 786(dims.)s
220 fnt4 1760 3856(D)m 154 fnt4 2015 3937(-)m 220 fnt3
1905 3863(x)m 220 fnt4 2187 3856(=)m 220 fnt3 2382 3863(sx)m
154 fnt3 2564 3812(i)m 220 fnt4 2670 3856(-)m 220 fnt3
2853 3863(sx)m 154 fnt3 3035 3812(i)m 154 fnt4 3095 3807(-)m
3197(1)s 220 fnt1 3258 3862(,)m 220 fnt4 3356 3856(D)m
154 fnt4 3611 3932(+)m 220 fnt3 3501 3863(x)m 220 fnt4
3784 3856(=)m 220 fnt3 3979 3863(sx)m 154 fnt3 4161 3812(i)m
154 fnt4 4221 3807(+)m 4324(1)s 220 fnt4 4451 3856(-)m
220 fnt3 4634 3863(sx)m 154 fnt3 4816 3812(i)m 220 fnt1
4911 3862(and)m 220 fnt4 5282 3856(D)m 220 fnt3 5427 3863(y)m
220 fnt4 5598 3856(=)m 220 fnt3 5793 3863(sy)m 154 fnt3
5960 3785(j)m 220 fnt4 6068 3856(-)m 220 fnt3 6251 3863(sy)m
154 fnt3 6418 3785(j)m 154 fnt4 6480 3780(-)m 6582(1)s
220 fnt1 0 3340(Notice)m 642(that)s 1034(in)s 1265(order)s
1790(to)s 2018(compute)s 2833(either)s 3394(v)s 3(elocities)k
4285(at)s 4506(the)s 4832(f)s 2(aces)k 5333(or)s
5579(boundaries)s 6595(of)s 6852(the)s 7179(cell)s 7553(or)s
7799(the)s 8126(v)s 4(olumetric)k 0 3076(\210o)m 5(w)k
443(rates,)s 963(both)s 1416(the)s 1744(horizontal)s 2695(and)s
3075(v)s 3(ertical)k 3789(v)s 3(elocities)k 4681(at)s
4904(the)s 5232(points)s 5824(that)s 6217(mak)s 2(e)k
6751(up)s 7029(the)s 7357(domain)s 8077(are)s 8405(needed.)s
0 2812(Furthermore,)m 1195(the)s 1514(latter)s 2019(also)s 2421(require)s
3093(that)s 3477(the)s 3796(coordinates)s 4853(of)s 5102(these)s
5603(are)s 5921(kno)s 5(wn.)k 220 fnt2 3464 2349(Diffusion)m
4381(in)s 220 fnt3 4616 2351(x)m 220 fnt2 4768 2349(dir)m 3(ection)k
220 fnt1 0 1933(The)m 383(dif)s 5(fusion)k 1213(term)s
1661(has)s 1989(been)s 2446(analytically)s 3509(found)s 4066(by)s
4327(means)s 4923(of)s 5163(e)s 3(xpression)k 6140(3.10,)s
6613(where)s 220 fnt4 7190 1927(D)m 220 fnt3 7335 1934(x)m
220 fnt1 7477 1933(and)m 220 fnt4 7839 1927(D)m 220 fnt3
7984 1934(y)m 220 fnt1 8123 1933(come)m 8639(from)s 1134 0 0 0 220 264 55 0 1274 LoutGr2
0 0 moveto xsize 0 lineto stroke
grestore

grestore
112 fnt1
0 1086(1)m 176 fnt1 53 1022(The)m 367(di)s 4(v)k 2(er)k 3(gence)k
1169(theorem)s 1787(states)s 2212(that)s 2518(for)s 2766(a)s
2888(v)s 3(olume)k 176 fnt3 3452 1023(V)m 176 fnt1
3616 1022(of)m 3814(boundary)s 4518(surf)s 1(ace)k 176 fnt4
5064 1017(\266)m 176 fnt3 5153 1023(V)m 176 fnt1 5273 1022(,)m
228 fnt4 3711 565(\362)m 123 fnt3 3776 514(V)m 176 fnt4
3868 613(\321)m 4039(\327)s 176 fnt2 4120 617(J)m 176 fnt3
4213 619(dV)m 176 fnt4 4481 613(=)m 4635 575(\260)m 228 fnt4
4637 565(\362)m 123 fnt4 4702 511(\266)m 123 fnt3 4765 514(V)m
176 fnt2 4857 617(J)m 176 fnt4 4993 613(\327)m 176 fnt2
5074 617(n)m 176 fnt3 5177 619(dS)m 112 fnt1 0 109(2)m
176 fnt1 62 45(In)m 250(order)s 664(to)s 839(easen)s
1271(the)s 1526(w)s 1(ork,)k 1965(the)s 2220(density)s
176 fnt4 2766 40(r)m 176 fnt1 2896 45(has)m 3167(not)s
3435(been)s 3809(typed.)s 
grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 5 6
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Symbol
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5783 -1567(-)m 5901(5)s 6053(-)s 9066 13428 0 13428 220 264 55 1417 -15423 LoutGr2
1 LoutMargSet
grestore
LoutStartEPSF
2563 8828 translate
20.0000 20.0000 scale
0 1 translate
%%BeginDocument: contents/figs/element.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Mon Aug  7 16:53:26 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 -1 197 229
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%BeginSetup
%%BeginResource: font TimesNewRomanPS-ItalicMT
11 dict begin
/FontType 42 def
/FontName /TimesNewRomanPS-ItalicMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 43 /plus put
Encoding 44 /comma put
Encoding 45 /hyphen put
Encoding 49 /one put
Encoding 70 /F put
Encoding 99 /c put
Encoding 101 /e put
Encoding 105 /i put
Encoding 106 /j put
Encoding 110 /n put
Encoding 112 /p put
Encoding 115 /s put
Encoding 117 /u put
Encoding 118 /v put
Encoding 119 /w put
Encoding 120 /x put
Encoding 121 /y put
/CharStrings 18 dict dup begin
/.notdef 0 def
/p 1 def
/i 2 def
/comma 3 def
/j 4 def
/plus 5 def
/one 6 def
/hyphen 7 def
/u 8 def
/w 9 def
/n 10 def
/s 11 def
/F 12 def
/v 13 def
/e 14 def
/c 15 def
/y 16 def
/x 17 def
end readonly def
/sfnts [
<00010000000900800003001063767420ff44a297000019f8000007786670676db851b1c00000
21700000053d676c7966e5e7d9fd0000009c0000195c68656164c488885b000026b000000036
686865610c7d03d8000026e800000024686d747843d900870000270c000000486c6f63610000
d968000027540000004c6d617870052a0c4d000027a000000020707265708273be69000027c0
00000ac00002010000000500050000030007003fb40201f80607b802664013000504f803000a
0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c
10fc3cfd3c3130211121112521112101000400fc2003c0fc400500fb002004c00002ff1efe4a
03c80389002300320153404b55018d0c9d0cad0cbc0d0539154b00460e4615482a5506650e75
0e791aac28b908bc29b92ac91a0e43225000560e0330003422400003010d2431320e0e00161a
173016150e14301523451bb801a7400e282230234d0024012f2601001b2fb8038d4022040400
0728000e00230e1f1a1b141a1a1b26240a0b16150e0f1a011a33281b1a102cba03810007ffc0
b22e3507b8ffc0b2293507b8ffc0b2273507b8ffc04015203507401f354f0701400750077007
a007c0070507ba033b0000032bb41b2323b81ab8ffc0b732351a401e123f1ab8ffc040121c35
1a401b1d34ef1a011b19331a171a330ab8033ab156182b2b103c2b10f45d2b2b2b2b7ae8182f
10edfd5d712b2b2b2b2be92b103c2b10c071003f3c3fed870e2e2b087d10c42b183f003c10ed
01111239001112393910f5ed2bfc01f50010ed0110c00010ed0110c0870e103c3c3c3c7dc431
30015d5d5d005d01073636333216151400232226270306151416163307213736363713363534
2623220735131633323e033534262322060701c5456dab59597efe9aee324d30491617344d09
fe290a5d4124fd171f201d346e3e69346c67524149316cd3310389e680668d71dcfe39161cfe
fe4c17161f11252504387f036c53141b1e0727fd134a3a7295ca635055f8a600000000020058
ffe8022e0516000b002901244027176e3a3516763a35122b4012352b40191b34590c01192301
16172945215a282830294d0c007006b8039c401a0c07280c0f0c290f1f1e21141e1e211b0b1e
2a28211e10178a16b80143b40f0970030cb80147b203600fb80123b7296c121e401b351eb8ff
c0b33a3b341eb8ffc0b32a34341eb8ffc040092324341e401f20341eb8ffc04013131634301e
8f1e021e192a1e171e2a0a7786182b2b103c2b4e10f45d2b2b2b2b2b2b435c58400b1e401c11
3f1e400d113f1eb8ffc0b3160d3f1eb8ffc0b117392b2b2b2b594de4fde4e610ed10f6ed2b10
3c2b10c0003f870e2e2b087d10c42b183f00f6ed10f5ed2bfc01f510c9313001715d2b2b435c
58b517400c143f0db8ffdeb61339172213390db8ffdeb50f3917400f392b2b2b2b2b59012b2b
0132161514062322263534361303061514163332373637170607062322263534371336353426
2322073501ca2a3a3b29293b3a37c614130d0f15393a23445c443e29341982201f1b16450516
3a2a293b3b292a3afe73fd43470e1014102d53176847353125255601c06e1c161c0b27000001
ffebfeff011000b40014002f400c001414ef3f0e017f0e010e11ba0174000402b5b7003e0b19
156df5182b4e10f44dece4ed002f5d71ed10c931300736373635342726262726353436333216
15140607154b2f2406043003073b28293f8c85e122342825120f08300911162b3e423259b632
0002fea4fe46023e0515000b003000e7b61232400f103432b8ffc0b31b273432b8ffc0401d0d
355f0d5f255b265b279330051a29013045265a282f30304d0c007006b8039c40210c070c0d0c
300d1f25261425252616b82224100f25400f39253128262510097003b8ffc0400e2a35900301
40035003020357320cb8032bb34f260126b8019fb5261ee4133a1ab80335400b26eb31251725
310a3286182b2b103c2b10f6f6fded10e45ded10f45d712bed2b103c2b10c02b003ffde4870e
2e2b087d10c400183ff6ed10f5ed2bfc01f5313001715d2b2b2b435c5840140d400f390e400f
3925400f390c400f3926400f392b2b2b2b2b5901321615140623222635343613010606232226
35343633321716151407061517161633323637133635342623220706073501d92a3b3b2a2a3b
3b3afefd45f18c3f4131201d1612190e02030c0c51732de0212b210d110d1905153b2a2a3b3b
2a2a3bfe74fc81f0d43a281f2f130f131a130b07050404679a0300710c182603020423000000
00010025008d045b04c3000b0043402606d7075d0ad70b0b00082909d70005d7045d01d70008
d7060b290500d77f020102190c9ff6182b4e10f45d4df43cfd3ce4002ff4fde410f4ed103c10
f4fde431302511213521113311211521110216fe0f01f15201f3fe0d8d01f35201f1fe0f52fe
0d000001007d000003570568001b00ca401a071a015602670276027403bd0d05080008101701
170f04080f09b80138b308070106410b01380007001a01a30010020e002800190138001a01fd
401300100f0103000828100f0fe601001401010019ba01f4001a030d40091b1b000508070c00
01bb03280010001a020bb31f0f010fb80327400b10011c2800100117011c0aba022801e30018
2b2b103c2b2b3c2b10c0012bf65de43cf53c003f3c3f3c10f4ed870e2e2b7d10c42b11121739
180010f5ed2bfc01f50010ed0110c00010ed0110c03130015d5d007101010615141617072137
3637363736371336373635342623220727250357febe1c335e0afdfd0e521a2a152122e81502
0326211a370d01510568fb9f632c2527072525020b121e2e770325490b141323280c245e0001
0036017a026501ff0003001cb300830201b80311b6050219046d8e182b4e10e44d10e4002ffd
313001072137026529fdfa2901ff85850001003cffe803c40389003c01974084083a193a0212
35314731543c6a1679157a16ac15c500fa1509552e543b6a09034b1554005a150336003c1502
2128293902ab090139263f284f285f28f515f616f53907143b3c3c13090a262738393a161705
33153c1326271b3d2e33331f1b20141b1b202b073c00060003031f133c1413133c180e0b1b13
3d28201b3c13100a8a096003b80203401b3cad134043351340181934134015351f134f135f13
8f139f130513b80234400c33251b402e012e252095121bb8ffc0b23a351bb8ffc0b31819341b
b8ffc0b31415341bb8ffc0b32c34341bb8ffc04019232834301b401ba01b031b193d091b1713
171b133d0a77c3182b2b103c3c2b2b2b4e10f45d2b2b2b2b2b435c58b51b4023123f1bb8ffc0
b3120b3f1bb8ffc0b116392b2b2b59014df4ed5d10edf45d2b2b2be4edf4ed2b103c103c2b10
c0c0003f3c870e2e2b057d10c400183f3c3f870e2e2b0e7d10c4011112393911123912173910
c910c9870e103cc43130005d01715d5d5d5d5d435c58401815180b3915180c3900220c393b22
0c3930220c391e220c392b2b2b2b2b2b59015d01030615141633323637170607062322263534
373637020623222635343713363534262322060727363736333216151407030615141633323e
02373703c4ae270d0b1129531e4f533733272c0d104baae5622e402c5720110a152a4a1f4b54
4036252f285e271915216ab17341160371fdac852312111f6c177d3b262c2322384af8fee9d4
40314b9b01356f1b0c111e601674372b2f25368bfebd8423131742e3c7d94c00000000010023
ffe8054b0389002b0159400b1815191b020815091b022ab8ffde40270c0d3e571a532a651a60
2ae01a052a152f1b3c16481b5f1b5c2a6e1b6c1f692ba527b42b0b122db8ffc0b3303a342db8
ffc0b22e352db8ffc0b22a352db8ffc0b21f352db8ffc0b31e3a342db8ffc04030171c341a2a
c901011800228a25c62b26260e0e00071c1b1b1919180b02030405060511191b2b1a1c1f0b2f
0b3f0b030bb8019fb505820f110111b80337400c01e5198a18821a2b8a00e51ab8028e400a1b
8a1c254f245f240224b8032fb22ae51cb8ffc0b328143f1cb8ffc0b22b351cb8ffc0400f2e36
341c402135301c401c501c031cba0323002c0338b1de182b10f65d2b2b2b2bedf65d3c10edfd
fded10fdfdedfd5dfde45d1112393911121739003f3c103c103c3f3c103c103cf4ed19111239
2fe4182f3130012b2b2b2b2b2b435c58b41b220c3917b8ffdeb2113918b8ffdeb511391a220f
392b2b2b2b595d005d2b015d5d01133637363534272e02353436333216151407060706020723
030123022726272623220735251613161701035a45ae683d0a0437162e2429390f1e576ae137
2541fe632c07240f2319331d2d011f3c120604019b0389fd12ccb3692f1611092325151f2b3d
33342d5688a3fee93802b4fd4c01abf7672017062443a7fea6832202a600000000010027ffe8
03ad03890036018f400901180c392d180c390ab8ffde409c13143e14221339082f16001b021b
2f0451075209521e512079017b2d891ea627a428ba02ba260b5c015c28bf01035a095a1e5a20
03690669096a1e7909791e7b2606562a51356c260352000114221935132219350101022a2b2b
00131436452d5a283530364d0001232c01002d9f2301233104040007070c0c1f1b20141b1b20
002b00362b1f2c2d142c2c2d2c2b0a180b1b3728201b2d2c10148a13b80143b30c072520b801
24b20c251bb8ffc0b25c351bb80295b235c92dbc0124002b0203002cffc0b217392cb8ffc0b2
5c352cb8ffc0b23a352cb8ffc0b32a34342cb8ffc0b32324342cb8ffc0b21c352cb8ffc04013
191a34ef2c012c19371b172c171b370a3286182b2b103c2b2b4e10f45d2b2b2b2b2b2b2b4ded
e4e4f42bedf4ed10f6ed2b103c103c2b10c0003f3f3c87052e2b087d10c4870e2e182b7d10c4
00183f3c10ed72011112390011123910f5ed2bfc01f510c987100e7dc4083c3130012b2b5d5d
5d4bb032534bb036515a58b120223859015d005d015d712b2b2b2b0103123633321615140703
0615141633323736371706070623222635343713363534262322070606070607072313363534
26232207072701c485bbc75c32411d7a1510090c11353f1f5d533a2e252c2274161a131c274a
a0592f1f3296b620231a0c1e26060389fe390117b042353c64fe5b49100e130d2a5613853927
2d26307501924b2a1419182dcfa15565a50272711716210406240001ffedffe802e703890030
00b7402432010117221b103f080b040f180b150f3a2705280b230f9903032f013f014f015f01
0401b80104400a2ec60030070524290719b801b5403415c618170b1d24110b028a00c6014012
0b3f50010101c90e3ad020e020f020037f208f209f20c0200420a0083a26951a8a19c618b8ff
c040133435184030351840212234a018c01802187c31ba0144016400182b10f55d2b2b2bf4ed
f4edf45d5dfdf45d2be4ed003fed3f3ce4ed3fed3f3ce4ed5d3130015d5d2b005d0103232626
2322061514161716161514062322272623220723133316163332363534272e02353436333217
161633323702e73d2505684d3e491d31824cad84485e21122d17253d250672634c59101cb333
8d6f201a0e67112b1d0389fecd867a4430213c368e904068a1220c2e0144987e553e28223cd4
6a3561860503272f0001ffce00000559054c002f0148b515220f113e31b8ffc04083193a3405
0e150e9726a726bd04b511b72607010e0e00010e0f0f00072c0d0d5f081d07161d171d162768
2f2f61281d270648020261051d06150f141d15042501251e241d25000f0f1e1d1e141d1d1e2f
2e25022e0d0e0e1525021615081d30281e1d1006a90007400702cf07df070207279200263026
40265026702605261a3100d40fba0301001e0345400c120f1d1f1d2f1d03801d011db80173b6
30091d171d300ab80173b1fc182b2b103c2b2b4e10f45d71435c58b9001dff80b326173f1db8
ff80b328183f1db8ff80400b2d173f1d4018391d4011392b2b2b2b2b59014de4fde44e10f671
4de42f5d71e42b103c2b10c0003f3c3f12392f3ced10ed870e2e2b057d10c4180010ed0110c0
5d0010ed0110c02eedec0010f5012eedec0010f510ed0110c02eedec0010f58705103c7dc407
103c3130015d2b2b010333323637330323363534262323030615141617072137363736373637
133635342626233721032336353426272623029aa0b278773f268d280f516fb47620376b0cfd
e80d4e1a28131b25ef1d1a334c0c041c64260b4939288b0504fde74a79fe123c273d43fe676d
242528072525020c111d2980033163381a251225fea93e28424d100a0001002cffe8038a0389
002600fb4041b701012840103528400c3528400e3559025803b604d92104291c3b1c49020338
220108090a010c0d0e071807070120248a00c61501071f200b1f122f123f120312b8019fb70f
271840170e3f18b8ffc0b22a3518b8ffc0401b2635ef18ff18022018401880189018cf180518
1a281f8a20004926b8ffc0400c14353f264f265f26bf260426bc0323000702030020ffc0b32c
2e3420b8ffc0b22a3520b8ffc040192529342040170e3f502080209020a02004202030204020
0320b8021cb32732de182b10f65d5d2b2b2b2bedf65d2be410ed4e10f65d5d2b2b2b4dfde45d
003f3c3f3cf4ed191112392f01121739313001715d5d2b2b2b005d1325161716171617363736
373637363534263534363332161514070606070607230227262322072c01211f131b11080e7d
188414210d0b5d33232a40101a8e9e14ca25184c193a192e034b3e4a4d719b4efc8a21b31f35
281e1b1a442a20324533332f4cdbb817d102799d3309000000020040ffe803710389001a0025
00fe40360f100b251810182504000810080212530851090228092a2538093b1e480749084909
480a5b08571055259304a204a513b204b6251027b8ffc0403d263509221c113f0822120b3f08
090809051b0008091520008a1b40080a3e0d1b1d1b2f1b031b1b0b2324120705270b0b203a0f
151f1502151a27004902b8038140170e8053350e8028503f0e401c113f9f0e010e19262bc318
2b4e10f45d2b2b2b4df9e44e10f65d4ded003fed3fed12392f5d2bed01111239391239001139
3910c93130012b2b2b5d005d435c58b90009ffdeb3120b3f09b8ffdeb3110a3f08b8ffdeb311
0a3f07b8ffdeb3090c3e08b8ffdeb2090c3e2b2b2b2b2b59005d015d13061514163332363717
06232226353412243332161514070607062736373636353426232206f4077e5a48858315edd7
9294b80116936a664257a970c4945d7b7b353166e501793221597d3b651debb86f950138ad56
3b534c633d291a11293799452a34d9000001003cffe8036c03890028010d40460040170e3f28
40170e3f2e002c012b272e283e003e013a053e273e288c028b218927ab02a424b51fb324101f
001a021a0419051a271f28068526017a278a27a621031605012ab8ffc0b211352ab8ffc0b216
352ab8ffc0400e23359f28af2802280000280d1911b80104b41d240a0725b8ffdeb31b103f25
b8ffdc40221e392527030b00c9147019270d8053352f0d3f0d4f0d5f0d040f0d1f0d020d1a2a
22b80381401e068053353f064f065f066f06048006a006b006c006d006050619292b56182b4e
10f45d712b4de94e10fe5d712b4dedede4003fed2b2b3feded011112393910c95d3130012b2b
2b715d004bb021534bb02e515a58bb001fffe8001effe8383859007101715d2b2b2506062322
26353412243332161514070623222635343e0235342726232206070615141633323637031b68
d4768e9fab01218b6d6c261c291f290f2f0a131d3562c0445274644d975eda7d75a087990128
b95b423e2c22281e13202d140b150e148a7f9a9a66774d650001ff60fe460386038900380113
405b9b310131183a3509191a1929193d19a602b402ba1ab428b832c603c604ca19ca1a0d491b
591b691b030431302f2f051d2b1e1a311a1104302f2e2d2b281c1b08213105060708090a0b0c
081704358a38c614000724c92b271e0f21b801c040373111400b12340f111f110211280c7517
40170e3f9017a0170250178017b017032017301740170317493a3849bf37013f374f375f3703
37b80323400d04e531401c113f31401e123f31b8ffc040172529349031a031ef310350318031
022031303140310331b8021cb33932de182b10f65d5d5d2b2b2bedf65d5de410f45d5d5d2bfd
e45d2b10e4003ffdec3f3cf4ed011112173911121739111239001239111239870e7d10c404c4
3c3130015d5d2b017201161617133637363736373635342e0235343633321615140600070606
232226353436333217161617163332373637363703262623220727014b221a0d2c3c72375131
0b060e3b2730242c3e6cfeccdb9792341f2f4126140d0813080507060f3749602e380e384215
360903893a6594fe14489c4c83502010110b0e133321293249404fcbfe5cf8ab592f1f274009
052f08050a224a623e027a9d440625000001ffbcffe8038403890046010840630d40120b3f07
00072a003d013e14001601240023014a1b56018919a301a919aa2aa83daf3f10484010351017
63217321c919cb210509230c2a52230304191a1a022a2a2b3e403e3c40282122021a1a1f2840
142828403e2a1904041135428a46c60011b80395401f153a0a0a000735c639272e2e260b042a
193e218a9f22cf220222c90d02e445ba014700400124b21a8228b8019f401d19e43e403b4b34
3e401d353e3e47200d400d8f0daf0d040d1a48321947b80114b1de182b4e10e410e65d12392f
2b2b4dedf4edf4e6ed10f45ded11123939003f3c10fde43f3c10fde410f4ed11121739870e2e
2b0e7d10c40110c90708103c083c870e10c4c43130005d5d012b5d2b01161716173736363736
3332161514070623222726232207060713161633323736371706070623222726030207062322
272635343633321716333237363637262726262322073501673119122958236426181d2b330f
1c2415182f1018213e5652131a0d151c3727233f613726382115429c5e3d392821182c202024
1a0e0c132fa2193e05174a48171e038934342499843057100a2e21260e1909101c3495fea84f
1f172e4a12764e2c3f270129fef14e321d1625212c20171026fc38f30e41360224000000058e
0000054c001f054c001c037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68ffe2
033e00000095000000950000000000000000002500a8008e010b007d00820045003200a400ca
006b0070005100af003c00f001d700470004002500770029004000fd00160161004601370029
008e0017ffca0025005bffe902e600020099008100f2007500d6006300c60006009a01330024
003800cc003dff67001305d8003600860095ffdb0007043400a500d8ffdcfffe004800a200d8
013c01530380053e0057007a007c008c0117012a0138017c0026003c007800bd00c0021009b5
000c004d004e00540058006700b4040100020005005000af01d5034300240058008b013501c0
ffac002000250026002d00410136022bffba001e002a0034003b003f00850094009800d7012e
013d033104b900170040006100b9010e0116012201bfff9c001f001f004d005c0086008c0096
00aa00cb00cb011f0154022f036005a9fee8000e006f007c007d008b00d500f1010a01570178
02b803adfe3fff6affb3ffc4001f0037003f0044004a0078007d009700a200a700b600c000c1
00c600d8011d0150019701ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f
00890095009e00c200da00e400f801040108011101c2023002da030e049e0517ff00ff870000
0020002f00410057007800870088008800b900c200c5012001280133017401d6020e020f026c
027e02ab02ec038903b103e304e7ff43ffa8ffc3ffdcffe9000700230023002600520077007d
0081008f009900ac00ae00b500b800c800ea00f000f40135016a018b01b101b501f7021402ad
02d504fc05d805f0ff9dfffc000b00240025002c0030003000330040004700490057006e009a
00bd00c900cd00dc00fa00fa011b0139017e0187018a018e0195019601df01f6028602cf02de
039603a903b003c804010432046a058b05e006510761fe96fe9aff4bff870013002500340038
003e004a0065006b0073007a009c00a200b200b700bf00f000f700fb0104011301200124013b
01520178017c0181018f01a001d90248026a026f02700301031d032303270388041f04ab04d1
04da057a058bfe26fe59ff2e00010002000a003b003b004700580058005f0066006b007a007a
008b009900af00bc00c000c700cc00e900f200f500fb00fb0102010a010b0115012101270145
0145015501570158015e01610168017d01a301ab01da01ee021002180222028f029402a302d2
02e703710393039b03b303d303fe04ff050b05320532054b0559058b05ab05f2065506890742
076207a708ccfd2afdc8fddefe0cfe15fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffaf
ffc00000000000030094001d001f002000200027002e0048004b004c005e005f006b0071007c
008a00900091009100a700af00b300b400c400c600d100d200de00df00df00e600e800ea00eb
00f200f500f500fc010201180123013101330137015c016201660170017a017a017a01820198
0199019b01b001bf01c001ca01d301d701d801e001e001f601f701f802120213022f02370244
0247024f0252026302650270027f0298029b02a602b702ba02c502cf02d602d702e502fe031c
031d03450348035d035e03710379038103a103b703d403d503d803e103f803fe0404041f0421
04230425043a0467048304e00528054b0564056a059f059f05c2060b066a06af06b306cb06e8
070607280748075007a607b207ff009500af00920096000000000000000000000000017e01a8
0129025b0212020301c302b4019301cd02b204ed020e0159017a0300022d042c00c8004d00e6
02890325013e0378011b00f1018d00490203007c000e029d0247002400000000005200440033
0038005405d3041501a7000002860168005000cf0002004b0024008800ba0025ffd800110091
ff6b00b5011700260065ff9900490080014b01c000f40167027102ea04fc0310017c01e103d9
015501e601ee0434019606cb005c022b0099003d009f00160039002700de00790120022e005a
00990388009400210019002a046c05e8000001f203b200aa0296028902b4ffc9020000ec0005
005a0447010004e00000052a001f01eb00ae016800ca02d3028901b5040601a1014f014b011c
0308005e00c70024029d006503750104028002f304d800d90239025a032c01f2043103030050
02e50283005901eb010800ac019602f8012100950180004400e501eb02e5007400f301ff02fd
038f026801c801c70116022b0142033000fe02e101620200002400ee05170108023700660006
010201e602aa0366019b00d305c203dc044d03b6000401be013702fc03200244014d0338ffed
002506f8030dfed5ff43004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5fbcf
02170192036d0558fff2fe7d0583023e006605e9073d00790243002500cf00fd00af002a01ef
021a0026001f0025003a000001170490fbfb0251001d02f001f50078018f005f002400440054
00bf00af006701a8002600050006003f009800fa02ab00c2004d0375004a00b600c401bf017c
006f00130263000c006801520002012e0104001f001f009a000000f1046900790080005000bd
056b00ab0080001e05a54040403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a29282726
2524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b004262348482d2c45234660
b0206120b04660b004262348482d2c4523462361b0206020b02661b02061b004262348482d2c
45234660b0406120b06660b004262348482d2c4523462361b0406020b02661b04061b0042623
48482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed5158
2320b04d44235920b09051582320b00d44235921212d2c20204518684420b001602045b04676
688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01
b0172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643
b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb017
2344b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21
b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b01923
4445b01a23444565234520b00325606a20b009234223688a6a606120b01a8ab000527921b21a
1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b31940201945208a5458
2321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2c
b10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121
592d2c0120b003252349b04060b0206320b000525823b002253823b002256538008a63381b21
2121212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c
20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b802ee4520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840006260
23212d2cb4000100000015b00826b00826b00826b008260f10161345683ab001162d2cb40001
00000015b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b515a582045
8a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b
5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54b012435c5a5838
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158b00425b004250120
46b01060482046b0106048590a21211b2121592d2cb012435c580cb00425b00425060c642364
6164b807085158b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d2c
4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515a
b012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121
592d2c462346608a8a462320468a608a61b8ff8062232010238ab903b003b08a70456020b000
5058b00161b8ffba8b1bb0468c59b0106068013a2d000000000100000002d1ec88d9c6265f0f
3cf50819080000000000a31fb8bd00000000b53db2f7fc05fd8c08f608300002000900010001
00000000000100000721fe450057086bfc05fcfe08f600180007000000000000000000000000
00120639011c0400ff1e023900580200ffeb0239fea0056600be0400007d02aa00360400003c
0556002304000027031dffed04e3ffce038d002c038d0040038d0038038dff5c038dffb80000
00000000006800000258000003fc00000470000005ec000006600000078c000007c400000a10
00000bfc00000e3000000f7400001150000012c80000143c000015c0000017800000195c0001
0000001200f2003c0068000500020010002f0041000004820ac000030002b9ffc003bbb34545
3240b803bbb32b2e3240b803bbb2282932b9ffc003bbb31a263280411303bb009f03bb00af03
bb00cf03bb0004000003bb001f03bb000203bb02af0027001fffc003b9b2161b32b9ffc003b8
b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df410a03b800ef03b8000203b803b900
28001fffc003b9b3282e32f0410b03b90001000003b7000103b700030800001f03b60381b23a
1f0f411703b3001003b2002003b2005003b2007003b200e003b2000600cf03b300df03b300ef
03b300ff03b30004001203a8b2e2891fbe039f016b019a001f039800930801400c1f7f047f05
027f027f03025fbb02b00001ffc00117b2196632b8ffc0b3651a6632b9ff800173b2196632bd
038401170800001fffc002afb2313340b802afb22e3340b802afb328293240b802afb3262732
40b802afb321253240b802afb31c203240b802afb2233340b802afb21933a0bc02af00b002af
00e002afb5034003212932b8fff2b33a263d32bc038203820382003a0800b51f40255c331eb8
0381b25c6432b8ffeeb3252e3314b80381b32b2e3269be03810001008a03810001000e0381b3
2b2f3210b80381b3515b320cb80381b34e513222b80381b3474d320eb80381b246330ab80381
400926473212254358320cb80381b2323310b80381b22a3312b80381b3373d3212bb0381003d
0033fff44015253d331825355b32102526343206252a330c252e33b8fffe4024252d330c3a2f
33329925aa25ba25c92504052536330c25323832193a293a383a03182517b80381b428253825
04bc0381038103810025080040101f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32
bc038003800380001f080040151f375f07af07025f06af060222ac2b2e3209ac2f33b8ffdc40
0aac1f223222232b52320eb8037fb229330eb8037fb2223314b8037fb21e2032b8ffe7b71e2b
33321e2b2f32b9ffc0037fb64c4f3232262c33410affee037f00390033fff8037f002b0033ff
ea037fb23a3320b8037fb33f46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d320e
b8037fb2263304b8037fb3494a3404b8037fb2463304b8037fb2213318b8037f400c1d332226
3032322226333832b8fff8400a262b2f3209261b21328abe037f0001037f037f037f00260800
402e1f371f062f063f06039f02af02bf02cf02049f03af03bf03cf03046f037f038f03031f03
2f033f034f035f03050f413502ed0001005f02ed009f02ed00df02ed0003002f02ed003f02ed
006f02ed000300af02af0001004f02af009f02af0002002f02af003f02af0002003f02b00001
004f02af005f02af0002002f02af003f02af0002007003b2000103b203b202ed02ed02b002b0
02af02af401a3701003001400102010100090102000800171700000012110840410b027b0223
0034000d013d0034000d01370034000d011b401a340d8f340d84340d68340d59340d54340d48
340d2c340d28340d411002350020000d021b0020000d01fc0020000d01c30020000d01500020
000d012c401a200df0200dbe200d94200d79200d6a200d61200d5f200d44200d410d013e0138
000d003d0138000d00300138000d001d0138000d01fdb40f4d0f0009bf01fd004d000d03b103
7f0015001f0215b226341fb80214b2263f1fb80208b21ebb1f41190206001e0801001f020500
1f02ab001f0204001f02ab001f0203001f0401001f02010031019a001f01fb00230156001f01
aeb2262a1fb801adb2262a1fb801abb226341f411501a8002602ab001f01a5001e0125001f01
a400ab02ab001f01a2003102ab001f01a1003102ab001f019db2236c1fb8019cb2236c1f4109
019b00230401001f019a0033019a001f0176b2262e1fb8016cb231721f4111016b0023019a00
1f016800240401001f014500260801001f013f00230401001f0123b21e9e1fbc0121001e0201
001f0100b426791ffd1fb80125b21ffa33b80801b21ff924b802abb21fe826b80101b21fe51f
b8019ab21fe431b80101400b1fe331e41fe231891fd226b80201b61fd026cd1fcd25b80401b2
1fb731b8019ab21fae26b80801b21fac1eb80401400b1f9e315e1f97269e1f9333b80801b21f
8a24b8019ab21f831fb802ab40131f82236c1f7523e41f7026cd1f6423721f5e25b80401b21f
5d23b802abb21f55e6b80401b21f5324b80201b21f4f33b802abb21f4e26b8040140131f4731
671f4626ab1f4331cd1f3e235e1f3a1fb80401b61f3924e41f3723b80801b21f2e23b80401b2
1f2a1eb80125400b1f2923ab1f2731ab1f5537bc01c60007018a0007012b402e077f07710769
0766074b074007380736072d07220721071408120810080e080c080a08080806080408020800
0814b8ffe0402b00000100140610000001000604000001000410000001001002000001000200
000001000002010802004a00b013034b024b5342b0372b4bb807ff52b0382b4bb009505b58b1
01018e59014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b544218b0382b
b00288b801005458b801ffb101018e851bb0124358b900010140858d1bb900010159858d5959
0016763f183f123e113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d
59b0324b5358b0ff1d594bb04753205c58b9027d027b4544b9027c027b45445958b90146027d
455258b9027d01464459594bb04753205c58b9001e027c4544b90026027c45445958b9017f00
1e455258b9001e017f4459594bb05e53205c58b9001f027d4544b90025027d45445958b901a8
001f455258b9001f01a84459594bb8010153205c58b1ab1f4544b11f1f45445958b9047000ab
455258b900ab04704459594bb8012553205c58b1e61f4544b11f1f45445958b9051000e64552
58b900e605104459594bb01753205c58b124244544b1312445445958b12224455258b1242244
59594bb05153205c58b124244544b1232445445958b17d24455258b1247d4459594bb06e5320
5c58b124244544b1332445445958b1aa24455258b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58b1080042
591610703eb0124358b911b53d801bba011c03d9000b2b59b00a2342b00b2342003f3f182b10
3c012f5d060cb0062342b0072342b0124358b93b21187e1bba040001a8000b2b59b00c2342b0
0d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b
211bba01a80400000b2b59b0102342b0112342002b4bb02e5358b8016b45b02a60b8016b2344
590018456944456944184569444569447373737375757573737475757575752b4bb026534bb0
3d515a58b1262645b0196044592b45186944742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b004bb02a534bb03f515a58b1070745b04060445973732b2b451869442b2b
752b2b4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b45
1869442b002b732b2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01435c58b8ffdeb31e1c33
18b8037fb52b3318262b33b9fff00381b112332b2b2b2b590173742b002b73752b2b732b2b2b
2b2b73752b2b2b2b00>
] def
/f-0-0 currentdict end definefont pop
%%EndResource
%%BeginResource: font TimesNewRomanPSMT
11 dict begin
/FontType 42 def
/FontName /TimesNewRomanPSMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 1 /uni0394 put
/CharStrings 2 dict dup begin
/.notdef 0 def
/uni0394 1 def
end readonly def
/sfnts [
<00010000000900800003001063767420f34dda810000022c000007c46670676d3775a72f0000
09f000000573676c7966812a4a9b0000009c0000019068656164cafced4700000f6400000036
6868656113290c9a00000f9c00000024686d74780b5e014e00000fc0000000086c6f63610000
020800000fc80000000c6d617870066510ac00000fd40000002070726570d2662bf400000ff4
00000f180002010000000500050000030007004db10201bb02be0006000702bfb2000504b802
beb403000a0704b802beb5010019080605bf02be0002000301290009016b015e00182b10f63c
fd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130211121112521112101000400fc2003c0fc
400500fb002004c0000000020032000004f2056b0003000600ec404348057a058a0599050405
181012340218101234032c0b1134042c091134250379068806f706040c021b02020a011a017a
018a01f801050b051b05580503050504010000b802c940160605140606050504050604220302
1403030204060306b802c9b2000805b80205401502010302010003a7200470048004030f0440
040204b801b2400f0500901f062f066f067f068f060506b802ec40151f05014f05af05df05ef
05048005af050205050807191112392f5d7172f45d18ed1910f45d5d18ed113939003f3ced3f
ed3c103c87052e2b087d10c487052e182b87087dc43130015d5d5d5d2b2b2b2b005d33013301
27010132026022023eeffe6bfe4a056bfa955503e4fc1c00058e0000054c001f054c001c0394
001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a004300ae00ba016c0153
002f00430048022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048009d
00e600110027007f00910012006a00cafffc00000024006200a7017c01e900210060008b0434
048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe700be
04010065007f00820088009900b200c0022e034305a000200026003d004e00610065007b00d9
011301310340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d00a100af
00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d00a600a7
00ac00b9013101310217021700020017002900550080008f00a500b200b300d0014b015901c0
01c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab
03220374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1
027e027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c000c200c400f1
01fb0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064008b00ae00b2
00b800b800d600f50111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef011601200129016a017301e3
027e029002b4030e0310032303350341035403590388039403c803ce047204ab04da05490561
05ab0761fe6efed1ff4bff84000000010006001e0027002c0034003700620066006a006b006c
007000700072007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f40100
012101300169016a016d017c0185018e018e019901ac01c101c501c901e101f601f601f60222
022202280236023f02430246026702850285029402d002d602e8031c0363037f03800380039e
03b603d90400040404ff053205320548058b05a706cb07280748076208ccfcedfd2afd59fdde
fe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a100a500a5
00aa00af00b600c600cc00d700dd00ec00f201020105011701180123012a012c0131013f0147
01490149014d01510151015501550157015a015a0161016201680168017f0180018201830184
018d0195019501950198019901a501a901b601b601b701ba01ba01d501df01e601ea01f20200
02000203021702250227022f0239024302430247024f025202520267026f026f027002720276
027e02a702b302b902d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e03d2056601f00320
01da018a0369036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e102f4
02e70415015402e90128049101b7026f034302060000000005d30415048305e8000002d7003a
027d01c002c503830383ffbd003a059e01df059e02d1002004e0021300df01c0018702970000
00ce0269028b0058043405fb0069015a01a905780182013e0288012a03d4049e00e5032302f3
01f00196007a00cd014a0424025e023901ab00cf00fd011e00ed017100700195004001bb01dd
01b8000101a803a7014c020c018d01b0020d0137010000cd032101d4030a0059000000000126
0215015002f0025503bc06d00335010100d000d2007a01030130007c000000000000000000fe
006e006600940227002b0045004d00d3013200180097004100f4febcffe9001605d8058b0091
00a1032c00520030005d02cb003a009200e500e500580086003200ba0099008800300298007c
ff8001640028004d0065000200b8016a002f010b001100170100007f00040016022200a6005f
000000f8000a00ca0043004b01ee0077012000f401c00028045f0000008c044500c20060007b
008b008b0064005d00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb20036008705590256052b043400de
00c901c4004800db018b00b3004800da01160125011800ea00ea00ae0046003e05bb008a04d7
0053003fff8cffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e02b1
ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a54040
403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b
1a1918171614131211100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0406120b06660b0
04262348482d2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c
20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0905158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a43
2343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab10200
080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845441b2121592d2cb001
43632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061
b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a451869
20b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9
ffe0001a45208a54582321b03f1b235961441cb114008a5279b31940201945208a54582321b0
3f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c
0120b003252349b04060b0206320b000525823b002253823b002256538008a63381b21212121
2159012d2c4bb06451584569b00943608a103a1b212110592d2c01b005251023208af500b001
6023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d
2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b0005058b00161593a2f182d2c2121
0c6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21
b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d
2cb4000100000015b00826b00826b00826b008260f10161345683ab001162d2cb40001000000
15b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b545838
1b2121592d2c014b53234b515ab00225b00425b006254923451869525a58b00225b00225b005
25462345696048592121212d2cb0134358031b02592d2cb0134358021b03592d2c4b54b01243
5c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53
234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58
381b2121592d2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a7045
6020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d00000100000002d1ec20574800
5f0f3cf50819080000000000a2e31dc200000000b53db300fb74fd8c103a080e000000090001
000100000000000100000721fe4500571000fb74fe52103a0001000000000000000000000000
000000020639011c0525003200000000000000780000019000010000000200f2003c006f0005
00020010002f0041000005cd0f1800030002b9ffc003e1b345453240b803e1b32b2e3240b803
e1b2282932b9ffc003e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb242
4232b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef03de000203de03df002800
1fffc003dfb3282e32f0410d03df0001037e000f0101001f00a003dd00b003dd0002004003da
b32426329fbf03cc000103ca03c90064001fffc003c9b20d1132410a03c703b70012001f03b6
03b50064001fffc003b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d00
04006f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f03a7004f03a7000403
ab03ab00ef03a50001000f03a5002f03a5006f03a5008f03a50004005403aa0001006b03aa00
0103a8036a0022001f038c03940015001f038b03930015001f03a40393001a001f03a2039400
1e001f03a10393001e001f039f0394001e001f039b0394001a001f039a0393001e001f039903
940016001f039803940016001f03970393001b001f03960394001b001f03950393001b001f03
760375001a001f03740375001a001f03a00373b21e1f10411e03930020039300300393000300
200394003003940040039400030000039400010383036c001e001f03b1036c0032001f036d03
6c0032001fffc0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0037d00d003
7d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c00
0400300373004003730002000003730010037300200373000300e0037300f00373000200b003
7300c0037300d003730003008403730090037300a0037300030377036a0029001f0389036ab2
281f40b80367b33940323fbb0366000100400366b3191d328fbb0366000100400366b3090a32
40b80366b3090e3240b80366b3090f323fbb0365000100400365b3090c3240b80365b31a1d32
40b80365b3090e326b410e0363007b0363000200140363002403630034036300440363000403
63b2242f1fba034e006d0800400e1f7f027f037f047f050430440112bf033200500800001f00
12032d003c080040291f5f3c01376009700980090310092009300940095009056f037f038f03
031f032f033f034f035f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00bc00bd00b05
b006c006d006e006f0060520063006400650066006700680069006a006099006900702600b70
0b800b03100b200b300b400b500b051f0701a041850362000100000362001003620070036200
900362000400f0035f00010020035e0020035f0030035f0040035e00040000035e0000035f00
10035f00d0035e00e0035f00050010030f0020030f0030030f00d0030f00e0030f0005000003
0f0010030f0050030f0060030f0070030f00d0030f00060000030f0010030f0020030f003003
0f00e0030f00f0030f0006030f00270000030e0030030e000200e0030e00f0030e0002030e00
4a00e0030d00f0030d0002030d002700d002fc0001001002fc002002fc005002fc000300d002
fc00e002fc0002000002fc001002fc002002fc003002fc005002fc006002fc000600e002fc00
f002fc0002002002fc003002fc004002fc000302fc406127c02901b02901a02901902901403c
3f413240223f41321212125f235f255f285fa5046f236f256f286fa5044f234f254f284fa504
3f233f253f283fa5042f232f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c045f4c
6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32370f413d02af0001
005f02af009f02af00df02af0003000f02af001f02af002f02af003f02af006f02af000502af
02af001f02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02ad001f02ad
003f02ad005f02ad009f02ad0005005f02ad00df02ad0002000f02ad001f02ad003f02ad0003
004002acb23a334f414c02ac005f02ac009f02ac0003002f02ac003f02ac0002000f02ac003f
02ac00af02ac000300b002ac00e002ac0002004f02ac005f02ac00a002ac0003000f02ac001f
02ac002f02ac003f02ac0004000f035a0001000f035a001f035a003f035a005f035a0070035a
000500cf035700df03570002000f0357001f03570070035700af03570004035a035a03570357
02ad02ad02ac02ac032c400d31151f001616000000121108104110020c004a000d01a8004a00
0d0198004a000d0189004a000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe
02280041000d01940041000d0121400b410db4410d4f410d29410d411002170021000d021500
21000d02060021000d01eb0021000d014e0021000d012c4014210df9210df3210df1210d9d21
0d71210d3d210d4110021c001f000d0214001f000d020b001f000d0196001f000d014a001f00
0d0126400b1f0dc61f0d571f0d371f0d410d019e0141000d00420141000d001e0141000d001b
0141000d01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c291fb801ffb23c41
1fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f9010f0101001f01f6b224e41f41
1501f401490401001f01f301490401001f01f1014900ab001f01f001490067001f01a6003c01
25001f01a4b23c811f411501a3010f019a001f01a200220801001f01a100500401001f019f01
49019a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a002c0101001f0197b2
2ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f41110167002402
01001f0163002502ab001f014c010f019a001f01480149006c001f0147b22c891fb80145b22c
9e1fb80144b22c791fb80143b223311fb80127b23c811fbc012300500101001f011fb223e41f
4115011d0023019a001f011c00230801001f011b00250801001f010e010f0401001f010d0022
0401001f0108b223811fb80106b425e41ff73cbb0125001f00f5010fb29e1fe3bc0149015600
1f00e20149b2ab1fd1b901490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb808
01b21fbf2cb80201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21fa523b80201
400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d010f0156400b1f592c3e1f
4c3cab1f4625b80101b21f403cb80125400a1f3a23721f393cab1f38b80149b3ab1f3124b804
01b21f3025b802abb61f2a24e41f2623b80156b21f5537ba023500070175402c077407620756
0751073b0733072d0720071d071c071408120810080e080c080a080808060804080208000814
b8ffe0402b000001001406100000010006040000010004100000010010020000010002000000
01000002010802004a00b013034b024b534201b0124b004b5442b0372b4bb807ff52b0382b4b
b008505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
2f858d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a515ab0052342180016
763f183f123e113946443e113946443e113946443e113946443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b
5358b0ff1d594bb04753205c58b90271026f4544b90270026f45445958b9017a0271455258b9
0271017a4459594bb04753205c58b9002202704544b9003c027045445958b901b30022455258
b9002201b34459594bb04c53205c58b9014900224544b1222245445958b901c20149455258b9
014901c24459594bb06753205c58b9002402714544b90050027145445958b9021e0024455258
b90024021e4459594bb8020153205c58b9010f00224544b1222245445958b90c00010f455258
b9010f0c004459594bb01c53205c58b125254544b12c2545445958b13725455258b125374459
594bb0ab53205c58b125254544b1232545445958b901590025455258b9002501594459594bb8
010153205c58b125254544b1282545445958b902080025455258b9002502084459592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b01b361dc6463456523456023456560234560b08b766818b080622020b164dc456523
4520b003266062636820b003266165b0dc236544b064234420b161634565234520b003266062
636820b003266165b063236544b0612344b10063455458b163406544b26140614523614459b3
a67f434b456523456023456560234560b089766818b080622020b1437f4565234520b0032660
62636820b003266165b07f236544b043234420b1a64b4565234520b003266062636820b00326
6165b04b236544b0a62344b1004b455458b14b406544b2a640a645236144594b5242014b5058
b108004259435c58b108004259b3020b0a124358601b2159421610703eb0124358b93b21187e
1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b0
0e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b0018
456944456944456944456944737373747373737475752b7373747475184569447373742b4bb0
21534bb046515a58b03cb03c45b040604459012b2b2b2b757575757575757543584010bf3ccf
3c026f3c7f3c8f3c9f3caf3c0575755943584012bf22cf22025f226f227f228f229f22af2206
757559435c58b6403c9f22ef220375592b2b0174747474454473737474757545447345447374
4544737475737373737300757575737575752b2b757575752b752b435841220063032d000100
03032d0013032d0023032d0033032d0053032d000500c3032d00d3032d00e3032d00f3032d00
040083032d0093032d00a3032d00b3032d0004032d032d4518694474747575592b4358b90018
0332b330353238b80332b361663238b80332b3535a3238b80332b3454e3238b80332b33c4132
18b80332b23f330a410f0332000100ba033200ca033200da033200ea033200fa033200050332
03324518694474752b2b2b2b2b2b597300732b012b7575002b2b2b74002b2b2b732b74012b00
2b2b017373737474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b00017375007373004569440073730173742b2b2b2b2b732b00732b752b2b732b2b2b
2b2b2b2b2b2b00>
] def
/f-1-1 currentdict end definefont pop
%%EndResource
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 -1 197 229
%%EndPageSetup
q 0 -1 197 230 rectclip q
0.827451 g
56.215 164.001 64 -64 re f
0.282353 g
0.4 w
0 J
1 j
[] 0.0 d
4 M q 1 0 0 -1 0 228.199997 cm
56.215 64.199 64 64 re S Q
0 g
0 j
[ 2.4 2.4] 0 d
q 1 0 0 -1 0 228.199997 cm
24.215 0.199 128 192 re S Q
[ 2.4 2.4] 0 d
q 1 0 0 -1 0 228.199997 cm
24.215 128.199 m 152.215 128.199 l S Q
[ 2.4 2.4] 0 d
q 1 0 0 -1 0 228.199997 cm
88.215 0.199 m 88.215 192.199 l S Q
[ 2.4 2.4] 0 d
q 1 0 0 -1 0 228.199997 cm
24.215 64.199 m 152.215 64.199 l S Q
0.501961 0 0 rg
0.550305 w
1 j
[] 0.0 d
q 1 0 0 -1 0 228.199997 cm
53.902 95.109 m 59.406 95.109 l 59.406 93.457 l 64.906 96.211 l 59.406 
98.961 l 59.406 97.312 l 53.902 97.312 l h
53.902 95.109 m S Q
q 1 0 0 -1 0 228.199997 cm
118.109 95.109 m 123.609 95.109 l 123.609 93.457 l 129.113 96.211 l 123.609
 98.961 l 123.609 97.312 l 118.109 97.312 l h
118.109 95.109 m S Q
0.501961 0 0.501961 rg
86.613 100.751 m 88.559 100.751 l 88.559 101.501 l 91.559 100.001 l 88.559
 98.501 l 88.559 99.251 l 86.613 99.251 l h
86.613 100.751 m f*
83.738 100.887 0.633 -1.777 re f*
84.863 100.856 1.07 -1.715 re f*
83.117 100.923 0.301 -1.844 re f*
119.414 132.751 m 121.359 132.751 l 121.359 133.501 l 124.359 132.001 l
 121.359 130.501 l 121.359 131.251 l 119.414 131.251 l h
119.414 132.751 m f*
116.539 132.887 0.633 -1.777 re f*
117.66 132.856 1.074 -1.715 re f*
115.918 132.923 0.297 -1.844 re f*
87.414 164.751 m 89.359 164.751 l 89.359 165.501 l 92.359 164.001 l 89.359
 162.501 l 89.359 163.251 l 87.414 163.251 l h
87.414 164.751 m f*
84.539 164.887 0.633 -1.777 re f*
85.66 164.856 1.074 -1.715 re f*
83.918 164.923 0.297 -1.844 re f*
55.414 132.751 m 57.359 132.751 l 57.359 133.501 l 60.359 132.001 l 57.359
 130.501 l 57.359 131.251 l 55.414 131.251 l h
55.414 132.751 m f*
52.539 132.887 0.633 -1.777 re f*
53.66 132.856 1.074 -1.715 re f*
51.918 132.923 0.297 -1.844 re f*
0.501961 0.501961 0 rg
55.465 96.595 m 55.465 100.345 l 54.715 100.345 l 56.215 103.345 l 57.715
 100.345 l 56.965 100.345 l 56.965 96.595 l h
55.465 96.595 m f*
119.465 96.595 m 119.465 100.345 l 118.715 100.345 l 120.215 103.345 l 
121.715 100.345 l 120.965 100.345 l 120.965 96.595 l h
119.465 96.595 m f*
119.465 160.595 m 119.465 164.345 l 118.715 164.345 l 120.215 167.345 l
 121.715 164.345 l 120.965 164.345 l 120.965 160.595 l h
119.465 160.595 m f*
55.465 160.595 m 55.465 164.345 l 54.715 164.345 l 56.215 167.345 l 57.715
 164.345 l 56.965 164.345 l 56.965 160.595 l h
55.465 160.595 m f*
0.501961 0 0.501961 rg
20.809 132.751 m 24.559 132.751 l 24.559 133.501 l 27.559 132.001 l 24.559
 130.501 l 24.559 131.251 l 20.809 131.251 l h
20.809 132.751 m f*
148.809 132.751 m 152.559 132.751 l 152.559 133.501 l 155.559 132.001 l
 152.559 130.501 l 152.559 131.251 l 148.809 131.251 l h
148.809 132.751 m f*
84.809 132.751 m 88.559 132.751 l 88.559 133.501 l 91.559 132.001 l 88.559
 130.501 l 88.559 131.251 l 84.809 131.251 l h
84.809 132.751 m f*
84.809 196.751 m 88.559 196.751 l 88.559 197.501 l 91.559 196.001 l 88.559
 194.501 l 88.559 195.251 l 84.809 195.251 l h
84.809 196.751 m f*
84.809 68.751 m 88.559 68.751 l 88.559 69.501 l 91.559 68.001 l 88.559 
66.501 l 88.559 67.251 l 84.809 67.251 l h
84.809 68.751 m f*
0 0.501961 0.501961 rg
BT
10 0 0 10 48.178809 202.505484 Tm
/f-0-0 1 Tf
(p)Tj
6.5 0 0 6.5 53.178809 200.505484 Tm
(i,j+1)Tj
10 0 0 10 110.615613 202.505484 Tm
(p)Tj
6.5 0 0 6.5 115.615613 200.505484 Tm
(i+1,j+1)Tj
10 0 0 10 107.997546 138.55812 Tm
(p)Tj
6.5 0 0 6.5 112.997546 136.55812 Tm
(i+1,j)Tj
10 0 0 10 43.197498 138.55812 Tm
(p)Tj
6.5 0 0 6.5 48.197498 136.55812 Tm
(i,j)Tj
10 0 0 10 106.755273 75.114273 Tm
(p)Tj
6.5 0 0 6.5 111.755273 73.114273 Tm
(i+1,j-1)Tj
10 0 0 10 49.018018 75.114273 Tm
(p)Tj
6.5 0 0 6.5 54.018018 73.114273 Tm
(i,j-1)Tj
ET
0.501961 0 0.501961 rg
BT
10 0 0 10 57.277661 124.000003 Tm
/f-0-0 1 Tf
(u)Tj
6.5 0 0 6.5 62.277661 122.000003 Tm
(w)Tj
10 0 0 10 91.519434 169.468142 Tm
(u)Tj
6.5 0 0 6.5 96.519434 167.468142 Tm
(n)Tj
10 0 0 10 91.519434 106.329629 Tm
(u)Tj
6.5 0 0 6.5 96.519434 104.329629 Tm
(s)Tj
10 0 0 10 89.919434 71.97355 Tm
(u)Tj
6.5 0 0 6.5 94.919434 69.97355 Tm
(i,j-1)Tj
10 0 0 10 89.919434 199.437399 Tm
(u)Tj
6.5 0 0 6.5 94.919434 197.437399 Tm
(i,j+1)Tj
10 0 0 10 154.359045 124.000003 Tm
(u)Tj
6.5 0 0 6.5 159.359045 122.000003 Tm
(i+1,j)Tj
10 0 0 10 27.873322 124.000003 Tm
(u)Tj
6.5 0 0 6.5 32.873322 122.000003 Tm
(i-1,j)Tj
ET
0.501961 0 0 rg
BT
10 0 0 10 62.431812 134.865615 Tm
/f-0-0 1 Tf
(F)Tj
6.5 0 0 6.5 68.545093 132.865615 Tm
(w)Tj
ET
0.501961 0.501961 0 rg
BT
10 0 0 10 44.820496 170.95386 Tm
/f-0-0 1 Tf
(v)Tj
6.5 0 0 6.5 49.254089 168.95386 Tm
(i,j)Tj
ET
0.501961 0 0.501961 rg
BT
10 0 0 10 126.112878 124.000003 Tm
/f-0-0 1 Tf
(u)Tj
6.5 0 0 6.5 131.112878 122.000003 Tm
(e)Tj
ET
0.501961 0.501961 0 rg
BT
10 0 0 10 109.145825 170.95386 Tm
/f-0-0 1 Tf
(v)Tj
6.5 0 0 6.5 113.579419 168.95386 Tm
(i+1,j)Tj
10 0 0 10 39.123792 93.81094 Tm
(v)Tj
6.5 0 0 6.5 43.557385 91.81094 Tm
(i,j-1)Tj
10 0 0 10 122.438147 93.81094 Tm
(v)Tj
6.5 0 0 6.5 126.871741 91.81094 Tm
(i+1,j-1)Tj
ET
0 g
BT
10 0 0 10 0.0927734 194.953854 Tm
/f-0-0 1 Tf
(cy)Tj
6.5 0 0 6.5 8.959961 192.953854 Tm
(j+1)Tj
10 0 0 10 0.0927734 130.953848 Tm
(cy)Tj
6.5 0 0 6.5 8.959961 128.953848 Tm
(j)Tj
10 0 0 10 0.0927734 66.953848 Tm
(cy)Tj
6.5 0 0 6.5 8.959961 64.953848 Tm
(j-1)Tj
10 0 0 10 49.435498 26.953848 Tm
(cx)Tj
6.5 0 0 6.5 58.302686 24.953848 Tm
(i)Tj
10 0 0 10 111.738794 26.953848 Tm
(cx)Tj
6.5 0 0 6.5 120.605981 24.953848 Tm
(i+1)Tj
10 0 0 10 83.195959 26.953848 Tm
(sx)Tj
6.5 0 0 6.5 91.516272 24.953848 Tm
(i)Tj
10 0 0 10 145.43551 26.953848 Tm
(sx)Tj
6.5 0 0 6.5 153.755823 24.953848 Tm
(i+1)Tj
10 0 0 10 17.43551 26.953848 Tm
(sx)Tj
6.5 0 0 6.5 25.755823 24.953848 Tm
(i-1)Tj
10 0 0 10 0.0927734 98.953848 Tm
(sy)Tj
6.5 0 0 6.5 8.413086 96.953848 Tm
(j-1)Tj
0 10 -10 0 185.826135 127.733633 Tm
/f-1-1 1 Tf
<01>Tj
/f-0-0 1 Tf
(y)Tj
10 0 0 10 114.078674 9.934097 Tm
/f-1-1 1 Tf
<01>Tj
/f-0-0 1 Tf
(x)Tj
6.5 0 0 6.5 124.938049 13.934097 Tm
(+)Tj
10 0 0 10 49.627783 9.934097 Tm
/f-1-1 1 Tf
<01>Tj
/f-0-0 1 Tf
(x)Tj
6.5 0 0 6.5 60.487158 13.934097 Tm
(-)Tj
ET
0.39598 w
0 j
3.9 M q 1 0 0 -1 0 228.199997 cm
24.855 223.398 m 87.574 223.398 l S Q
28.812 4.802 m 30.398 6.384 l 24.855 4.802 l 30.398 3.216 l h
28.812 4.802 m f*
4 M q 1 0 0 -1 0 228.199997 cm
28.812 223.398 m 30.398 221.816 l 24.855 223.398 l 30.398 224.984 l h
28.812 223.398 m S Q
83.613 4.802 m 82.031 3.216 l 87.574 4.802 l 82.031 6.384 l h
83.613 4.802 m f*
q -1 0 0 1 0 228.199997 cm
-83.613 -223.398 m -82.031 -224.984 l -87.574 -223.398 l -82.031 -221.816
 l h
-83.613 -223.398 m S Q
3.9 M q 1 0 0 -1 0 228.199997 cm
88.855 223.398 m 151.574 223.398 l S Q
92.812 4.802 m 94.398 6.384 l 88.855 4.802 l 94.398 3.216 l h
92.812 4.802 m f*
4 M q 1 0 0 -1 0 228.199997 cm
92.812 223.398 m 94.398 221.816 l 88.855 223.398 l 94.398 224.984 l h
92.812 223.398 m S Q
147.613 4.802 m 146.031 3.216 l 151.574 4.802 l 146.031 6.384 l h
147.613 4.802 m f*
q -1 0 0 1 0 228.199997 cm
-147.613 -223.398 m -146.031 -224.984 l -151.574 -223.398 l -146.031 -221.816
 l h
-147.613 -223.398 m S Q
3.9 M q 1 0 0 -1 0 228.199997 cm
190.727 64.84 m 190.727 127.559 l S Q
190.727 159.399 m 192.312 157.817 l 190.727 163.36 l 189.145 157.817 l 
h
190.727 159.399 m f*
4 M q 0 -1 -1 0 0 228.199997 cm
68.801 -190.727 m 70.383 -192.312 l 64.84 -190.727 l 70.383 -189.145 l 
h
68.801 -190.727 m S Q
190.727 104.598 m 189.145 106.184 l 190.727 100.641 l 192.312 106.184 l
 h
190.727 104.598 m f*
q 0 1 1 0 0 228.199997 cm
-123.602 190.727 m -122.016 189.145 l -127.559 190.727 l -122.016 192.312
 l h
-123.602 190.727 m S Q
0.3307 w
3.9 M q 1 0 0 -1 0 228.199997 cm
24.215 228.199 m 24.215 203.594 l S Q
q 1 0 0 -1 0 228.199997 cm
88.215 228.199 m 88.215 203.594 l S Q
q 1 0 0 -1 0 228.199997 cm
152.215 228.199 m 152.215 203.594 l S Q
0.4 w
q 1 0 0 -1 0 228.199997 cm
160.215 64.199 m 196.215 64.199 l S Q
q 1 0 0 -1 0 228.199997 cm
160.215 128.199 m 196.215 128.199 l S Q
0 0.501961 0.501961 rg
57.934 196.001 m 57.934 195.052 57.164 194.278 56.215 194.278 c 55.266 
194.278 54.492 195.052 54.492 196.001 c 54.492 196.95 55.266 197.72 56.215
 197.72 c 57.164 197.72 57.934 196.95 57.934 196.001 c h
57.934 196.001 m f
121.934 196.001 m 121.934 195.052 121.164 194.278 120.215 194.278 c 119.266
 194.278 118.492 195.052 118.492 196.001 c 118.492 196.95 119.266 197.72
 120.215 197.72 c 121.164 197.72 121.934 196.95 121.934 196.001 c h
121.934 196.001 m f
121.934 132.001 m 121.934 131.052 121.164 130.278 120.215 130.278 c 119.266
 130.278 118.492 131.052 118.492 132.001 c 118.492 132.95 119.266 133.72
 120.215 133.72 c 121.164 133.72 121.934 132.95 121.934 132.001 c h
121.934 132.001 m f
57.934 132.001 m 57.934 131.052 57.164 130.278 56.215 130.278 c 55.266 
130.278 54.492 131.052 54.492 132.001 c 54.492 132.95 55.266 133.72 56.215
 133.72 c 57.164 133.72 57.934 132.95 57.934 132.001 c h
57.934 132.001 m f
57.934 68.001 m 57.934 67.052 57.164 66.278 56.215 66.278 c 55.266 66.278
 54.492 67.052 54.492 68.001 c 54.492 68.95 55.266 69.72 56.215 69.72 c 
57.164 69.72 57.934 68.95 57.934 68.001 c h
57.934 68.001 m f
121.934 68.001 m 121.934 67.052 121.164 66.278 120.215 66.278 c 119.266
 66.278 118.492 67.052 118.492 68.001 c 118.492 68.95 119.266 69.72 120.215
 69.72 c 121.164 69.72 121.934 68.95 121.934 68.001 c h
121.934 68.001 m f
0.501961 0 0 rg
BT
10 0 0 10 129.842847 134.865615 Tm
/f-0-0 1 Tf
(F)Tj
6.5 0 0 6.5 135.956128 132.865615 Tm
(e)Tj
10 0 0 10 76.418665 170.390884 Tm
(F)Tj
6.5 0 0 6.5 82.531946 168.390884 Tm
(n)Tj
10 0 0 10 76.418665 106.777652 Tm
(F)Tj
6.5 0 0 6.5 82.531946 104.777652 Tm
(s)Tj
ET
0 g
BT
10 0 0 10 0.0927734 162.953848 Tm
/f-0-0 1 Tf
(sy)Tj
6.5 0 0 6.5 8.413086 160.953848 Tm
(j)Tj
ET
0.501961 0 0 rg
0.550305 w
1 j
4 M q 1 0 0 -1 0 228.199997 cm
87.188 66.191 m 87.188 60.691 l 85.535 60.691 l 88.289 55.188 l 91.039 
60.691 l 89.391 60.691 l 89.391 66.191 l h
87.188 66.191 m S Q
q 1 0 0 -1 0 228.199997 cm
87.188 131.316 m 87.188 125.812 l 85.535 125.812 l 88.289 120.309 l 91.039
 125.812 l 89.391 125.812 l 89.391 131.316 l h
87.188 131.316 m S Q
Q Q
showpage
end restore


%%EndDocument
LoutEPSFCleanUp

[ /Dest /LOUTFEMDiag /DEST pdfmark
180 fnt2 1542 8279(Figur)m 3(e)k 2088(1.)s 180 fnt1
2306 8280(Diagram)m 2977(of)s 3180(the)s 3441(control)s 3991(v)s 3(olume)k
4569(and)s 4872(its)s 5080(surroundings.)s 6096(Note)s 6486(that)s
180 fnt3 6800 8281(F)m 126 fnt3 6891 8235(k)m 180 fnt4
7011 8275(=)m 180 fnt3 7170 8281(u)m 126 fnt3 7256 8235(k)m
180 fnt4 7322 8275(D)m 180 fnt3 7441 8281(k)m 220 fnt1
0 7659(the)m 319(same)s 820(e)s 3(xpressions)k 1886(used)s
2342(before.)s 
[ /Dest /LOUTDiffNotApprox /DEST pdfmark
286 fnt4 1476 6950(\362)m 154 fnt4 1558 6881(W)m
220 fnt4 1683 7010(\321)m 1898(\327)s 2002(\321)s 220 fnt3
2162 7017(u)m 220 fnt4 2344 7010(=)m 286 fnt4 2539 6950(\362)m
154 fnt4 2621 6881(\266)m 2700(W)s 220 fnt4 2825 7010(\321)m
220 fnt3 2985 7017(u)m 220 fnt4 3156 7010(\327)m 220 fnt2
3260 7015(n)m 220 fnt4 3456 7010(=)m 3651(D)s 220 fnt3
3796 7017(x)m gsave
0 7071 translate
1.0000 1.9859 scale
330 fnt4 3904 -82(\()m 
grestore
220 fnt4 4036 7139(\266)m
220 fnt3 4148 7146(u)m 217 0 0 0 220 264 11 4036 7091 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 4041 6882(\266)m 220 fnt3
4153 6889(y)m gsave
0 7071 translate
1.0000 1.9859 scale
330 fnt4 4286 -82(\))m 
grestore
154 fnt3 4377 6750(n)m
220 fnt4 4516 7010(+)m 4700(D)s 220 fnt3 4845 7017(y)m
gsave
0 7071 translate
1.0000 1.9859 scale
330 fnt4 4950 -82(\()m 
grestore
220 fnt4 5082 7139(\266)m 220 fnt3
5194 7146(u)m 217 0 0 0 220 264 11 5082 7091 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 5086 6882(\266)m 220 fnt3 5198 6889(x)m
gsave
0 7071 translate
1.0000 1.9859 scale
330 fnt4 5332 -82(\))m 
grestore
154 fnt3 5423 6750(e)m 220 fnt4
5553 7010(-)m 5736(D)s 220 fnt3 5881 7017(x)m gsave
0 7071 translate
1.0000 1.9859 scale
330 fnt4
5989 -82(\()m 
grestore
220 fnt4 6121 7139(\266)m 220 fnt3 6233 7146(u)m
217 0 0 0 220 264 11 6121 7091 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 6126 6882(\266)m 220 fnt3 6238 6889(y)m gsave
0 7071 translate
1.0000 1.9859 scale
330 fnt4
6371 -82(\))m 
grestore
154 fnt3 6462 6750(s)m 220 fnt4 6584 7010(-)m
6767(D)s 220 fnt3 6912 7017(y)m gsave
0 7071 translate
1.0000 1.9859 scale
330 fnt4 7017 -82(\()m

grestore
220 fnt4 7149 7139(\266)m 220 fnt3 7261 7146(u)m 217 0 0 0 220 264 11 7149 7091 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4
7153 6882(\266)m 220 fnt3 7265 6889(x)m gsave
0 7071 translate
1.0000 1.9859 scale
330 fnt4 7399 -82(\))m

grestore
154 fnt3 7490 6750(w)m 220 fnt1 8545 7016(\(3.10\))m 0 6334(By)m
341(using)s 901(\207rst)s 1332(order)s 1886(approximations)s 3333(as)s
3596(in)s 3854(e)s 3(xpression)k 4877(3.11)s 5329(for)s
5675(the)s 6029(east)s 220 fnt3 6460 6335(e)m 220 fnt1
6640 6334(f)m 2(ace,)k 7135(a)s 7323(ready-to-implement)s 0 6070(e)m 3(xpression)k
987(can)s 1343(be)s 1601(deduced.)s 
[ /Dest /LOUTDiffApprox /DEST pdfmark
gsave
0 5482 translate
1.0000 1.9859 scale
330 fnt4 3737 -82(\()m

grestore
220 fnt4 3869 5550(\266)m 220 fnt3 3981 5557(u)m 217 0 0 0 220 264 11 3869 5502 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4
3873 5293(\266)m 220 fnt3 3985 5300(x)m gsave
0 5482 translate
1.0000 1.9859 scale
330 fnt4 4119 -82(\))m

grestore
154 fnt3 4210 5161(e)m 220 fnt4 4285 5421(\273)m 220 fnt3
4412 5603(u)m 154 fnt3 4517 5552(i)m 154 fnt4 4577 5547(+)m
4680(1)s 4748(,)s 154 fnt3 4796 5552(j)m 220 fnt4
4904 5596(-)m 220 fnt3 5087 5603(u)m 154 fnt3 5192 5552(i)m
154 fnt4 5239 5547(,)m 154 fnt3 5287 5552(j)m gsave
4412 5476 translate
220 fnt3
917 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt3 4432 5274(sx)m 154 fnt3 4614 5223(i)m 154 fnt4
4674 5218(+)m 4777(1)s 220 fnt4 4904 5267(-)m 220 fnt3
5087 5274(sx)m 154 fnt3 5269 5223(i)m 220 fnt1 8545 5427(\(3.11\))m
0 4746(The)m 391(e)s 3(xpressions)k 1456(abo)s 3(v)k 3(e)k
2023(compute)s 2829(the)s 3146(solution)s 3905(for)s 4214(a)s
4365(single)s 4938(cell)s 5304(or)s 5540(element.)s 6328(By)s
6632(mo)s 3(ving)k 7349(the)s 7666(element)s 8414(o)s 3(v)k 3(er)k
8851(all)s 0 4482(the)m 322(points)s 908(that)s 1295(constitute)s
2202(the)s 2524(domain,)s 3284(the)s 3606(entire)s 4159(map)s
4590(of)s 4842(magnitudes)s 5903(will)s 6298(be)s 6559(solv)s 3(ed.)k
7227(The)s 7622(follo)s 5(wing)k 8523(step)s 8929(is)s
0 4218(to)m 220(inte)s 3(grate)k 1035(o)s 3(v)k 3(er)k
1474(time.)s 220 fnt2 0 3491(4.)m 267(Pr)s 3(essur)k 3(e\211v)k 2(elocity)k
1953(coupling)s 2810(and)s 3215(time)s 3681(integration)s 
[ /Dest /LOUTcoupling /DEST pdfmark
220 fnt1
440 3054(According)m 1411(to)s 1626(the)s 1941(decomoposition)s 3391(theorem)s
4160(of)s 4405(Ladyzhenskaya,)s 5862(a)s 6009(v)s 3(ector)k
6605(\207eld)s 220 fnt2 7044 3053(w)m 220 fnt1 7249 3054(de\207ned)m
7945(in)s 8163(a)s 8310(bounded)s 0 2790(domain)m 220 fnt4
705 2784(W)m 220 fnt1 914 2790(with)m 1350(smooth)s 2043(boundary)s
220 fnt4 2916 2784(\266)m 3028(W)s 220 fnt1 3237 2790(satis\207es)m
3969(equation)s 4770(4.1,)s 5137(in)s 5353(which)s 5935(it)s
6105(is)s 6290(also)s 6685(satis\207ed)s 7450(that)s 220 fnt4
7827 2784(\321)m 8042(\327)s 220 fnt2 8146 2789(a)m 220 fnt4
8331 2784(=)m 8526(0)s 220 fnt1 8678 2790(with)m 220 fnt2
0 2525(a)m 220 fnt4 185 2520(\316)m 373(W)s 220 fnt1
589 2526(and)m 220 fnt2 960 2525(a)m 220 fnt4 1134 2520(\327)m
220 fnt2 1238 2525(n)m 220 fnt4 1434 2520(=)m 1629(0)s
220 fnt1 1788 2526(with)m 220 fnt2 2231 2525(a)m 220 fnt4
2416 2520(\316)m 2604(\266)s 2716(W)s 220 fnt1 2877 2526(.)m

[ /Dest /LOUTladyzhenskaya /DEST pdfmark
220 fnt2 3996 2100(w)m 220 fnt4 4228 2095(=)m 220 fnt2
4423 2100(a)m 220 fnt4 4597 2095(+)m 4781(\321)s 4941(j)s
220 fnt1 8655 2101(\(4.1\))m 0 1623(Consequently)m 14(,)k 1316(by)s
1612(subtracting)s 2662(the)s 3007(gradient)s 3807(of)s 4082(a)s
4260(suitable)s 5019(scalar)s 5610(\207eld)s 220 fnt3 6080 1624(p)m
220 fnt1 6265 1623(to)m 6511(a)s 6689(discrete)s 7447(v)s 3(elocity)k
8227(\207eld)s 154 fnt3 8815 1715(p)m 220 fnt2 8697 1622(u)m
220 fnt1 8969 1623(a)m 0 1359(di)m 5(v)k 3(er)k 3(gence-free)k
1415(v)s 3(ector)k 2015(\207eld)s 220 fnt2 2459 1358(u)m
220 fnt1 2632 1359(is)m 2824(obtained)s 3634(\(see)s 4037(e)s 3(xpression)k
5024(4.2\).)s 
[ /Dest /LOUTvelTransf /DEST pdfmark
220 fnt2 3986 859(u)m 220 fnt4 4181 854(=)m
154 fnt3 4494 980(p)m 220 fnt2 4376 859(u)m 220 fnt4
4633 854(-)m 4816(\321)s 220 fnt3 4976 861(p)m 220 fnt1
8655 860(\(4.2\))m 0 403(Because)m 220 fnt2 780 402(u)m 220 fnt1
953 403(is)m 1145(a)s 1297(di)s 5(v)k 3(er)k 3(gence-free)k
2712(v)s 3(ector)k 3312(\207eld,)s 3800(the)s 4119(e)s 3(xpression)k
5106(4.3)s 5421(has)s 5759(to)s 5979(be)s 6237(satis\207ed.)s

grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
1 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 6 7
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Italic
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5780 -1566(-)m 5898(6)s 6056(-)s 9066 13429 0 13327 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore

[ /Dest /LOUTvelTransfDiv1 /DEST pdfmark
220 fnt4 4037 13272(\321)m
4252(\327)s 220 fnt2 4356 13277(u)m 220 fnt4 4562 13272(=)m
4757(0)s 220 fnt1 8655 13278(\(4.3\))m 0 12826(e)m 3(xpression)k
987(4.3)s 1302(otherwise)s 2205(written)s 2878(as)s 3106(in)s
3329(4.4)s 
[ /Dest /LOUTvelTransfDiv2 /DEST pdfmark
220 fnt4 2983 12321(\321)m 3198(\327)s 154 fnt3
3420 12447(p)m 220 fnt2 3302 12326(u)m 220 fnt4 3559 12321(-)m
3742(\321)s 3957(\327)s 4061(\()s 4138(\321)s 220 fnt3
4298 12328(p)m 220 fnt4 4413 12321(\))m 4562(=)s 4757(0)s
220 fnt1 8655 12327(\(4.4\))m 0 11865(which)m 589(can)s 945(be)s
1203(simpli\207ed)s 2135(to)s 2355(e)s 3(xpression)k 3342(4.5)s

[ /Dest /LOUTvelTransfDiv3 /DEST pdfmark
220 fnt4 3964 11349(\321)m 4179(\327)s 154 fnt3 4401 11475(p)m
220 fnt2 4283 11354(u)m 220 fnt4 4562 11349(=)m 154 fnt4
4906 11448(2)m 220 fnt4 4757 11349(\321)m 220 fnt3 4991 11356(p)m
220 fnt1 8655 11355(\(4.5\))m 0 10849(where)m 154 fnt4 735 10942(2)m
220 fnt4 586 10843(\321)m 220 fnt1 864 10849(is)m 1056(the)s
1375(Laplace)s 2119(operator)s 8(,)k 2940(sometimes)s 3924(seen)s
4365(as)s gsave
4593 10832 translate
220 fnt3 132 132 66 66 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto
xsize 2 div ysize lineto closepath
0.04 ft setlinewidth stroke
grestore

grestore
4725(,)s 4823(which)s 5412(should)s
6052(not)s 6388(be)s 6646(confused)s 7492(with)s 220 fnt4
7935 10843(D)m 220 fnt1 8069 10849(.)m 440 10506(In)m 672(order)s
1187(to)s 1403(compute)s 2207(the)s 2522(solution,)s 3325(in)s
3544(section)s 4214(3)s 4360(it)s 4534(w)s 2(as)k
4915(sho)s 5(wn)k 5531(that)s 5912(the)s 6227(domain)s
6935(needed)s 7606(to)s 7823(be)s 8077(discretized.)s 0 10242(On)m
352(a)s 537(discrete)s 1301(grid,)s 1786(instead)s 2494(of)s
2775(using)s 3333(the)s 3685(operators)s 4579(abo)s 3(v)k 3(e,)k
5228(such)s 5716(as)s 5976(the)s 6328(Laplace)s 7105(operator)s
gsave
7923 10225 translate
220 fnt3 132 132 66 66 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto
xsize 2 div ysize lineto closepath
0.04 ft setlinewidth stroke
grestore

grestore
8055(,)s 8186(meant)s 8810(for)s 0 9978(continuous)m
1007(domains,)s 1845(one)s 2210(may)s 2634(use)s 2973(their)s
3427(analogs)s 4139(for)s 4447(discretized)s 5446(domains,)s 6284(in)s
6504(this)s 6863(case,)s 7334(the)s 7649(discrete)s 8377(Laplace)s
0 9714(operator)m 220 fnt3 806 9715(L)m 220 fnt1 928 9714(.)m
1043(As)s 1353(an)s 1632(e)s 3(xample,)k 2491(e)s 3(xpression)k
3498(4.5\212also)s 4415(kno)s 5(wn)k 5081(as)s 5329(the)s
5669(Poisson)s 6424(equation\212is)s 7612(written)s 8306(as)s 8554(in)s
8798(4.6)s 0 9450(when)m 527(the)s 846(continuous)s 1856(domain)s
2567(operators)s 3429(are)s 3747(replaced)s 4543(by)s 4813(their)s
5270(discrete)s 6002(homologues.)s 
[ /Dest /LOUTvelTransfDiv3Mat /DEST pdfmark
220 fnt3 4081 8952(M)m 154 fnt3
4401 9071(p)m 220 fnt2 4283 8950(u)m 220 fnt4 4562 8945(=)m
220 fnt3 4757 8952(L)m 4890(p)s 220 fnt1 8655 8951(\(4.6\))m
0 8494(where)m 220 fnt3 593 8495(M)m 220 fnt1 846 8494(is)m
1046(the)s 1372(di)s 5(v)k 3(er)k 3(gence)k
2381(and)s 220 fnt3 2760 8495(L)m 220 fnt1 2882 8494(,)m
2987(the)s 3314(Laplace)s 4065(operator)s 12(.)k 4886(Note)s
5371(that)s 220 fnt3 5762 8495(L)m 220 fnt4 5961 8488(=)m
220 fnt3 6156 8495(MG)m 220 fnt1 6497 8494(,)m 6603(where)s
220 fnt3 7196 8495(G)m 220 fnt1 7416 8494(is)m 7616(the)s
7942(gradient.)s 1.0 0.0 0.0 LoutSetRGBColor 8764(F)s 3(or)k 0 8230(no)m 5(w)k
422(on,)s 220 fnt3 740 8231(p)m 220 fnt1 899 8230(will)m
1291(be)s 1549(assumed)s 2358(constant)s 3144(for)s 3455(each)s
3909(CV)s 28(,)k 4283(though)s 220 fnt3 4947 8231(p)m
220 fnt1 5106 8230(is)m 5298(not)s 5634(the)s 5953(same)s
6454(v)s 5(alue)k 6975(o)s 3(v)k 3(er)k
7414(the)s 7733(whole)s 8320(domain.)s gsave
9019 7852 translate
176 fnt1 0.0 0.0 0.0 LoutSetRGBColor
1416 507 0 427 176 193 44 LoutGraphic
gsave
1 LoutMargShift gsave
grestore
1.0 0.0 0.0 LoutSetRGBColor 283 388(REV)m 22(.:)k 733(Is)s 896(it)s
283 195(true?)m grestore
grestore
0.0 0.0 0.0 LoutSetRGBColor 440 7887(F)m 3(or)k 799(each)s
1256(CV)s 28(,)k 1633(e)s 3(xpression)k 2622(4.6)s
2948(must)s 3433(be)s 3693(satis\207ed.)s 4509(Note)s 4989(that)s
5375(the)s 5697(left)s 6047(hand)s 6530(side)s 6937(\(LHS\))s
7545(of)s 7796(the)s 8118(equation)s 8929(is)s 0 7623(computed)m
921(as)s 1151(in)s 1376(e)s 3(xpression)k 2365(4.7)s
2685(for)s 2998(a)s 3152(single)s 3729(CV)s 28(.)k
4102(Equation)s 4948(4.8)s 5268(also)s 5672(has)s 6012(to)s
6233(be)s 6493(satis\207ed)s 7267(when)s 7796(accounting)s 8810(for)s
0 7359(all)m 270(the)s 589(CVs.)s 
[ /Dest /LOUTRHSCond1 /DEST pdfmark
220 fnt4 3899 6891([)m
220 fnt3 3976 6898(M)m 154 fnt3 4296 7017(p)m 220 fnt2
4178 6896(u)m 220 fnt4 4380 6891(])m 154 fnt3 4434 6819(i)m
220 fnt4 4562 6891(=)m 286 fnt4 4757 6831(\362)m 154 fnt4
4839 6762(W)m 107 fnt3 4953 6731(i)m 220 fnt4 4992 6891(\321)m
5207(\327)s 154 fnt3 5429 7017(p)m 220 fnt2 5311 6896(u)m
220 fnt3 5513 6898(dS)m 220 fnt1 8655 6897(\(4.7\))m 
[ /Dest /LOUTRHSCond2 /DEST pdfmark
220 fnt4
3735 6001(\345)m 154 fnt3 3791 5846(i)m 220 fnt4 3899 6001([)m
220 fnt3 3976 6008(M)m 154 fnt3 4296 6127(p)m 220 fnt2
4178 6006(u)m 220 fnt4 4380 6001(])m 154 fnt3 4434 5929(i)m
220 fnt4 4562 6001(=)m 286 fnt4 4757 5941(\362)m 154 fnt4
4839 5872(W)m 220 fnt4 4964 6001(\321)m 5179(\327)s 154 fnt3
5401 6127(p)m 220 fnt2 5283 6006(u)m 220 fnt3 5485 6008(dS)m
220 fnt4 5783 6001(=)m 5978(0)s 220 fnt1 8655 6007(\(4.8\))m
440 5188(By)m 776(rearranging)s 1866(the)s 2215(Na)s 4(vier)k 4(-Stok)k 2(es)k
3535(equation)s 4373(\(see)s 4806(equation)s 5644(3.4\))s 6067(and)s
6468(applying)s 7316(the)s 7666(decomoposition)s 0 4924(theorem)m 774(of)s
1023(Ladyzhenskaya,)s 2485(the)s 2804(follo)s 5(wing)k 3702(can)s
4058(be)s 4316(obtained:)s 
[ /Dest /LOUTNSCont1 /DEST pdfmark
220 fnt4 2950 4448(\266)m 220 fnt3
3062 4455(u)m 154 fnt3 3167 4404(j)m gsave
2950 4328 translate
220 fnt3 259 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4
2991 4119(\266)m 220 fnt3 3103 4126(t)m 220 fnt4 3275 4273(-)m
3458(n)s 154 fnt4 3722 4372(2)m 220 fnt4 3573 4273(\321)m
220 fnt3 3807 4280(u)m 154 fnt3 3912 4201(j)m 220 fnt4
4020 4273(+)m 4204(\321)s 4419(\327)s 4523(\()s 220 fnt3
4600 4280(u)m 154 fnt3 4705 4201(j)m 220 fnt2 4758 4278(u)m
220 fnt4 4887 4273(\))m 5014(+)s 5209 4372(1)m gsave
5198 4328 translate
220 fnt3
108 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
5198 4119(r)m 5334 4410(\266)m 220 fnt3 5446 4417(p)m 251 0 0 0 220 264 11 5317 4328 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4
5317 4119(\266)m 220 fnt3 5429 4126(x)m 154 fnt3 5526 4075(j)m
220 fnt4 5656 4273(=)m 5851(0)s 220 fnt1 8655 4279(\(4.9\))m

[ /Dest /LOUTNSCont2 /DEST pdfmark
220 fnt4 5131 3358(\321)m 5346(\327)s 220 fnt2 5450 3363(u)m
220 fnt4 5656 3358(=)m 5851(0)s 220 fnt1 8545 3364(\(4.10\))m
0 2912(e)m 3(xpressions)k 1086(4.9)s 1427(and)s 1818(4.10)s
2273(can)s 2649(be)s 2928(re)s 5(written)k 3786(in)s
4029(matrix)s 4673(form)s 5175(for)s 5506(the)s 5846(discretized)s
6869(domain)s 7600(as)s 7848(the)s 8187(system)s 8872(of)s
0 2648(equations)m 887(constituted)s 1904(by)s 2174(4.11)s 2591(and)s
2962(4.12)s 
[ /Dest /LOUTNSDis1 /DEST pdfmark
220 fnt4 3169 2085(W)m 220 fnt3 3341 2187(d)m
3467(u)s 231 0 0 0 220 264 11 3341 2140 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
3361 1938(d)m 3487(t)s 220 fnt4 3638 2085(+)m
220 fnt3 3822 2092(C)m 220 fnt4 3983 2085(\()m 220 fnt3
4060 2092(u)m 220 fnt4 4176 2085(\))m 220 fnt3 4248 2092(u)m
220 fnt4 4419 2085(+)m 220 fnt3 4603 2092(D)m 4768(u)s
220 fnt4 4939 2085(+)m 5123(W)s 220 fnt3 5295 2092(G)m
5464(p)s 220 fnt4 5656 2085(=)m 5851(0)s 220 fnt1
8545 2091(\(4.11\))m 
[ /Dest /LOUTNSDis2 /DEST pdfmark
220 fnt3 5261 1201(M)m 5463(u)s 220 fnt4
5656 1194(=)m 5851(0)s 220 fnt1 8545 1200(\(4.12\))m 0 748(where)m
220 fnt4 639 742(-)m 220 fnt3 822 749(D)m 220 fnt1
1029 748(equals)m 1633(the)s 1950(dif)s 5(fusion)k 2788(and)s
220 fnt4 3212 742(-)m 3395(W)s 220 fnt3 3567 749(G)m
220 fnt1 3778 748(equals)m 4382(the)s 4699(pressure.)s 1.0 0.0 0.0 LoutSetRGBColor
5522(Note)s 5997(that)s 6379(in)s 6600(the)s 6917(last)s
7274(system)s 7936(of)s 8182(equations,)s 220 fnt3 0 485(p)m
220 fnt1 159 484(is)m 351(the)s 671(scalar)s 1236(matrix)s
1861(for)s 2172(the)s 2492(discretized)s 3495(scalar)s 4061(\207eld,)s
4549(not)s 4885(the)s 5205(pressure)s 5986(as)s 6215(it)s
6392(w)s 2(as)k 6777(in)s 7000(the)s 7320(system)s
7984(of)s 8234(equations)s 0 220(for)m 341(a)s 523(continuous)s
1563(domain.)s gsave
2262 -194 translate
176 fnt1 0.0 0.0 0.0 LoutSetRGBColor 1416 542 0 463 176 193 44 LoutGraphic
gsave
1 LoutMargShift gsave
grestore
1.0 0.0 0.0 LoutSetRGBColor 283 424(REV)m 22(.:)k
733(Am)s 1040(I)s 283 231(right?)m grestore
grestore
0.0 0.0 0.0 LoutSetRGBColor 2402(In)s
2668(this)s 3061(project,)s 3798(the)s 4147(inte)s 3(gral)k
4895(of)s 5175(equation)s 6013(4.13)s 6468(\(generalization)s 7865(of)s
8144(4.11\))s 8678(with)s 
grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 7 8
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Symbol
%%+ font Times-Italic
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5782 -1562(-)m 5900(7)s 6054(-)s 9066 13434 0 13334 220 264 55 1417 -15423 LoutGr2
1 LoutMargSet
grestore
0 13285(4.14)m 446(required)s
1244(the)s 1576(use)s 1931(of)s 2193(the)s 2525(Adams-Bashforth)s
4150(method.)s 4916(The)s 5321(pressure)s 6115(gradient)s 6901(term)s
7371(has)s 7722(been)s 8201(computed)s 0 13021(implicitly)m 904(while)s
1442(the)s 1761(time)s 2202(deri)s 5(v)k 5(ati)k 5(v)k 3(e)k
3112(has)s 3450(been)s 3916(e)s 5(v)k 5(aluated)k
4800(by)s 5070(means)s 5676(of)s 5925(the)s 6244(central)s
6891(dif)s 5(ference.)k 
[ /Dest /LOUTNSDisFull1 /DEST pdfmark
220 fnt4 3169 12458(W)m 220 fnt3
3341 12560(d)m 3467(u)s 231 0 0 0 220 264 11 3341 12513 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
3361 12311(d)m 3487(t)s 220 fnt4
3638 12458(+)m 220 fnt3 3822 12465(C)m 220 fnt4 3983 12458(\()m
220 fnt3 4060 12465(u)m 220 fnt4 4176 12458(\))m 220 fnt3
4248 12465(u)m 220 fnt4 4419 12458(+)m 220 fnt3 4603 12465(D)m
4768(u)s 220 fnt4 4939 12458(+)m 5123(W)s 220 fnt3
5295 12465(G)m 5464(p)s 220 fnt4 5656 12458(=)m 5851(W)s
220 fnt3 6023 12465(f)m 220 fnt1 8545 12464(\(4.13\))m 
[ /Dest /LOUTNSDisFull2 /DEST pdfmark
220 fnt3
5261 11574(M)m 5463(u)s 220 fnt4 5656 11567(=)m 5851(0)s
220 fnt1 8545 11573(\(4.14\))m 0 11120(The)m 392(solution)s 1152(is)s
1344(achie)s 5(v)k 3(ed)k 2169(by)s 2439(\207rst)s
2835(rearranging)s 3895(the)s 4214(equation)s 5022(abo)s 3(v)k 3(e,)k
5638(as)s 5866(it)s 6043(can)s 6399(be)s 6657(seen)s
7098(in)s 7321(4.15.)s 
[ /Dest /LOUTNSDisRea /DEST pdfmark
220 fnt3 3823 10659(d)m 3949(u)s
231 0 0 0 220 264 11 3823 10612 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
3843 10410(d)m 3969(t)s 220 fnt4 4142 10557(=)m 220 fnt3
4337 10564(R)m 220 fnt4 4477 10557(\()m 220 fnt3 4554 10564(u)m
220 fnt4 4670 10557(\))m 4797(-)s 220 fnt3 4980 10564(Gp)m
220 fnt1 8545 10563(\(4.15\))m 0 9935(where)m 220 fnt3 586 9936(R)m
220 fnt4 726 9929(\()m 220 fnt3 803 9936(u)m 220 fnt4
919 9929(\))m 220 fnt1 1035 9935(is)m 
[ /Dest /LOUTRfromNS /DEST pdfmark
220 fnt3 3133 9433(R)m
220 fnt4 3273 9426(\()m 220 fnt3 3350 9433(u)m 220 fnt4
3466 9426(\))m 3615(=)s 154 fnt4 4222 9520(-)m 4324(1)s
220 fnt4 3865 9426(-)m 4048(W)s 4396(\()s 220 fnt3
4473 9433(C)m 220 fnt4 4634 9426(\()m 220 fnt3 4711 9433(u)m
220 fnt4 4827 9426(\))m 220 fnt3 4899 9433(u)m 220 fnt4
5070 9426(+)m 220 fnt3 5254 9433(Du)m 220 fnt4 5528 9426(\))m
5655(+)s 220 fnt3 5839 9433(f)m 220 fnt1 8545 9432(\(4.16\))m
0 8971(and)m 371(by)s 641(applying)s 1459(the)s 1778(suppositions)s
2922(abo)s 3(v)k 3(e,)k 3538(it)s 3715(is)s
3907(deduced)s 4692(that)s 
[ /Dest /LOUTNSsolution1 /DEST pdfmark
154 fnt3 3184 8561(n)m 154 fnt4
3277 8556(+)m 3380(1)s 220 fnt3 3079 8499(u)m 220 fnt4
3507 8492(-)m 154 fnt3 3795 8577(n)m 220 fnt3 3690 8499(u)m
789 0 0 0 220 264 11 3079 8453 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4 3369 8244(D)m 220 fnt3 3514 8251(t)m 220 fnt4
3956 8398(=)m 4155 8500(3)m gsave
4151 8453 translate
220 fnt3 105 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4151 8244(2)m 154 fnt3
4396 8512(n)m 220 fnt3 4267 8405(R)m 220 fnt4 4535 8398(-)m
4727 8497(1)m gsave
4718 8453 translate
220 fnt3 105 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4718 8244(2)m 154 fnt3 4963 8496(n)m
154 fnt4 5056 8491(-)m 5158(1)s 220 fnt3 4834 8405(R)m
220 fnt4 5285 8398(-)m 154 fnt3 5730 8499(n)m 154 fnt4
5823 8494(+)m 5926(1)s 220 fnt3 5468 8405(Gp)m 220 fnt1
8545 8404(\(4.17\))m 
[ /Dest /LOUTNSsolution2 /DEST pdfmark
220 fnt3 3304 7473(M)m 154 fnt3 3611 7563(n)m
154 fnt4 3704 7558(+)m 3807(1)s 220 fnt3 3506 7473(u)m
220 fnt4 3956 7466(=)m 4151(0)s 220 fnt1 8545 7472(\(4.18\))m
0 7020(If)m 212(the)s 531(pressure)s 1312(gradient)s 2086(term)s
2543(and)s 2914(the)s 3233(mass)s 3717(conserv)s 5(ation)k
4885(are)s 5203(ignored)s 5928(in)s 6151(4.17,)s 6634(it)s
6811(is)s 7003(safe)s 7406(to)s 7626(say)s 7968(that)s

[ /Dest /LOUTNSupsolution /DEST pdfmark
154 fnt3 3421 6505(p)m 220 fnt3 3316 6386(u)m 220 fnt4
3582 6379(=)m 154 fnt3 3882 6492(n)m 220 fnt3 3777 6386(u)m
220 fnt4 4021 6379(+)m 4205(D)s 220 fnt3 4350 6386(t)m
gsave
0 6440 translate
1.0000 1.9331 scale
330 fnt4 4425 -82(\()m 
grestore
220 fnt4 4561 6514(3)m gsave
4557 6467 translate
220 fnt3
105 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4557 6258(2)m 154 fnt3 4802 6526(n)m 220 fnt3 4673 6419(R)m
220 fnt4 4941 6412(-)m 5133 6511(1)m gsave
5124 6467 translate
220 fnt3 105 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
5124 6258(2)m
154 fnt3 5369 6510(n)m 154 fnt4 5462 6505(-)m 5564(1)s
220 fnt3 5240 6419(R)m gsave
0 6440 translate
1.0000 1.9331 scale
330 fnt4 5658 -82(\))m 
grestore
220 fnt1
8545 6385(\(4.19\))m 0 5736(Note)m 494(that)s 895(the)s 1231(e)s 3(xpression)k
2235(4.19)s 2683(abo)s 3(v)k 3(e)k 3269(is)s
3478(an)s 3754(e)s 3(xplicit)k 4481(de\207nition)s 5392(of)s
154 fnt3 5763 5828(p)m 220 fnt3 5658 5737(u)m 220 fnt1
5836 5736(.)m 5948(Then,)s 154 fnt1 6533 5838(~)m 220 fnt3
6514 5737(p)m 220 fnt1 6690 5736(is)m 6899(computed)s 7836(with)s
8296(the)s 8632(three)s 0 5472(e)m 3(xpressions)k 1066(belo)s 5(w)k 14(.)k

[ /Dest /LOUTNSuppsolution1 /DEST pdfmark
154 fnt3 4066 5062(n)m 154 fnt4 4159 5057(+)m 4262(1)s
220 fnt3 3961 4972(u)m 220 fnt4 4411 4965(=)m 154 fnt3
4711 5091(p)m 220 fnt3 4606 4972(u)m 220 fnt4 4850 4965(-)m
220 fnt3 5033 4972(G)m 154 fnt1 5221 5073(~)m 220 fnt3
5202 4972(p)m 220 fnt1 8545 4971(\(4.20\))m 
[ /Dest /LOUTNSuppsolution2 /DEST pdfmark
220 fnt3 3759 4211(M)m
154 fnt3 4066 4301(n)m 154 fnt4 4159 4296(+)m 4262(1)s
220 fnt3 3961 4211(u)m 220 fnt4 4411 4204(=)m 4606(0)s
220 fnt1 8545 4210(\(4.21\))m 
[ /Dest /LOUTNSuppsolution3 /DEST pdfmark
220 fnt3 3943 3457(M)m 154 fnt3
4250 3576(p)m 220 fnt3 4145 3457(u)m 220 fnt4 4411 3450(=)m
220 fnt3 4606 3457(L)m 154 fnt1 4758 3558(~)m 220 fnt3
4739 3457(p)m 220 fnt1 8545 3456(\(4.22\))m 0 2860(The)m 392(true)s
784(pressure)s 1565(is)s 1757(\207nally)s 2368(e)s 5(v)k 5(aluated)k
3252(with)s 154 fnt3 3799 2923(n)m 154 fnt4 3892 2918(+)m
3995(1)s 220 fnt3 3695 2861(p)m 220 fnt4 4133 2854(=)m
154 fnt1 4399 3099(~)m 220 fnt3 4380 2998(p)m 209 0 0 0 220 264 11 4328 2909 LoutGr2
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt4
4328 2700(D)m 220 fnt3 4473 2707(t)m 220 fnt1 4537 2860(.)m
440 2462(This)m 890(procedure)s 1832(requires)s 2598(a)s 2764(v)s 3(ery)k
3215(speci\207c)s 220 fnt4 3946 2456(D)m 220 fnt3 4091 2463(t)m
220 fnt1 4224 2462(so)m 4482(a)s 4648(solution)s 5422(is)s
5628(found.)s 6250(By)s 6570(using)s 7109(e)s 3(xpression)k
8110(4.23,)s 8607(some)s 0 2198(v)m 5(alues)k 601(can)s
957(be)s 1215(found.)s 
[ /Dest /LOUTdeltat /DEST pdfmark
220 fnt4 3667 1776(D)m 220 fnt3
3812 1783(t)m 220 fnt4 3953 1776(=)m 220 fnt3 4148 1783(f)m
220 fnt1 4252 1782(Min)m 220 fnt4 4626 1776(\()m 4703(D)s
220 fnt3 4848 1783(t)m 154 fnt3 4912 1704(c)m 154 fnt4
4985 1699(,)m 220 fnt4 5037 1776(D)m 220 fnt3 5182 1783(t)m
154 fnt3 5246 1704(d)m 220 fnt4 5338 1776(\))m 220 fnt1
8545 1782(\(4.23\))m 0 1262(where)m 220 fnt3 586 1263(f)m 220 fnt1
734 1262(is)m 926(a)s 1078(v)s 5(alue)k 1599(between)s
2381(0.2)s 2706(and)s 3077(0.5,)s 3450(and)s 220 fnt4
3821 1256(D)m 220 fnt3 3966 1263(t)m 154 fnt3 4030 1207(d)m
220 fnt1 4166 1262(and)m 220 fnt4 4537 1256(D)m 220 fnt3
4682 1263(t)m 154 fnt3 4746 1212(c)m 220 fnt1 4867 1262(are)m
5185(gi)s 5(v)k 3(en)k 5717(by)s 5987(4.24)s
6421(and)s 6792(4.25,)s 7275(respecti)s 5(v)k 3(ely)k 14(.)k

[ /Dest /LOUTdeltatd /DEST pdfmark
220 fnt4 3776 589(D)m 220 fnt3 3921 596(t)m 154 fnt3
3985 517(d)m 220 fnt4 4143 589(\243)m 4344 688(1)m gsave
4335 644 translate
220 fnt3
105 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4335 435(2)m 220 fnt1 4451 595(Min)m gsave
0 651 translate
1.0000 2.0915 scale
330 fnt4 4825 -82(\()m

grestore
154 fnt4 5091 792(2)m 220 fnt4 4957 699(D)m gsave
4957 655 translate
220 fnt3
208 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
5009 446(n)m gsave
0 651 translate
1.0000 2.0915 scale
330 fnt4 5198 -82(\))m 
grestore
220 fnt1 8545 595(\(4.24\))m

grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
1 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 8 9
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Symbol
%%+ font Times-Italic
%%+ font Times-Bold
%%+ font Courier
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
%%IncludeResource: font Courier
/Courierfnt5 vec2 /Courier LoutRecode
/fnt5 { /Courierfnt5 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5783 -1565(-)m 5901(8)s 6054(-)s 9066 13430 0 13157 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore

[ /Dest /LOUTdeltatc /DEST pdfmark
220 fnt4 3801 13102(D)m
220 fnt3 3946 13109(t)m 154 fnt3 4010 13030(C)m 220 fnt4
4192 13102(\243)m 4393 13201(1)m gsave
4384 13157 translate
220 fnt3 105 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
4384 12948(2)m 220 fnt1
4500 13108(Min)m gsave
0 13163 translate
1.0000 1.9261 scale
330 fnt4 4874 -82(\()m 
grestore
220 fnt4 5006 13235(D)m
gsave
5006 13191 translate
220 fnt3 134 0 0 0 220 264 11 LoutGraphic
gsave
0 0 moveto xsize 0 lineto 0.05 ft setlinewidth stroke
grestore

grestore
220 fnt3 5020 12989(u)m gsave
0 13163 translate
1.0000 1.9261 scale
330 fnt4 5173 -82(\))m

grestore
220 fnt1 8545 13108(\(4.25\))m 0 12470(The)m 394(v)s 5(alues)k
998(of)s 220 fnt4 1250 12464(D)m 220 fnt1 1441 12470(and)m
220 fnt3 1815 12471(u)m 220 fnt1 1978 12470(can)m 2337(be)s
2597(found)s 3167(according)s 4084(to)s 4307(\207gure)s 4872(2.)s
1.0 0.0 0.0 LoutSetRGBColor 5190(Notice)s 5828(that)s 6214(in)s 6440(\207gure)s
7006(2)s 7169(the)s 7490(mesh)s 8009(is)s 8204(square,)s
8877(so)s 0 12206(the)m 319(e)s 3(xpressions)k 1385(abo)s 3(v)k 3(e)k
1954(are)s 2272(only)s 2713(v)s 5(alid)k 3201(in)s
3424(square)s 4047(or)s 4285(quasi-square)s 5444(meshes.)s gsave
6129 11056 translate
176 fnt1
0.0 0.0 0.0 LoutSetRGBColor 1416 1279 0 1199 176 193 44 LoutGraphic
gsave
1 LoutMargShift gsave
grestore
1.0 0.0 0.0 LoutSetRGBColor 283 1160(REV)m 22(.:)k 733(Is)s
896(it)s 283 967(true?)m 672(Are)s 283 774(the)m 2(y)k
623(v)s 4(alid)k 283 581(for)m 531(non)s 837(re)s 2(g-)k
283 388(ular)m 599(mesh-)s 283 195(es?)m grestore
grestore
220 fnt2 0.0 0.0 0.0 LoutSetRGBColor
0 11479(5.)m 267(Comments)s 1327(on)s 1611(the)s 1955(code)s

[ /Dest /LOUT26_694_contents_codecomments_1 /DEST pdfmark
220 fnt1 440 11083(The)m 835(language)s 1681(chosen)s 2346(to)s
2569(write)s 3074(the)s 3396(solv)s 3(er)k 3988(prototype)s
4884(is)s 5079(Python,)s 5804(as)s 6035(it)s 6216(is)s
6411(straightforw)s 2(ard)k 7819(for)s 8133(an)s 8396(a)s 4(v)k 3(erage)k
0 10819(programmer)m 1170(and)s 1572(comes)s 2209(with)s 2682(solid)s
3194(libraries)s 3989(to)s 4240(perform)s 5032(most)s 5545(of)s
5825(the)s 6175(math)s 6697(operations)s 7688(required)s 8504(in)s
8758(this)s 0 10555(project.)m 723(Its)s 1008(syntax)s 1652(mak)s 2(es)k
2275(porting)s 2979(mathematical)s 4231(reasoning)s 5152(to)s 5392(code)s
5877(f)s 2(ast)k 6265(without)s 7011(losing)s 7617(code)s
8102(readability)s 14(.)k 0 10291(This)m 447(characteristic)s 1674(is)s
1878(adv)s 5(antageous)k 3125(in)s 3360(lar)s 3(ge)k
3858(projects,)s 4662(in)s 4897(which)s 5498(mock-ups\212functional)s 7537(or)s
7787(not\212are)s 8618(often)s 0 10027(de)m 5(v)k 3(eloped)k
953(as)s 1186(guides.)s 1860(Python)s 2540(is)s 2738(a)s
2895(good)s 3395(choice)s 4023(for)s 4340(mock-ups)s 5257(and)s
5633(prototypes,)s 6664(b)s 4(ut)k 7001(it)s 7184(is)s
7381(often)s 7890(not)s 8231(chosen)s 8898(in)s 0 9763(the)m
319(core)s 747(of)s 996(high)s 1440(performance)s 2599(softw)s 2(are)k
140 fnt1 3347 9844(1)m 220 fnt1 3403 9763(.)m 440 9420(The)m
832(code)s 1297(will)s 1689(be)s 1947(structured)s 2878(as)s
3106(in)s 3329(\207gure)s 3892(3.)s 4097(The)s 4489(project)s
5153(will)s 5545(be)s 5803(de)s 5(v)k 3(eloped)k
6751(around)s 200 fnt5 7415 9427(main.py)m 220 fnt1 8310 9420(in)m
8532(which)s 0 9156(v)m 5(ariables)k 840(will)s 1241(be)s
1508(initialized)s 2448(and)s 2827(functions)s 3699(will)s 4100(be)s
4367(called.)s 4993(The)s 5394(functions)s 6266(will)s 6667(be)s
6933(grouped)s 7716(according)s 8639(to)s 8868(its)s 0 8892(use,)m
403(so)s 660(the)s 992(functions)s 1869(which)s 2471(compute)s
3291(con)s 8(v)k 3(ection)k 4308(and)s 4693(dif)s 5(fusion)k
5546(will)s 5951(be)s 6222(de\207ned)s 6936(in)s 200 fnt5
7172 8899(phys.py)m 220 fnt1 8012 8892(,)m 8123(as)s 8364(the)s 3(y)k
8803(are)s 0 8628(related)m 666(to)s 903(ph)s 1(ysics)k
1623(phenomena.)s 2746(The)s 3155(halo)s 3599(update,)s 4299(needed)s
4990(to)s 5227(g)s 1(ather)k 5846(the)s 6182(already)s
6893(computed)s 7830(results)s 8465(on)s 8754(cell)s 0 8364(mo)m 3(v)k 3(e,)k
580(will)s 971(be)s 1228(de\207ned)s 1927(in)s 200 fnt5
2149 8371(tool.py)m 220 fnt1 2989 8364(,)m 3086(in)s 3308(which)s
3896(general)s 4591(purpose)s 5336(operations)s 6295(will)s 6686(be)s
6943(found.)s 7550(It)s 7738(is)s 7929(assumed)s 8737(that)s
0 8100(the)m 319(NumPy)s 1040(module)s 1750(will)s 2142(be)s
2400(used)s 2856(throughout)s 3876(the)s 4195(program.)s 440 7757(The)m
844(program)s 1655(is)s 1860(based)s 2425(on)s 2709(Soria')s 12(s)k
3377(transparencies)s 4688([)s 
[ /Rect [4754 7757 4841 7905] /Border [0 0 0] /View [ /XYZ null null null ] /Subtype /Link /Dest /LOUTsoria2017navierstokes /ANN pdfmark
4754(1)s 4841(],)s 5024(presented)s
5931(during)s 6566(the)s 6897(summer)s 7672(course)s 8307(on)s
8592(CFD)s 140 fnt1 9010 7838(1)m 220 fnt1 0 7493(at)m
246(ESEIAA)s 24(T')k 12(s)k 1360(dependencies.)s 2669(The)s
3094(follo)s 5(wing)k 4025(is)s 4250(a)s 4435(step-by-step)s
5589(description)s 6649(on)s 6954(the)s 7306(de)s 5(v)k 3(elopment)k
8520(of)s 8802(the)s 0 7229(program,)m 842(based)s 1395(on)s
1667(the)s 1986(notes)s 2495(in)s 2718(section)s 3391(3.)s
220 fnt2 1645 6766(Con)m 8(v)k 2(ection)k 2747(in)s
220 fnt3 2982 6768(x)m 220 fnt2 3134 6766(dir)m 3(ection,)k
4076(as)s 4320(pr)s 3(ogrammed)k 5599(in)s 5834(module)s
200 fnt5 6581 6774(phys.py)m 220 fnt1 0 6308(The)m 437(\207rst)s
879(step)s 1327(to)s 5(w)k 2(ards)k 2106(de)s 5(v)k 3(eloping)k
3169(a)s 3366(program)s 4211(supporting)s 5246(con)s 8(v)k 3(ection)k
6296(and)s 6713(dif)s 5(fusion)k 7598(in)s 7867(both)s
220 fnt3 8357 6309(x)m 220 fnt1 8555 6308(and)m 220 fnt3
8972 6309(y)m 220 fnt1 0 6044(directions)m 911(is)s 1103(to)s
1323(implement)s 2317(the)s 2636(e)s 3(xpressions)k 3702(already)s
4397(demonstrated)s 5633(abo)s 3(v)k 3(e,)k 6249(as)s
6477(the)s 3(y)k 6902(are.)s 440 5701(It)m 653(w)s 2(as)k
1062(seen)s 1528(that)s 1937(for)s 2273(the)s 2617(horizontal)s
3583(v)s 3(elocities)k 4491(at)s 4729(the)s 5073(boundaries)s
6107(and)s 6503(for)s 6839(the)s 7183(v)s 4(olumetric)k
8203(\210o)s 5(w)k 8662(rates)s 0 5437(through)m 736(the)s
1053(f)s 2(aces,)k 1596(the)s 1913(v)s 3(elocities)k
2795(at)s 3006(e)s 5(v)k 3(ery)k 3533(point)s
4038(of)s 4286(the)s 4603(domain)s 5312(are)s 5628(needed.)s
6343(These)s 6915(v)s 3(elocities)k 7796(are)s 8112(not)s
8446(needed)s 0 5173(per)m 337(se,)s 620(b)s 4(ut)k
955(its)s 1210(projections)s 2234(to)s 2457(the)s 2778(coordinate)s
3758(ax)s 3(es.)k 4242(Moreo)s 3(v)k 3(er)k 8(,)k
5193(because)s 5940(the)s 6262(v)s 4(olumetric)k 7259(\210o)s 5(w)k
7696(rates)s 8158(depend)s 8849(on)s 0 4909(the)m 319(dimensions)s
1365(of)s 1614(the)s 1933(cell,)s 2347(the)s 2666(coordinates)s
3723(of)s 3972(the)s 4291(points)s 4874(are)s 5192(also)s
5594(needed.)s 440 4566(This)m 883(means)s 1497(that)s 1888(maps)s
140 fnt1 2342 4647(2)m 220 fnt1 2472 4566(of)m 2729(horizontal)s
3677(v)s 3(elocities)k 220 fnt3 4568 4567(u)m 220 fnt1
4736 4566(and)m 5114(v)s 3(ertical)k 5827(v)s 3(elocities)k
220 fnt3 6718 4567(v)m 220 fnt1 6812 4566(,)m 6917(and)s
7296(maps)s 7813(with)s 8263(the)s 220 fnt3 8590 4567(x)m
220 fnt1 8750 4566(and)m 220 fnt3 0 4303(y)m 220 fnt1
146 4302(coordinates)m 1200(of)s 1446(the)s 1761(points)s 2341(are)s
2656(needed)s 3328(to)s 3544(compute)s 4348(the)s 4664(horizontal)s
5602(v)s 3(elocities)k 6481(at)s 6691(the)s 7007(f)s 2(aces)k
7497(of)s 7742(the)s 8058(cell,)s 8469(as)s 8693(well)s
0 4038(as)m 220 fnt4 228 4032(D)m 154 fnt4 483 4113(-)m
220 fnt3 373 4039(x)m 220 fnt1 578 4038(,)m 220 fnt4
676 4032(D)m 154 fnt4 931 4108(+)m 220 fnt3 821 4039(x)m
220 fnt1 1082 4038(and)m 220 fnt4 1453 4032(D)m 220 fnt3
1598 4039(y)m 220 fnt1 1692 4038(,)m 1790(which)s 2379(are)s
2697(ultimately)s 3637(used)s 4093(to)s 4313(\207nd)s 4709(the)s
5028(v)s 4(olumetric)k 6023(\210o)s 5(w)k 6457(rates.)s
440 3695(Assuming)m 1390(that)s 1786(the)s 2116(domain)s 2839(is)s
3042(discretized)s 4057(with)s 4512(the)s 4842(same)s 5355(number)s
6092(of)s 6353(points)s 6948(in)s 220 fnt3 7182 3696(x)m
220 fnt1 7346 3695(and)m 220 fnt3 7728 3696(y)m 220 fnt1
7889 3695(directions,)m 220 fnt3 8864 3696(N)m 220 fnt1 9023 3695(,)m
0 3431(the)m 324(range)s 868(used)s 1330(by)s 1605(both)s
220 fnt3 2055 3432(i)m 220 fnt1 2174 3431(and)m 220 fnt3
2551 3432(j)m 220 fnt1 2672 3431(iterators\212these)m 4117(are)s 4441(the)s
4766(inde)s 3(x)k 3(es)k 5481(used)s 5943(to)s
6169(access)s 6779(the)s 7103(elements)s 7934(in)s 8163(arrays)s
8750(and)s 0 3167(matrices\212is)m 1169(from)s 1667(1)s 1824(to)s
220 fnt3 2060 3168(N)m 220 fnt4 2285 3161(+)m 2469(1)s
220 fnt1 2555 3167(,)m 2668(both)s 3128(included)s 3953(in)s
4192(the)s 4527(range)s 140 fnt1 5010 3248(3)m 220 fnt1
5071 3167(.)m 220 fnt3 5181 3168(N)m 220 fnt1 5411 3167(is)m
5618(the)s 5953(number)s 6694(of)s 6959(se)s 3(gments)k
7833(in)s 8072(which)s 8677(both)s 0 2903(sides)m 220 fnt3
495 2904(L)m 154 fnt3 617 2853(x)m 220 fnt1 751 2903(and)m
220 fnt3 1133 2904(L)m 154 fnt3 1255 2853(y)m 220 fnt1
1388 2903(of)m 1648(the)s 1978(rectangular)s 3031(domain)s 3753(will)s
4156(be)s 4426(di)s 5(vided.)k 5186(In)s 5432(\207gure)s
6007(4)s 6177(a)s 6340(discretization)s 7585(of)s 7845(the)s
8175(domain)s 8898(in)s 0 2639(the)m 220 fnt3 326 2640(x)m
220 fnt1 485 2639(direction)m 1324(is)s 1523(presented.)s 2465(In)s
2707(bold)s 3160(plus)s 3579(italics)s 4155(is)s 4354(the)s
4680(numbering)s 5688(for)s 6007(the)s 6333(se)s 3(gments,)k
7251(while)s 7796(in)s 8026(italics)s 8602(is)s 8802(the)s
0 2375(numbering)m 999(for)s 1307(the)s 1624(ends)s 2069(of)s
2316(the)s 2632(se)s 3(gments.)k 3538(The)s 3927(subindices)s
4896(of)s 220 fnt3 5143 2376(sx)m 220 fnt1 5377 2375(and)m
220 fnt3 5746 2376(cx)m 220 fnt1 5992 2375(are)m 6308(the)s
6624(positions)s 7461(of)s 7707(the)s 8023(array\212here)s 0 2111(it)m
177(is)s 369(assumed)s 1178(that)s 1562(the)s 1881(v)s 5(alues)k
2482(of)s 220 fnt3 2731 2112(sx)m 220 fnt1 2968 2111(and)m
220 fnt3 3339 2112(cx)m 220 fnt1 3588 2111(are)m 3906(stored)s
4496(in)s 4719(an)s 4978(array\212at)s 5861(which)s 6450(the)s
6769(elements)s 7594(are)s 7912(accessed.)s 1134 0 0 0 220 264 55 0 1793 LoutGr2
0 0 moveto xsize 0 lineto stroke
grestore

grestore
112 fnt1 0 1605(1)m
176 fnt1 55 1541(Python)m 597(of)s 4(fers)k 1040(tools)s
1420(to)s 1597(optimize)s 2253(code)s 2628(for)s 2879(compute-intensi)s 4(v)k 2(e)k
4211(applications,)s 5138(b)s 3(ut)k 5406(stepping)s 6041(up)s
6259(the)s 6516(code)s 6892(usually)s 7440(comes)s 7928(with)s
8284(comple)s 2(xity)k 0 1330(and)m 297(a)s 419(loss)s
728(of)s 926(readability)s 11(.)k 112 fnt1 0 1104(1)m
176 fnt1 57 1040(Introduction)m 969(to)s 1148(Computational)s 2234(Fluid)s
2650(Dynamics)s 3402(by)s 3622(the)s 3882(T)s 7(urb)k 3(ulence)k
4716(and)s 5017(Aerodynamics)s 6081(in)s 6263(Mechanical)s 7126(and)s
7427(Aerospace)s 8214(Engineering)s 0 829(Research)m 685(Group)s 1173(\(TU)s 7(AREG\).)k
112 fnt1 0 603(2)m 176 fnt1 69 539(The)m 391(reader)s
881(should)s 1399(imagine)s 2012(a)s 2142(matrix)s 2647(a)s
2776(with)s 3137(information)s 4013(encoded)s 4649(so)s 4852(that)s
5166(e)s 4(v)k 2(ery)k 5598(piece)s 6016(of)s
6222(it)s 6370(can)s 6663(be)s 6878(assigned)s 7533(to)s
7716(a)s 7845(point)s 8257(or)s 8455(group)s 8912(of)s
0 328(points)m 465(according)s 1196(to)s 1371(its)s 1572(position)s
2178(in)s 2356(the)s 2611(matrix.)s 112 fnt1 0 102(3)m
176 fnt1 57 38(Note)m 439(that)s 745(Python)s 1284(inde)s 2(x)k 2(es)k
1853(arrays)s 2318(from)s 2702(0.)s 
grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 9 10
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Times-Bold
%%+ font Courier
%%+ font Times-Italic
%%+ font Symbol
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
%%IncludeResource: font Courier
/Courierfnt5 vec2 /Courier LoutRecode
/fnt5 { /Courierfnt5 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5781 -1565(-)m 5899(9)s 6055(-)s 9066 13428 0 13428 220 264 55 1417 -15423 LoutGr2
1 LoutMargSet
grestore
LoutStartEPSF
2603 8788 translate
20.0000 20.0000 scale
0 1 translate
%%BeginDocument: contents/figs/deltatgrid.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Fri Aug 11 17:50:41 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 -1 193 231
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%BeginSetup
%%BeginResource: font TimesNewRomanPS-ItalicMT
11 dict begin
/FontType 42 def
/FontName /TimesNewRomanPS-ItalicMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 117 /u put
/CharStrings 2 dict dup begin
/.notdef 0 def
/u 1 def
end readonly def
/sfnts [
<00010000000900800003001063767420ff44a29700000350000007786670676db851b1c00000
0ac80000053d676c7966c6d9840d0000009c000002b468656164c488885b0000100800000036
686865610c7d03c80000104000000024686d74780a39015800001064000000086c6f63610000
031c0000106c0000000c6d617870051a0c4d0000107800000020707265708273be6900001098
00000ac00002010000000500050000030007003fb40201f80607b802664013000504f803000a
0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c
10fc3cfd3c3130211121112521112101000400fc2003c0fc400500fb002004c00001003cffe8
03c40389003c01974084083a193a021235314731543c6a1679157a16ac15c500fa1509552e54
3b6a09034b1554005a150336003c15022128293902ab090139263f284f285f28f515f616f539
07143b3c3c13090a262738393a16170533153c1326271b3d2e33331f1b20141b1b202b073c00
060003031f133c1413133c180e0b1b133d28201b3c13100a8a096003b80203401b3cad134043
351340181934134015351f134f135f138f139f130513b80234400c33251b402e012e25209512
1bb8ffc0b23a351bb8ffc0b31819341bb8ffc0b31415341bb8ffc0b32c34341bb8ffc0401923
2834301b401ba01b031b193d091b1713171b133d0a77c3182b2b103c3c2b2b2b4e10f45d2b2b
2b2b2b435c58b51b4023123f1bb8ffc0b3120b3f1bb8ffc0b116392b2b2b59014df4ed5d10ed
f45d2b2b2be4edf4ed2b103c103c2b10c0c0003f3c870e2e2b057d10c400183f3c3f870e2e2b
0e7d10c4011112393911123912173910c910c9870e103cc43130005d01715d5d5d5d5d435c58
401815180b3915180c3900220c393b220c3930220c391e220c392b2b2b2b2b2b59015d010306
1514163332363717060706232226353437363702062322263534371336353426232206072736
3736333216151407030615141633323e02373703c4ae270d0b1129531e4f533733272c0d104b
aae5622e402c5720110a152a4a1f4b544036252f285e271915216ab17341160371fdac852312
111f6c177d3b262c2322384af8fee9d440314b9b01356f1b0c111e601674372b2f25368bfebd
8423131742e3c7d94c000000058e0000054c001f054c001c037100180000ffe10000ffe80000
ffe8fe4afffc056b0023fe68ffe2033e00000095000000950000000000000000002500a8008e
010b007d00820045003200a400ca006b0070005100af003c00f001d700470004002500770029
004000fd00160161004601370029008e0017ffca0025005bffe902e600020099008100f20075
00d6006300c60006009a01330024003800cc003dff67001305d8003600860095ffdb00070434
00a500d8ffdcfffe004800a200d8013c01530380053e0057007a007c008c0117012a0138017c
0026003c007800bd00c0021009b5000c004d004e00540058006700b4040100020005005000af
01d5034300240058008b013501c0ffac002000250026002d00410136022bffba001e002a0034
003b003f00850094009800d7012e013d033104b900170040006100b9010e0116012201bfff9c
001f001f004d005c0086008c009600aa00cb00cb011f0154022f036005a9fee8000e006f007c
007d008b00d500f1010a0157017802b803adfe3fff6affb3ffc4001f0037003f0044004a0078
007d009700a200a700b600c000c100c600d8011d0150019701ee04740532fd81fed1fee0ff16
fff1000f002d00550068006e007f00890095009e00c200da00e400f801040108011101c20230
02da030e049e0517ff00ff8700000020002f00410057007800870088008800b900c200c50120
01280133017401d6020e020f026c027e02ab02ec038903b103e304e7ff43ffa8ffc3ffdcffe9
000700230023002600520077007d0081008f009900ac00ae00b500b800c800ea00f000f40135
016a018b01b101b501f7021402ad02d504fc05d805f0ff9dfffc000b00240025002c00300030
00330040004700490057006e009a00bd00c900cd00dc00fa00fa011b0139017e0187018a018e
0195019601df01f6028602cf02de039603a903b003c804010432046a058b05e006510761fe96
fe9aff4bff870013002500340038003e004a0065006b0073007a009c00a200b200b700bf00f0
00f700fb0104011301200124013b01520178017c0181018f01a001d90248026a026f02700301
031d032303270388041f04ab04d104da057a058bfe26fe59ff2e00010002000a003b003b0047
00580058005f0066006b007a007a008b009900af00bc00c000c700cc00e900f200f500fb00fb
0102010a010b01150121012701450145015501570158015e01610168017d01a301ab01da01ee
021002180222028f029402a302d202e703710393039b03b303d303fe04ff050b05320532054b
0559058b05ab05f2065506890742076207a708ccfd2afdc8fddefe0cfe15fe27fe53fe84febb
ff58ff76ff77ffa1ffa7ffadffafffc00000000000030094001d001f002000200027002e0048
004b004c005e005f006b0071007c008a00900091009100a700af00b300b400c400c600d100d2
00de00df00df00e600e800ea00eb00f200f500f500fc010201180123013101330137015c0162
01660170017a017a017a018201980199019b01b001bf01c001ca01d301d701d801e001e001f6
01f701f802120213022f023702440247024f0252026302650270027f0298029b02a602b702ba
02c502cf02d602d702e502fe031c031d03450348035d035e03710379038103a103b703d403d5
03d803e103f803fe0404041f042104230425043a0467048304e00528054b0564056a059f059f
05c2060b066a06af06b306cb06e8070607280748075007a607b207ff009500af009200960000
00000000000000000000017e01a80129025b0212020301c302b4019301cd02b204ed020e0159
017a0300022d042c00c8004d00e602890325013e0378011b00f1018d00490203007c000e029d
02470024000000000052004400330038005405d3041501a7000002860168005000cf0002004b
0024008800ba0025ffd800110091ff6b00b5011700260065ff9900490080014b01c000f40167
027102ea04fc0310017c01e103d9015501e601ee0434019606cb005c022b0099003d009f0016
0039002700de00790120022e005a00990388009400210019002a046c05e8000001f203b200aa
0296028902b4ffc9020000ec0005005a0447010004e00000052a001f01eb00ae016800ca02d3
028901b5040601a1014f014b011c0308005e00c70024029d006503750104028002f304d800d9
0239025a032c01f204310303005002e50283005901eb010800ac019602f80121009501800044
00e501eb02e5007400f301ff02fd038f026801c801c70116022b0142033000fe02e101620200
002400ee05170108023700660006010201e602aa0366019b00d305c203dc044d03b6000401be
013702fc03200244014d0338ffed002506f8030dfed5ff43004402ffff92040bfdef01550171
00d9ffc4032d0461044afbb5fbcf02170192036d0558fff2fe7d0583023e006605e9073d0079
0243002500cf00fd00af002a01ef021a0026001f0025003a000001170490fbfb0251001d02f0
01f50078018f005f00240044005400bf00af006701a8002600050006003f009800fa02ab00c2
004d0375004a00b600c401bf017c006f00130263000c006801520002012e0104001f001f009a
000000f1046900790080005000bd056b00ab0080001e05a54040403f3e3d3c3b3a3938373534
333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e
0d0c0b0a090807060504030201002c4523466020b02660b004262348482d2c452346236120b0
2661b004262348482d2c45234660b0206120b04660b004262348482d2c4523462361b0206020
b02661b02061b004262348482d2c45234660b0406120b06660b004262348482d2c4523462361
b0406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b09051582320b00d44235921212d2c20
204518684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323
430b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d
2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb81000
62602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723
442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0a051
58b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d
2c01182f2d2c20b0032545b019234445b01a23444565234520b00325606a20b009234223688a
6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114
008a5279b31940201945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f43
23430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c
b02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802ee23701020b802ee
4520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648b
b82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b0
02602d2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826b008260f
10161345683ab001162d2cb4000100000015b00826b00826b00826b008260f1016134568653a
b001162d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b
53234b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb013435802
1b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c64236461
64b807085158b00425b00425012046b01060482046b0106048590a21211b2121592d2cb01243
5c580cb00425b00425060c6423646164b807085158b00425b00425012046b8fff060482046b8
fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b54
5a8a8a0ab012435c5a58381b2121592d2c462346608a8a462320468a608a61b8ff8062232010
238ab903b003b08a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d000000
000100000002d1ec3a58eac45f0f3cf50819080000000000a31fb8bd00000000b53db2f7fc05
fd8c08f60830000200090001000100000000000100000721fe450057086bfc05fcfe08f60018
000700000000000000000000000000020639011c0400003c0000000000000068000002b40001
0000000200f2003c0068000500020010002f0041000004820ac000030002b9ffc003bbb34545
3240b803bbb32b2e3240b803bbb2282932b9ffc003bbb31a263280411303bb009f03bb00af03
bb00cf03bb0004000003bb001f03bb000203bb02af0027001fffc003b9b2161b32b9ffc003b8
b2424232b9ffc003b8b2363832b9ffc003b8b32a2d32df410a03b800ef03b8000203b803b900
28001fffc003b9b3282e32f0410b03b90001000003b7000103b700030800001f03b60381b23a
1f0f411703b3001003b2002003b2005003b2007003b200e003b2000600cf03b300df03b300ef
03b300ff03b30004001203a8b2e2891fbe039f016b019a001f039800930801400c1f7f047f05
027f027f03025fbb02b00001ffc00117b2196632b8ffc0b3651a6632b9ff800173b2196632bd
038401170800001fffc002afb2313340b802afb22e3340b802afb328293240b802afb3262732
40b802afb321253240b802afb31c203240b802afb2233340b802afb21933a0bc02af00b002af
00e002afb5034003212932b8fff2b33a263d32bc038203820382003a0800b51f40255c331eb8
0381b25c6432b8ffeeb3252e3314b80381b32b2e3269be03810001008a03810001000e0381b3
2b2f3210b80381b3515b320cb80381b34e513222b80381b3474d320eb80381b246330ab80381
400926473212254358320cb80381b2323310b80381b22a3312b80381b3373d3212bb0381003d
0033fff44015253d331825355b32102526343206252a330c252e33b8fffe4024252d330c3a2f
33329925aa25ba25c92504052536330c25323832193a293a383a03182517b80381b428253825
04bc0381038103810025080040101f0f1f2b2e32691f781f020b1f303332b8fff1b31f263d32
bc038003800380001f080040151f375f07af07025f06af060222ac2b2e3209ac2f33b8ffdc40
0aac1f223222232b52320eb8037fb229330eb8037fb2223314b8037fb21e2032b8ffe7b71e2b
33321e2b2f32b9ffc0037fb64c4f3232262c33410affee037f00390033fff8037f002b0033ff
ea037fb23a3320b8037fb33f46321eb8037fb32f3a3212b8037fb22e331eb8037fb32a2d320e
b8037fb2263304b8037fb3494a3404b8037fb2463304b8037fb2213318b8037f400c1d332226
3032322226333832b8fff8400a262b2f3209261b21328abe037f0001037f037f037f00260800
402e1f371f062f063f06039f02af02bf02cf02049f03af03bf03cf03046f037f038f03031f03
2f033f034f035f03050f413502ed0001005f02ed009f02ed00df02ed0003002f02ed003f02ed
006f02ed000300af02af0001004f02af009f02af0002002f02af003f02af0002003f02b00001
004f02af005f02af0002002f02af003f02af0002007003b2000103b203b202ed02ed02b002b0
02af02af401a3701003001400102010100090102000800171700000012110840410b027b0223
0034000d013d0034000d01370034000d011b401a340d8f340d84340d68340d59340d54340d48
340d2c340d28340d411002350020000d021b0020000d01fc0020000d01c30020000d01500020
000d012c401a200df0200dbe200d94200d79200d6a200d61200d5f200d44200d410d013e0138
000d003d0138000d00300138000d001d0138000d01fdb40f4d0f0009bf01fd004d000d03b103
7f0015001f0215b226341fb80214b2263f1fb80208b21ebb1f41190206001e0801001f020500
1f02ab001f0204001f02ab001f0203001f0401001f02010031019a001f01fb00230156001f01
aeb2262a1fb801adb2262a1fb801abb226341f411501a8002602ab001f01a5001e0125001f01
a400ab02ab001f01a2003102ab001f01a1003102ab001f019db2236c1fb8019cb2236c1f4109
019b00230401001f019a0033019a001f0176b2262e1fb8016cb231721f4111016b0023019a00
1f016800240401001f014500260801001f013f00230401001f0123b21e9e1fbc0121001e0201
001f0100b426791ffd1fb80125b21ffa33b80801b21ff924b802abb21fe826b80101b21fe51f
b8019ab21fe431b80101400b1fe331e41fe231891fd226b80201b61fd026cd1fcd25b80401b2
1fb731b8019ab21fae26b80801b21fac1eb80401400b1f9e315e1f97269e1f9333b80801b21f
8a24b8019ab21f831fb802ab40131f82236c1f7523e41f7026cd1f6423721f5e25b80401b21f
5d23b802abb21f55e6b80401b21f5324b80201b21f4f33b802abb21f4e26b8040140131f4731
671f4626ab1f4331cd1f3e235e1f3a1fb80401b61f3924e41f3723b80801b21f2e23b80401b2
1f2a1eb80125400b1f2923ab1f2731ab1f5537bc01c60007018a0007012b402e077f07710769
0766074b074007380736072d07220721071408120810080e080c080a08080806080408020800
0814b8ffe0402b00000100140610000001000604000001000410000001001002000001000200
000001000002010802004a00b013034b024b5342b0372b4bb807ff52b0382b4bb009505b58b1
01018e59014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b544218b0382b
b00288b801005458b801ffb101018e851bb0124358b900010140858d1bb900010159858d5959
0016763f183f123e113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d
59b0324b5358b0ff1d594bb04753205c58b9027d027b4544b9027c027b45445958b90146027d
455258b9027d01464459594bb04753205c58b9001e027c4544b90026027c45445958b9017f00
1e455258b9001e017f4459594bb05e53205c58b9001f027d4544b90025027d45445958b901a8
001f455258b9001f01a84459594bb8010153205c58b1ab1f4544b11f1f45445958b9047000ab
455258b900ab04704459594bb8012553205c58b1e61f4544b11f1f45445958b9051000e64552
58b900e605104459594bb01753205c58b124244544b1312445445958b12224455258b1242244
59594bb05153205c58b124244544b1232445445958b17d24455258b1247d4459594bb06e5320
5c58b124244544b1332445445958b1aa24455258b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58b1080042
591610703eb0124358b911b53d801bba011c03d9000b2b59b00a2342b00b2342003f3f182b10
3c012f5d060cb0062342b0072342b0124358b93b21187e1bba040001a8000b2b59b00c2342b0
0d2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e3b
211bba01a80400000b2b59b0102342b0112342002b4bb02e5358b8016b45b02a60b8016b2344
590018456944456944184569444569447373737375757573737475757575752b4bb026534bb0
3d515a58b1262645b0196044592b45186944742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b004bb02a534bb03f515a58b1070745b04060445973732b2b451869442b2b
752b2b4518694475752b2b752b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b45
1869442b002b732b2b2b2b2b2b2b2b2b012b2b2b007373732b2b2b01435c58b8ffdeb31e1c33
18b8037fb52b3318262b33b9fff00381b112332b2b2b2b590173742b002b73752b2b732b2b2b
2b2b73752b2b2b2b00>
] def
/f-0-0 currentdict end definefont pop
%%EndResource
%%BeginResource: font TimesNewRomanPSMT
11 dict begin
/FontType 42 def
/FontName /TimesNewRomanPSMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 1 /uni0394 put
/CharStrings 2 dict dup begin
/.notdef 0 def
/uni0394 1 def
end readonly def
/sfnts [
<00010000000900800003001063767420f34dda810000022c000007c46670676d3775a72f0000
09f000000573676c7966812a4a9b0000009c0000019068656164cafced4700000f6400000036
6868656113290c9a00000f9c00000024686d74780b5e014e00000fc0000000086c6f63610000
020800000fc80000000c6d617870066510ac00000fd40000002070726570d2662bf400000ff4
00000f180002010000000500050000030007004db10201bb02be0006000702bfb2000504b802
beb403000a0704b802beb5010019080605bf02be0002000301290009016b015e00182b10f63c
fd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130211121112521112101000400fc2003c0fc
400500fb002004c0000000020032000004f2056b0003000600ec404348057a058a0599050405
181012340218101234032c0b1134042c091134250379068806f706040c021b02020a011a017a
018a01f801050b051b05580503050504010000b802c940160605140606050504050604220302
1403030204060306b802c9b2000805b80205401502010302010003a7200470048004030f0440
040204b801b2400f0500901f062f066f067f068f060506b802ec40151f05014f05af05df05ef
05048005af050205050807191112392f5d7172f45d18ed1910f45d5d18ed113939003f3ced3f
ed3c103c87052e2b087d10c487052e182b87087dc43130015d5d5d5d2b2b2b2b005d33013301
27010132026022023eeffe6bfe4a056bfa955503e4fc1c00058e0000054c001f054c001c0394
001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a004300ae00ba016c0153
002f00430048022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048009d
00e600110027007f00910012006a00cafffc00000024006200a7017c01e900210060008b0434
048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe700be
04010065007f00820088009900b200c0022e034305a000200026003d004e00610065007b00d9
011301310340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d00a100af
00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d00a600a7
00ac00b9013101310217021700020017002900550080008f00a500b200b300d0014b015901c0
01c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab
03220374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1
027e027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c000c200c400f1
01fb0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064008b00ae00b2
00b800b800d600f50111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef011601200129016a017301e3
027e029002b4030e0310032303350341035403590388039403c803ce047204ab04da05490561
05ab0761fe6efed1ff4bff84000000010006001e0027002c0034003700620066006a006b006c
007000700072007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f40100
012101300169016a016d017c0185018e018e019901ac01c101c501c901e101f601f601f60222
022202280236023f02430246026702850285029402d002d602e8031c0363037f03800380039e
03b603d90400040404ff053205320548058b05a706cb07280748076208ccfcedfd2afd59fdde
fe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a100a500a5
00aa00af00b600c600cc00d700dd00ec00f201020105011701180123012a012c0131013f0147
01490149014d01510151015501550157015a015a0161016201680168017f0180018201830184
018d0195019501950198019901a501a901b601b601b701ba01ba01d501df01e601ea01f20200
02000203021702250227022f0239024302430247024f025202520267026f026f027002720276
027e02a702b302b902d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e03d2056601f00320
01da018a0369036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e102f4
02e70415015402e90128049101b7026f034302060000000005d30415048305e8000002d7003a
027d01c002c503830383ffbd003a059e01df059e02d1002004e0021300df01c0018702970000
00ce0269028b0058043405fb0069015a01a905780182013e0288012a03d4049e00e5032302f3
01f00196007a00cd014a0424025e023901ab00cf00fd011e00ed017100700195004001bb01dd
01b8000101a803a7014c020c018d01b0020d0137010000cd032101d4030a0059000000000126
0215015002f0025503bc06d00335010100d000d2007a01030130007c000000000000000000fe
006e006600940227002b0045004d00d3013200180097004100f4febcffe9001605d8058b0091
00a1032c00520030005d02cb003a009200e500e500580086003200ba0099008800300298007c
ff8001640028004d0065000200b8016a002f010b001100170100007f00040016022200a6005f
000000f8000a00ca0043004b01ee0077012000f401c00028045f0000008c044500c20060007b
008b008b0064005d00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb20036008705590256052b043400de
00c901c4004800db018b00b3004800da01160125011800ea00ea00ae0046003e05bb008a04d7
0053003fff8cffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e02b1
ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a54040
403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b
1a1918171614131211100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0406120b06660b0
04262348482d2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c
20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0905158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a43
2343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab10200
080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845441b2121592d2cb001
43632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061
b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a451869
20b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9
ffe0001a45208a54582321b03f1b235961441cb114008a5279b31940201945208a54582321b0
3f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c
0120b003252349b04060b0206320b000525823b002253823b002256538008a63381b21212121
2159012d2c4bb06451584569b00943608a103a1b212110592d2c01b005251023208af500b001
6023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d
2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b0005058b00161593a2f182d2c2121
0c6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21
b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d
2cb4000100000015b00826b00826b00826b008260f10161345683ab001162d2cb40001000000
15b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b545838
1b2121592d2c014b53234b515ab00225b00425b006254923451869525a58b00225b00225b005
25462345696048592121212d2cb0134358031b02592d2cb0134358021b03592d2c4b54b01243
5c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53
234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58
381b2121592d2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a7045
6020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d00000100000002d1ec20574800
5f0f3cf50819080000000000a2e31dc200000000b53db300fb74fd8c103a080e000000090001
000100000000000100000721fe4500571000fb74fe52103a0001000000000000000000000000
000000020639011c0525003200000000000000780000019000010000000200f2003c006f0005
00020010002f0041000005cd0f1800030002b9ffc003e1b345453240b803e1b32b2e3240b803
e1b2282932b9ffc003e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb242
4232b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef03de000203de03df002800
1fffc003dfb3282e32f0410d03df0001037e000f0101001f00a003dd00b003dd0002004003da
b32426329fbf03cc000103ca03c90064001fffc003c9b20d1132410a03c703b70012001f03b6
03b50064001fffc003b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d00
04006f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f03a7004f03a7000403
ab03ab00ef03a50001000f03a5002f03a5006f03a5008f03a50004005403aa0001006b03aa00
0103a8036a0022001f038c03940015001f038b03930015001f03a40393001a001f03a2039400
1e001f03a10393001e001f039f0394001e001f039b0394001a001f039a0393001e001f039903
940016001f039803940016001f03970393001b001f03960394001b001f03950393001b001f03
760375001a001f03740375001a001f03a00373b21e1f10411e03930020039300300393000300
200394003003940040039400030000039400010383036c001e001f03b1036c0032001f036d03
6c0032001fffc0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0037d00d003
7d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c00
0400300373004003730002000003730010037300200373000300e0037300f00373000200b003
7300c0037300d003730003008403730090037300a0037300030377036a0029001f0389036ab2
281f40b80367b33940323fbb0366000100400366b3191d328fbb0366000100400366b3090a32
40b80366b3090e3240b80366b3090f323fbb0365000100400365b3090c3240b80365b31a1d32
40b80365b3090e326b410e0363007b0363000200140363002403630034036300440363000403
63b2242f1fba034e006d0800400e1f7f027f037f047f050430440112bf033200500800001f00
12032d003c080040291f5f3c01376009700980090310092009300940095009056f037f038f03
031f032f033f034f035f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00bc00bd00b05
b006c006d006e006f0060520063006400650066006700680069006a006099006900702600b70
0b800b03100b200b300b400b500b051f0701a041850362000100000362001003620070036200
900362000400f0035f00010020035e0020035f0030035f0040035e00040000035e0000035f00
10035f00d0035e00e0035f00050010030f0020030f0030030f00d0030f00e0030f0005000003
0f0010030f0050030f0060030f0070030f00d0030f00060000030f0010030f0020030f003003
0f00e0030f00f0030f0006030f00270000030e0030030e000200e0030e00f0030e0002030e00
4a00e0030d00f0030d0002030d002700d002fc0001001002fc002002fc005002fc000300d002
fc00e002fc0002000002fc001002fc002002fc003002fc005002fc006002fc000600e002fc00
f002fc0002002002fc003002fc004002fc000302fc406127c02901b02901a02901902901403c
3f413240223f41321212125f235f255f285fa5046f236f256f286fa5044f234f254f284fa504
3f233f253f283fa5042f232f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c045f4c
6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32370f413d02af0001
005f02af009f02af00df02af0003000f02af001f02af002f02af003f02af006f02af000502af
02af001f02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02ad001f02ad
003f02ad005f02ad009f02ad0005005f02ad00df02ad0002000f02ad001f02ad003f02ad0003
004002acb23a334f414c02ac005f02ac009f02ac0003002f02ac003f02ac0002000f02ac003f
02ac00af02ac000300b002ac00e002ac0002004f02ac005f02ac00a002ac0003000f02ac001f
02ac002f02ac003f02ac0004000f035a0001000f035a001f035a003f035a005f035a0070035a
000500cf035700df03570002000f0357001f03570070035700af03570004035a035a03570357
02ad02ad02ac02ac032c400d31151f001616000000121108104110020c004a000d01a8004a00
0d0198004a000d0189004a000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe
02280041000d01940041000d0121400b410db4410d4f410d29410d411002170021000d021500
21000d02060021000d01eb0021000d014e0021000d012c4014210df9210df3210df1210d9d21
0d71210d3d210d4110021c001f000d0214001f000d020b001f000d0196001f000d014a001f00
0d0126400b1f0dc61f0d571f0d371f0d410d019e0141000d00420141000d001e0141000d001b
0141000d01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c291fb801ffb23c41
1fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f9010f0101001f01f6b224e41f41
1501f401490401001f01f301490401001f01f1014900ab001f01f001490067001f01a6003c01
25001f01a4b23c811f411501a3010f019a001f01a200220801001f01a100500401001f019f01
49019a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a002c0101001f0197b2
2ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f41110167002402
01001f0163002502ab001f014c010f019a001f01480149006c001f0147b22c891fb80145b22c
9e1fb80144b22c791fb80143b223311fb80127b23c811fbc012300500101001f011fb223e41f
4115011d0023019a001f011c00230801001f011b00250801001f010e010f0401001f010d0022
0401001f0108b223811fb80106b425e41ff73cbb0125001f00f5010fb29e1fe3bc0149015600
1f00e20149b2ab1fd1b901490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb808
01b21fbf2cb80201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21fa523b80201
400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d010f0156400b1f592c3e1f
4c3cab1f4625b80101b21f403cb80125400a1f3a23721f393cab1f38b80149b3ab1f3124b804
01b21f3025b802abb61f2a24e41f2623b80156b21f5537ba023500070175402c077407620756
0751073b0733072d0720071d071c071408120810080e080c080a080808060804080208000814
b8ffe0402b000001001406100000010006040000010004100000010010020000010002000000
01000002010802004a00b013034b024b534201b0124b004b5442b0372b4bb807ff52b0382b4b
b008505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
2f858d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a515ab0052342180016
763f183f123e113946443e113946443e113946443e113946443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b
5358b0ff1d594bb04753205c58b90271026f4544b90270026f45445958b9017a0271455258b9
0271017a4459594bb04753205c58b9002202704544b9003c027045445958b901b30022455258
b9002201b34459594bb04c53205c58b9014900224544b1222245445958b901c20149455258b9
014901c24459594bb06753205c58b9002402714544b90050027145445958b9021e0024455258
b90024021e4459594bb8020153205c58b9010f00224544b1222245445958b90c00010f455258
b9010f0c004459594bb01c53205c58b125254544b12c2545445958b13725455258b125374459
594bb0ab53205c58b125254544b1232545445958b901590025455258b9002501594459594bb8
010153205c58b125254544b1282545445958b902080025455258b9002502084459592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b01b361dc6463456523456023456560234560b08b766818b080622020b164dc456523
4520b003266062636820b003266165b0dc236544b064234420b161634565234520b003266062
636820b003266165b063236544b0612344b10063455458b163406544b26140614523614459b3
a67f434b456523456023456560234560b089766818b080622020b1437f4565234520b0032660
62636820b003266165b07f236544b043234420b1a64b4565234520b003266062636820b00326
6165b04b236544b0a62344b1004b455458b14b406544b2a640a645236144594b5242014b5058
b108004259435c58b108004259b3020b0a124358601b2159421610703eb0124358b93b21187e
1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b0
0e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b0018
456944456944456944456944737373747373737475752b7373747475184569447373742b4bb0
21534bb046515a58b03cb03c45b040604459012b2b2b2b757575757575757543584010bf3ccf
3c026f3c7f3c8f3c9f3caf3c0575755943584012bf22cf22025f226f227f228f229f22af2206
757559435c58b6403c9f22ef220375592b2b0174747474454473737474757545447345447374
4544737475737373737300757575737575752b2b757575752b752b435841220063032d000100
03032d0013032d0023032d0033032d0053032d000500c3032d00d3032d00e3032d00f3032d00
040083032d0093032d00a3032d00b3032d0004032d032d4518694474747575592b4358b90018
0332b330353238b80332b361663238b80332b3535a3238b80332b3454e3238b80332b33c4132
18b80332b23f330a410f0332000100ba033200ca033200da033200ea033200fa033200050332
03324518694474752b2b2b2b2b2b597300732b012b7575002b2b2b74002b2b2b732b74012b00
2b2b017373737474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b00017375007373004569440073730173742b2b2b2b2b732b00732b752b2b732b2b2b
2b2b2b2b2b2b00>
] def
/f-1-1 currentdict end definefont pop
%%EndResource
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 -1 193 231
%%EndPageSetup
q 0 -1 193 232 rectclip q
0 g
0.49159 w
0 J
0 j
[ 2.949538 2.949538] 0 d
4 M q 0 1 1 0 0 230.701889 cm
-37.035 0.246 -193.422 191.906 re S Q
0.4 w
[ 2.4 2.4] 0 d
q 0 1 1 0 0 230.701889 cm
-100.988 0.199 m -100.988 192.199 l S Q
0.490816 w
[ 2.944894 2.944894] 0 d
q 0 1 1 0 0 230.701889 cm
-230.027 64.199 m -37.309 64.199 l S Q
0.4 w
[ 2.4 2.4] 0 d
q 0 1 1 0 0 230.701889 cm
-165.27 0.699 m -165.27 192.699 l S Q
0.490816 w
[ 2.944894 2.944894] 0 d
q 0 1 1 0 0 230.701889 cm
-230.027 128.246 m -37.309 128.246 l S Q
0.501961 0 0.501961 rg
123.852 101.452 m 142.559 101.452 l 142.559 105.194 l 157.523 97.71 l 142.559
 90.229 l 142.559 93.971 l 123.852 93.971 l h
123.852 101.452 m f*
BT
10 0 0 10 152.786762 104.31669 Tm
/f-0-0 1 Tf
(u)Tj
ET
0 g
BT
10 0 0 10 95.60102 223.929428 Tm
/f-1-1 1 Tf
<01>Tj
ET
0.39598 w
[] 0.0 d
3.9 M q 1 0 0 -1 0 230.701889 cm
65.156 11.906 m 127.875 11.906 l S Q
69.113 218.796 m 70.699 220.378 l 65.156 218.796 l 70.699 217.21 l h
69.113 218.796 m f*
4 M q 1 0 0 -1 0 230.701889 cm
69.113 11.906 m 70.699 10.324 l 65.156 11.906 l 70.699 13.492 l h
69.113 11.906 m S Q
123.914 218.796 m 122.332 217.21 l 127.875 218.796 l 122.332 220.378 l 
h
123.914 218.796 m f*
q -1 0 0 1 0 230.701889 cm
-123.914 -11.906 m -122.332 -13.492 l -127.875 -11.906 l -122.332 -10.324
 l h
-123.914 -11.906 m S Q
0.3307 w
3.9 M q 1 0 0 -1 0 230.701889 cm
64.516 31.855 m 64.516 7.25 l S Q
q 1 0 0 -1 0 230.701889 cm
128.516 31.855 m 128.516 7.25 l S Q
Q Q
showpage
end restore


%%EndDocument
LoutEPSFCleanUp

[ /Dest /LOUTdeltatgrid /DEST pdfmark
180 fnt2 2655 8240(Figur)m 3(e)k 3201(2.)s 180 fnt1
3419 8241(Representation)m 4537(of)s 4740(the)s 5001(v)s 4(ariables)k
5681(of)s 5884(interest)s gsave
2583 6249 translate
220 fnt1 3899 1528 0 1315 220 264 55 LoutGraphic
gsave

200 ldiagbegin
grestore
2502 426 552 213 220 264 55 1397 1102 LoutGr2
(T) ldiagpushtagdict
grestore
1104 426 552 213 220 264 55 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ] 0.2 ft
[ /ldiagsolid ] 0.04 ft
{  }
{} ldiagnodeend
(IN) ldiagpushtagdict
grestore
200 fnt5 132 164(main.py)m
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
2469 992 0 782 220 264 55 0 0 LoutGr2
(S) ldiagpushtagdict
grestore
1787 421 552 211 220 264 55 682 571 LoutGr2
(T) ldiagpushtagdict
grestore
1104 421 552 211 220 264 55 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ] 0.2 ft
[ /ldiagsolid ] 0.04 ft
{  }
{} ldiagnodeend
(IN) ldiagpushtagdict
grestore
200 fnt5 132 164(phys.py)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
1262 461 631 253 220 264 55 0 0 LoutGr2
(S) ldiagpushtagdict
grestore
1262 461 631 253 220 264 55 0 0 LoutGr2
(T) ldiagpushtagdict
grestore
1262 416 631 208 220 264 55 0 45 LoutGr2
ldiagnodebegin [ ldiagbox ] 0.2 ft
[ /ldiagsolid ] 0.04 ft
{  }
{} ldiagnodeend
(IN) ldiagpushtagdict
grestore
132 135(Con)m 8(v)k 3(ection)k
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
0 461 0 253 220 264 55 1262 0 LoutGr2
1 ldiaglinkbegin 
[ 0
0
{ T } { S@T }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft [ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
1097 461 548 253 220 264 55 1372 0 LoutGr2
(S) ldiagpushtagdict
grestore
1097 461 548 253 220 264 55 0 0 LoutGr2
(T) ldiagpushtagdict
grestore
1097 415 548 208 220 264 55 0 45 LoutGr2
ldiagnodebegin [ ldiagbox ] 0.2 ft
[ /ldiagsolid ] 0.04 ft
{  }
{} ldiagnodeend
(IN) ldiagpushtagdict
grestore
132 134(Dif)m 5(fusion)k ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
0 461 0 253 220 264 55 2469 0 LoutGr2
1 ldiaglinkbegin 
[ 0
0
{ T } { S@T }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft [ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
ldiagpopuptagdict
grestore
0 992 0 782 220 264 55 2469 0 LoutGr2
1 ldiaglinkbegin 
[ 0
0
{ T } { S@T }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft [ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
1320 992 0 782 220 264 55 2579 0 LoutGr2
(S) ldiagpushtagdict
grestore
1212 421 552 211 220 264 55 108 571 LoutGr2
(T) ldiagpushtagdict
grestore
1104 421 552 211 220 264 55 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ] 0.2 ft
[ /ldiagsolid ] 0.04 ft
{  }
{} ldiagnodeend
(IN) ldiagpushtagdict
grestore
200 fnt5 132 164(tool.py)m ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
1320 461 660 231 220 264 55 0 0 LoutGr2
(S) ldiagpushtagdict
grestore
1320 461 660 231 220 264 55 0 0 LoutGr2
(T) ldiagpushtagdict
grestore
1320 461 660 231 220 264 55 0 0 LoutGr2
ldiagnodebegin [ ldiagbox ] 0.2 ft
[ /ldiagsolid ] 0.04 ft
{  }
{} ldiagnodeend
(IN) ldiagpushtagdict
grestore
132 180(Halo)m
607(update)s ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
ldiagpopuptagdict
grestore
0 461 0 231 220 264 55 1320 0 LoutGr2
1 ldiaglinkbegin 
[ 0
0
{ T } { S@T }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft [ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
ldiagpopuptagdict
grestore
0 992 0 782 220 264 55 3899 0 LoutGr2
1 ldiaglinkbegin 
[ 0
0
{ T } { S@T }
0.8 ft 0.8 ft ldiaglinepath ] 0.2 ft [ /ldiagsolid ] 0.04 ft ldiaglinkend
grestore

grestore
ldiagend

grestore

[ /Dest /LOUTstructure /DEST pdfmark
180 fnt2 3266 5701(Figur)m 3(e)k 3812(3.)s
180 fnt1 4030 5702(Structure)m 4728(of)s 4931(the)s 5192(program)s
220 fnt1 LoutStartEPSF
883 3918 translate
20.0000 20.0000 scale
0 1 translate
%%BeginDocument: contents/figs/divisionside.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Wed Sep  6 15:20:07 2017
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 -1 365 65
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%BeginSetup
%%BeginResource: font TimesNewRomanPS-ItalicMT
11 dict begin
/FontType 42 def
/FontName /TimesNewRomanPS-ItalicMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 43 /plus put
Encoding 45 /hyphen put
Encoding 46 /period put
Encoding 48 /zero put
Encoding 49 /one put
Encoding 76 /L put
Encoding 78 /N put
Encoding 99 /c put
Encoding 105 /i put
Encoding 115 /s put
Encoding 120 /x put
/CharStrings 12 dict dup begin
/.notdef 0 def
/c 1 def
/x 2 def
/i 3 def
/plus 4 def
/one 5 def
/s 6 def
/hyphen 7 def
/L 8 def
/period 9 def
/zero 10 def
/N 11 def
end readonly def
/sfnts [
<00010000000900800003001063767420ff44a29700000de8000007786670676db851b1c00000
15600000053d676c7966f52377fd0000009c00000d4c68656164c488885b00001aa000000036
686865610c7d03d200001ad800000024686d74782e86030600001afc000000306c6f63610000
567400001b2c000000346d61787005240c4d00001b6000000020707265708273be6900001b80
00000ac00002010000000500050000030007003fb40201f80607b802664013000504f803000a
0704f8010019080605f80203b8014ab309a2dc182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c
10fc3cfd3c3130211121112521112101000400fc2003c0fc400500fb002004c00001003cffe8
036c03890028010d40460040170e3f2840170e3f2e002c012b272e283e003e013a053e273e28
8c028b218927ab02a424b51fb324101f001a021a0419051a271f28068526017a278a27a62103
1605012ab8ffc0b211352ab8ffc0b216352ab8ffc0400e23359f28af2802280000280d1911b8
0104b41d240a0725b8ffdeb31b103f25b8ffdc40221e392527030b00c9147019270d8053352f
0d3f0d4f0d5f0d040f0d1f0d020d1a2a22b80381401e068053353f064f065f066f06048006a0
06b006c006d006050619292b56182b4e10f45d712b4de94e10fe5d712b4dedede4003fed2b2b
3feded011112393910c95d3130012b2b2b715d004bb021534bb02e515a58bb001fffe8001eff
e8383859007101715d2b2b250606232226353412243332161514070623222635343e02353427
26232206070615141633323637031b68d4768e9fab01218b6d6c261c291f290f2f0a131d3562
c0445274644d975eda7d75a087990128b95b423e2c22281e13202d140b150e148a7f9a9a6677
4d650001ffbcffe8038403890046010840630d40120b3f0700072a003d013e14001601240023
014a1b56018919a301a919aa2aa83daf3f1048401035101763217321c919cb210509230c2a52
230304191a1a022a2a2b3e403e3c40282122021a1a1f2840142828403e2a1904041135428a46
c60011b80395401f153a0a0a000735c639272e2e260b042a193e218a9f22cf220222c90d02e4
45ba014700400124b21a8228b8019f401d19e43e403b4b343e401d353e3e47200d400d8f0daf
0d040d1a48321947b80114b1de182b4e10e410e65d12392f2b2b4dedf4edf4e6ed10f45ded11
123939003f3c10fde43f3c10fde410f4ed11121739870e2e2b0e7d10c40110c90708103c083c
870e10c4c43130005d5d012b5d2b011617161737363637363332161514070623222726232207
0607131616333237363717060706232227260302070623222726353436333217163332373636
37262726262322073501673119122958236426181d2b330f1c2415182f1018213e5652131a0d
151c3727233f613726382115429c5e3d392821182c2020241a0e0c132fa2193e05174a48171e
038934342499843057100a2e21260e1909101c3495fea84f1f172e4a12764e2c3f270129fef1
4e321d1625212c20171026fc38f30e4136022400000000020058ffe8022e0516000b00290124
4027176e3a3516763a35122b4012352b40191b34590c0119230116172945215a282830294d0c
007006b8039c401a0c07280c0f0c290f1f1e21141e1e211b0b1e2a28211e10178a16b80143b4
0f0970030cb80147b203600fb80123b7296c121e401b351eb8ffc0b33a3b341eb8ffc0b32a34
341eb8ffc040092324341e401f20341eb8ffc04013131634301e8f1e021e192a1e171e2a0a77
86182b2b103c2b4e10f45d2b2b2b2b2b2b435c58400b1e401c113f1e400d113f1eb8ffc0b316
0d3f1eb8ffc0b117392b2b2b2b594de4fde4e610ed10f6ed2b103c2b10c0003f870e2e2b087d
10c42b183f00f6ed10f5ed2bfc01f510c9313001715d2b2b435c58b517400c143f0db8ffdeb6
1339172213390db8ffdeb50f3917400f392b2b2b2b2b59012b2b013216151406232226353436
13030615141633323736371706070623222635343713363534262322073501ca2a3a3b29293b
3a37c614130d0f15393a23445c443e29341982201f1b164505163a2a293b3b292a3afe73fd43
470e1014102d53176847353125255601c06e1c161c0b270000010025008d045b04c3000b0043
402606d7075d0ad70b0b00082909d70005d7045d01d70008d7060b290500d77f020102190c9f
f6182b4e10f45d4df43cfd3ce4002ff4fde410f4ed103c10f4fde43130251121352111331121
1521110216fe0f01f15201f3fe0d8d01f35201f1fe0f52fe0d000001007d000003570568001b
00ca401a071a015602670276027403bd0d05080008101701170f04080f09b80138b308070106
410b01380007001a01a30010020e002800190138001a01fd401300100f0103000828100f0fe6
01001401010019ba01f4001a030d40091b1b000508070c0001bb03280010001a020bb31f0f01
0fb80327400b10011c2800100117011c0aba022801e300182b2b103c2b2b3c2b10c0012bf65d
e43cf53c003f3c3f3c10f4ed870e2e2b7d10c42b11121739180010f5ed2bfc01f50010ed0110
c00010ed0110c03130015d5d0071010106151416170721373637363736371336373635342623
220727250357febe1c335e0afdfd0e521a2a152122e815020326211a370d01510568fb9f632c
2527072525020b121e2e770325490b141323280c245e0001ffedffe802e70389003000b74024
32010117221b103f080b040f180b150f3a2705280b230f9903032f013f014f015f010401b801
04400a2ec60030070524290719b801b5403415c618170b1d24110b028a00c60140120b3f5001
0101c90e3ad020e020f020037f208f209f20c0200420a0083a26951a8a19c618b8ffc0401334
35184030351840212234a018c01802187c31ba0144016400182b10f55d2b2b2bf4edf4edf45d
5dfdf45d2be4ed003fed3f3ce4ed3fed3f3ce4ed5d3130015d5d2b005d010323262623220615
14161716161514062322272623220723133316163332363534272e0235343633321716163332
3702e73d2505684d3e491d31824cad84485e21122d17253d250672634c59101cb3338d6f201a
0e67112b1d0389fecd867a4430213c368e904068a1220c2e0144987e553e28223cd46a356186
0503272f00010036017a026501ff0003001cb300830201b80311b6050219046d8e182b4e10e4
4d10e4002ffd313001072137026529fdfa2901ff85850001ffbe0000042f054c002801094033
09131828021255168f268b278b28a400b700b61b0727280108021d011218131d121109101d11
1819191e080914080809232028b801064021202e01121102010828272300042a082928090810
00a90028102820280328c42a19bd030100090345001200080173b62909081708290ab80173b1
c4182b2b103c2b2b4e10f4435c58b90008ff80b326173f08b8ffc0b328183f08b8ff80b62d17
3f088018392b2b2b2b59014de4ed4e10f6714de42b103c2b10c001121739003f3f3c10eded11
39870e2e2b0e7d10c4180010ed0110c00010ed0110c00010ed0110c010c93130015d435c58b5
244011143e19b8ffe8b2113915b8ffdeb30f133e16b8ffdeb20f133e2b2b2b2b59015d212137
3637363736371336353426232227372107220607060703061514171633333237363736373733
03abfc130e501b2a141f23ef1e374c110a0c0229085d4e1a1229eb1b1b113c838f543e341c47
1a2525020b121d2e7803396630262a01252524291b8dfcd55c2418160f241b361e772d000000
00010045ffe9011000b3000b001eb900000391b2060b03b80174b509190c6df5182b4e10f44d
ed003ffd3130373216151406232226353436aa2b3b3c2a2a3b3bb33b2a2a3b3b2a2a3b000000
0002007affe803f3056800120024008c404e35163b2048064a07491e4f1f4c2054175a206416
64176e1e6e1f6b20760f731674177e1f7b20821685178d20951691179e20a315a416a117ab1e
af20b902b415b216b417bd1ebf202413f900051cb80167401a0a0d19ab800d010d192522ab80
03cf03df03ef03ff0305031a26ba011d011600182b4e10f65d4ded4e10f45d4ded003fed3fed
3130015d01321615140207060706232226353437123736172206020702151416333237361312
11342602c480af82765e673c4f82af5867a069833a777f3a4b5a403d2b7352855a0568d6e7c6
fe649777351ed6e8e5e7010e8c5c345bfee0e3fed7d16867286c010501ab010b6f6900000001
ffc7ffe10618054c00290153407507131712281436123a2646004512471568027902a4180b54
137618b418038301010b120c1d0b1d241e1d1d2925281d290a02091d0a1c161b1d1c0001011e
141514140102141502010123131214130100131225242423161514161615290b0b0a0a00021d
1c0814130916132a281213151610012f13b8033e40141440371c3f144032193f401470148014
a0140414b8032db309009924b80173400b1640371c3f164032193f16b8ffc0b2133916b8ffc0
b3292d3416b8ffc0b31d243416b8ffc040191a353f164f167f168f16af1605167e2a09131716
1713162a0ab80173b1c4182b2b103c3c2b2b2b10f45d2b2b2b2b2b2b01ede42bf65d2b2b01fe
e42b103c103c2b10c0c0003f3c3f3c3f3c103c103c870e2e2b0e7d10c487082e182b0e7d10c4
87082e182b057d10c4180010ed0110c00010ed0110c00010ed0110c00010ed0110c00010ed01
10c03130005d015d5d0101133635342623222737210726070607060701230103061514161707
21373637363736370126262737024b01a3e31c34470c0d0b01b40c44212f172021fec124fe3d
f11b315c0afe560e501b29141d24010d27595e0b054cfbd9031a6236252a012525010f15212f
75fba20478fcb360332627072525020c121d2c7e03af3c2d0325058e0000054c001f054c001c
037100180000ffe10000ffe80000ffe8fe4afffc056b0023fe68ffe2033e0000009500000095
0000000000000000002500a8008e010b007d00820045003200a400ca006b0070005100af003c
00f001d700470004002500770029004000fd00160161004601370029008e0017ffca0025005b
ffe902e600020099008100f2007500d6006300c60006009a01330024003800cc003dff670013
05d8003600860095ffdb0007043400a500d8ffdcfffe004800a200d8013c01530380053e0057
007a007c008c0117012a0138017c0026003c007800bd00c0021009b5000c004d004e00540058
006700b4040100020005005000af01d5034300240058008b013501c0ffac002000250026002d
00410136022bffba001e002a0034003b003f00850094009800d7012e013d033104b900170040
006100b9010e0116012201bfff9c001f001f004d005c0086008c009600aa00cb00cb011f0154
022f036005a9fee8000e006f007c007d008b00d500f1010a0157017802b803adfe3fff6affb3
ffc4001f0037003f0044004a0078007d009700a200a700b600c000c100c600d8011d01500197
01ee04740532fd81fed1fee0ff16fff1000f002d00550068006e007f00890095009e00c200da
00e400f801040108011101c2023002da030e049e0517ff00ff8700000020002f004100570078
00870088008800b900c200c5012001280133017401d6020e020f026c027e02ab02ec038903b1
03e304e7ff43ffa8ffc3ffdcffe9000700230023002600520077007d0081008f009900ac00ae
00b500b800c800ea00f000f40135016a018b01b101b501f7021402ad02d504fc05d805f0ff9d
fffc000b00240025002c0030003000330040004700490057006e009a00bd00c900cd00dc00fa
00fa011b0139017e0187018a018e0195019601df01f6028602cf02de039603a903b003c80401
0432046a058b05e006510761fe96fe9aff4bff870013002500340038003e004a0065006b0073
007a009c00a200b200b700bf00f000f700fb0104011301200124013b01520178017c0181018f
01a001d90248026a026f02700301031d032303270388041f04ab04d104da057a058bfe26fe59
ff2e00010002000a003b003b004700580058005f0066006b007a007a008b009900af00bc00c0
00c700cc00e900f200f500fb00fb0102010a010b01150121012701450145015501570158015e
01610168017d01a301ab01da01ee021002180222028f029402a302d202e703710393039b03b3
03d303fe04ff050b05320532054b0559058b05ab05f2065506890742076207a708ccfd2afdc8
fddefe0cfe15fe27fe53fe84febbff58ff76ff77ffa1ffa7ffadffafffc00000000000030094
001d001f002000200027002e0048004b004c005e005f006b0071007c008a00900091009100a7
00af00b300b400c400c600d100d200de00df00df00e600e800ea00eb00f200f500f500fc0102
01180123013101330137015c016201660170017a017a017a018201980199019b01b001bf01c0
01ca01d301d701d801e001e001f601f701f802120213022f023702440247024f025202630265
0270027f0298029b02a602b702ba02c502cf02d602d702e502fe031c031d03450348035d035e
03710379038103a103b703d403d503d803e103f803fe0404041f042104230425043a04670483
04e00528054b0564056a059f059f05c2060b066a06af06b306cb06e8070607280748075007a6
07b207ff009500af00920096000000000000000000000000017e01a80129025b0212020301c3
02b4019301cd02b204ed020e0159017a0300022d042c00c8004d00e602890325013e0378011b
00f1018d00490203007c000e029d02470024000000000052004400330038005405d3041501a7
000002860168005000cf0002004b0024008800ba0025ffd800110091ff6b00b5011700260065
ff9900490080014b01c000f40167027102ea04fc0310017c01e103d9015501e601ee04340196
06cb005c022b0099003d009f00160039002700de00790120022e005a00990388009400210019
002a046c05e8000001f203b200aa0296028902b4ffc9020000ec0005005a0447010004e00000
052a001f01eb00ae016800ca02d3028901b5040601a1014f014b011c0308005e00c70024029d
006503750104028002f304d800d90239025a032c01f204310303005002e50283005901eb0108
00ac019602f8012100950180004400e501eb02e5007400f301ff02fd038f026801c801c70116
022b0142033000fe02e101620200002400ee05170108023700660006010201e602aa0366019b
00d305c203dc044d03b6000401be013702fc03200244014d0338ffed002506f8030dfed5ff43
004402ffff92040bfdef0155017100d9ffc4032d0461044afbb5fbcf02170192036d0558fff2
fe7d0583023e006605e9073d00790243002500cf00fd00af002a01ef021a0026001f0025003a
000001170490fbfb0251001d02f001f50078018f005f00240044005400bf00af006701a80026
00050006003f009800fa02ab00c2004d0375004a00b600c401bf017c006f00130263000c0068
01520002012e0104001f001f009a000000f1046900790080005000bd056b00ab0080001e05a5
4040403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c
1b1a191817161514131211100f0e0d0c0b0a090807060504030201002c4523466020b02660b0
04262348482d2c452346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab1
0200080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845441b2121592d2c
b00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b0
4061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344
b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a45
186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d
2cb0022546608a46b040618c482d2c01182f2d2c20b0032545b019234445b01a234445652345
20b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321b03f1b235961442d
2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121212159012d2c4bb0
6451584569b00943608a103a1b212121592d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c
352d2c76b802ee23701020b802ee4520b0005058b00161593a2f182d2c21210c6423648bb840
00622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423
648bb81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb40001000000
15b00826b00826b00826b008260f10161345683ab001162d2cb4000100000015b00826b00826
b00826b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb0
134358031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c
580cb00425b00425060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b8fff060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46
2320468a608a61b8ff8062232010238ab903b003b08a70456020b0005058b00161b8ffba8b1b
b0468c59b0106068013a2d000000000100000002d1ec9515f8545f0f3cf50819080000000000
a31fb8bd00000000b53db2f7fc05fd8c08f60830000200090001000100000000000100000721
fe450057086bfc05fcfe08f600180007000000000000000000000000000c0639011c038d0038
038dffb802390058056600be0400007d031dffed02aa00360473ffbe020000450400007a0556
ffc70000000000000068000001ec000003c80000056c000005e00000070c0000085000000888
00000a1400000a6000000b6800000d4c00010000000c00f2003c0068000500020010002f0041
000004820ac000030002b9ffc003bbb345453240b803bbb32b2e3240b803bbb2282932b9ffc0
03bbb31a263280411303bb009f03bb00af03bb00cf03bb0004000003bb001f03bb000203bb02
af0027001fffc003b9b2161b32b9ffc003b8b2424232b9ffc003b8b2363832b9ffc003b8b32a
2d32df410a03b800ef03b8000203b803b90028001fffc003b9b3282e32f0410b03b900010000
03b7000103b700030800001f03b60381b23a1f0f411703b3001003b2002003b2005003b20070
03b200e003b2000600cf03b300df03b300ef03b300ff03b30004001203a8b2e2891fbe039f01
6b019a001f039800930801400c1f7f047f05027f027f03025fbb02b00001ffc00117b2196632
b8ffc0b3651a6632b9ff800173b2196632bd038401170800001fffc002afb2313340b802afb2
2e3340b802afb328293240b802afb326273240b802afb321253240b802afb31c203240b802af
b2233340b802afb21933a0bc02af00b002af00e002afb5034003212932b8fff2b33a263d32bc
038203820382003a0800b51f40255c331eb80381b25c6432b8ffeeb3252e3314b80381b32b2e
3269be03810001008a03810001000e0381b32b2f3210b80381b3515b320cb80381b34e513222
b80381b3474d320eb80381b246330ab80381400926473212254358320cb80381b2323310b803
81b22a3312b80381b3373d3212bb0381003d0033fff44015253d331825355b32102526343206
252a330c252e33b8fffe4024252d330c3a2f33329925aa25ba25c92504052536330c25323832
193a293a383a03182517b80381b42825382504bc0381038103810025080040101f0f1f2b2e32
691f781f020b1f303332b8fff1b31f263d32bc038003800380001f080040151f375f07af0702
5f06af060222ac2b2e3209ac2f33b8ffdc400aac1f223222232b52320eb8037fb229330eb803
7fb2223314b8037fb21e2032b8ffe7b71e2b33321e2b2f32b9ffc0037fb64c4f3232262c3341
0affee037f00390033fff8037f002b0033ffea037fb23a3320b8037fb33f46321eb8037fb32f
3a3212b8037fb22e331eb8037fb32a2d320eb8037fb2263304b8037fb3494a3404b8037fb246
3304b8037fb2213318b8037f400c1d3322263032322226333832b8fff8400a262b2f3209261b
21328abe037f0001037f037f037f00260800402e1f371f062f063f06039f02af02bf02cf0204
9f03af03bf03cf03046f037f038f03031f032f033f034f035f03050f413502ed0001005f02ed
009f02ed00df02ed0003002f02ed003f02ed006f02ed000300af02af0001004f02af009f02af
0002002f02af003f02af0002003f02b00001004f02af005f02af0002002f02af003f02af0002
007003b2000103b203b202ed02ed02b002b002af02af401a3701003001400102010100090102
000800171700000012110840410b027b02230034000d013d0034000d01370034000d011b401a
340d8f340d84340d68340d59340d54340d48340d2c340d28340d411002350020000d021b0020
000d01fc0020000d01c30020000d01500020000d012c401a200df0200dbe200d94200d79200d
6a200d61200d5f200d44200d410d013e0138000d003d0138000d00300138000d001d0138000d
01fdb40f4d0f0009bf01fd004d000d03b1037f0015001f0215b226341fb80214b2263f1fb802
08b21ebb1f41190206001e0801001f0205001f02ab001f0204001f02ab001f0203001f040100
1f02010031019a001f01fb00230156001f01aeb2262a1fb801adb2262a1fb801abb226341f41
1501a8002602ab001f01a5001e0125001f01a400ab02ab001f01a2003102ab001f01a1003102
ab001f019db2236c1fb8019cb2236c1f4109019b00230401001f019a0033019a001f0176b226
2e1fb8016cb231721f4111016b0023019a001f016800240401001f014500260801001f013f00
230401001f0123b21e9e1fbc0121001e0201001f0100b426791ffd1fb80125b21ffa33b80801
b21ff924b802abb21fe826b80101b21fe51fb8019ab21fe431b80101400b1fe331e41fe23189
1fd226b80201b61fd026cd1fcd25b80401b21fb731b8019ab21fae26b80801b21fac1eb80401
400b1f9e315e1f97269e1f9333b80801b21f8a24b8019ab21f831fb802ab40131f82236c1f75
23e41f7026cd1f6423721f5e25b80401b21f5d23b802abb21f55e6b80401b21f5324b80201b2
1f4f33b802abb21f4e26b8040140131f4731671f4626ab1f4331cd1f3e235e1f3a1fb80401b6
1f3924e41f3723b80801b21f2e23b80401b21f2a1eb80125400b1f2923ab1f2731ab1f5537bc
01c60007018a0007012b402e077f077107690766074b074007380736072d0722072107140812
0810080e080c080a080808060804080208000814b8ffe0402b00000100140610000001000604
000001000410000001001002000001000200000001000002010802004a00b013034b024b5342
b0372b4bb807ff52b0382b4bb009505b58b101018e59014bb0c063004b6220b0f65323b8010a
515ab005234201b0124b004b544218b0382bb00288b801005458b801ffb101018e851bb01243
58b900010140858d1bb900010159858d59590016763f183f123e113946443e113946443e1139
46443e113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58b9027d
027b4544b9027c027b45445958b90146027d455258b9027d01464459594bb04753205c58b900
1e027c4544b90026027c45445958b9017f001e455258b9001e017f4459594bb05e53205c58b9
001f027d4544b90025027d45445958b901a8001f455258b9001f01a84459594bb8010153205c
58b1ab1f4544b11f1f45445958b9047000ab455258b900ab04704459594bb8012553205c58b1
e61f4544b11f1f45445958b9051000e6455258b900e605104459594bb01753205c58b1242445
44b1312445445958b12224455258b124224459594bb05153205c58b124244544b12324454459
58b17d24455258b1247d4459594bb06e53205c58b124244544b1332445445958b1aa24455258
b124aa4459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b4569
5342014b5058b108004259435c58b1080042591610703eb0124358b911b53d801bba011c03d9
000b2b59b00a2342b00b2342003f3f182b103c012f5d060cb0062342b0072342b0124358b93b
21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b
2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b011234200
2b4bb02e5358b8016b45b02a60b8016b23445900184569444569441845694445694473737373
75757573737475757575752b4bb026534bb03d515a58b1262645b0196044592b45186944742b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b004bb02a534bb03f515a58b1
070745b04060445973732b2b451869442b2b752b2b4518694475752b2b752b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b74752b2b2b2b2b451869442b002b732b2b2b2b2b2b2b2b2b012b2b2b
007373732b2b2b01435c58b8ffdeb31e1c3318b8037fb52b3318262b33b9fff00381b112332b
2b2b2b590173742b002b73752b2b732b2b2b2b2b73752b2b2b2b00>
] def
/f-0-0 currentdict end definefont pop
%%EndResource
%%BeginResource: font TimesNewRomanPSMT
11 dict begin
/FontType 42 def
/FontName /TimesNewRomanPSMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 1 /uni0394 put
/CharStrings 2 dict dup begin
/.notdef 0 def
/uni0394 1 def
end readonly def
/sfnts [
<00010000000900800003001063767420f34dda810000022c000007c46670676d3775a72f0000
09f000000573676c7966812a4a9b0000009c0000019068656164cafced4700000f6400000036
6868656113290c9a00000f9c00000024686d74780b5e014e00000fc0000000086c6f63610000
020800000fc80000000c6d617870066510ac00000fd40000002070726570d2662bf400000ff4
00000f180002010000000500050000030007004db10201bb02be0006000702bfb2000504b802
beb403000a0704b802beb5010019080605bf02be0002000301290009016b015e00182b10f63c
fd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130211121112521112101000400fc2003c0fc
400500fb002004c0000000020032000004f2056b0003000600ec404348057a058a0599050405
181012340218101234032c0b1134042c091134250379068806f706040c021b02020a011a017a
018a01f801050b051b05580503050504010000b802c940160605140606050504050604220302
1403030204060306b802c9b2000805b80205401502010302010003a7200470048004030f0440
040204b801b2400f0500901f062f066f067f068f060506b802ec40151f05014f05af05df05ef
05048005af050205050807191112392f5d7172f45d18ed1910f45d5d18ed113939003f3ced3f
ed3c103c87052e2b087d10c487052e182b87087dc43130015d5d5d5d2b2b2b2b005d33013301
27010132026022023eeffe6bfe4a056bfa955503e4fc1c00058e0000054c001f054c001c0394
001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a6004100500094004700cf00af000e0079
01cb00040023004400a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a004300ae00ba016c0153
002f00430048022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048009d
00e600110027007f00910012006a00cafffc00000024006200a7017c01e900210060008b0434
048aff6b003b00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe700be
04010065007f00820088009900b200c0022e034305a000200026003d004e00610065007b00d9
011301310340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d00a100af
00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b0075007a0080009d00a600a7
00ac00b9013101310217021700020017002900550080008f00a500b200b300d0014b015901c0
01c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab
03220374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8012a012a01e1
027e027fff57ffa8ffe500000008001f00380051005a006f0076007700a200c000c200c400f1
01fb0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064008b00ae00b2
00b800b800d600f50111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c007e0088009200a5
00a800c500c901150126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef011601200129016a017301e3
027e029002b4030e0310032303350341035403590388039403c803ce047204ab04da05490561
05ab0761fe6efed1ff4bff84000000010006001e0027002c0034003700620066006a006b006c
007000700072007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f40100
012101300169016a016d017c0185018e018e019901ac01c101c501c901e101f601f601f60222
022202280236023f02430246026702850285029402d002d602e8031c0363037f03800380039e
03b603d90400040404ff053205320548058b05a706cb07280748076208ccfcedfd2afd59fdde
fe00fe1afe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a100a500a5
00aa00af00b600c600cc00d700dd00ec00f201020105011701180123012a012c0131013f0147
01490149014d01510151015501550157015a015a0161016201680168017f0180018201830184
018d0195019501950198019901a501a901b601b601b701ba01ba01d501df01e601ea01f20200
02000203021702250227022f0239024302430247024f025202520267026f026f027002720276
027e02a702b302b902d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655066a069806af06e8
06fc070607500762077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e03d2056601f00320
01da018a0369036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e102f4
02e70415015402e90128049101b7026f034302060000000005d30415048305e8000002d7003a
027d01c002c503830383ffbd003a059e01df059e02d1002004e0021300df01c0018702970000
00ce0269028b0058043405fb0069015a01a905780182013e0288012a03d4049e00e5032302f3
01f00196007a00cd014a0424025e023901ab00cf00fd011e00ed017100700195004001bb01dd
01b8000101a803a7014c020c018d01b0020d0137010000cd032101d4030a0059000000000126
0215015002f0025503bc06d00335010100d000d2007a01030130007c000000000000000000fe
006e006600940227002b0045004d00d3013200180097004100f4febcffe9001605d8058b0091
00a1032c00520030005d02cb003a009200e500e500580086003200ba0099008800300298007c
ff8001640028004d0065000200b8016a002f010b001100170100007f00040016022200a6005f
000000f8000a00ca0043004b01ee0077012000f401c00028045f0000008c044500c20060007b
008b008b0064005d00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe4800400040008600cb0102
007d003a003e006a0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb20036008705590256052b043400de
00c901c4004800db018b00b3004800da01160125011800ea00ea00ae0046003e05bb008a04d7
0053003fff8cffd500150028002200990062004a00e4006d00ee00e5004803c00033fe4e02b1
ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a54040
403f3e3d3c3b3a393837363534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b
1a1918171614131211100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120b04660b004262348
482d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0406120b06660b0
04262348482d2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c
20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0905158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a43
2343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab10200
080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845441b2121592d2cb001
43632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061
b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a451869
20b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b0
1a23444565234520b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9
ffe0001a45208a54582321b03f1b235961441cb114008a5279b31940201945208a54582321b0
3f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c
0120b003252349b04060b0206320b000525823b002253823b002256538008a63381b21212121
2159012d2c4bb06451584569b00943608a103a1b212110592d2c01b005251023208af500b001
6023edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d
2c3eb02a2a2d2c352d2c76b802b023701020b802b04520b0005058b00161593a2f182d2c2121
0c6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21
b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d
2cb4000100000015b00826b00826b00826b008260f10161345683ab001162d2cb40001000000
15b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b515a5820458a6044
1b2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b545838
1b2121592d2c014b53234b515ab00225b00425b006254923451869525a58b00225b00225b005
25462345696048592121212d2cb0134358031b02592d2cb0134358021b03592d2c4b54b01243
5c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff06048590a21211b21
21592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53
234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58
381b2121592d2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a7045
6020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d00000100000002d1ec20574800
5f0f3cf50819080000000000a2e31dc200000000b53db300fb74fd8c103a080e000000090001
000100000000000100000721fe4500571000fb74fe52103a0001000000000000000000000000
000000020639011c0525003200000000000000780000019000010000000200f2003c006f0005
00020010002f0041000005cd0f1800030002b9ffc003e1b345453240b803e1b32b2e3240b803
e1b2282932b9ffc003e1b21a1c32bd03e102ac0027001fffc003dfb2161b32b9ffc003deb242
4232b9ffc003deb2363832b9ffc003deb32a2d32df410a03de00ef03de000203de03df002800
1fffc003dfb3282e32f0410d03df0001037e000f0101001f00a003dd00b003dd0002004003da
b32426329fbf03cc000103ca03c90064001fffc003c9b20d1132410a03c703b70012001f03b6
03b50064001fffc003b5b30e1132004173038d000100c0038d00d0038d00e0038d00f0038d00
04006f03a7007f03a7008f03a700af03a70004000f03a7001f03a7002f03a7004f03a7000403
ab03ab00ef03a50001000f03a5002f03a5006f03a5008f03a50004005403aa0001006b03aa00
0103a8036a0022001f038c03940015001f038b03930015001f03a40393001a001f03a2039400
1e001f03a10393001e001f039f0394001e001f039b0394001a001f039a0393001e001f039903
940016001f039803940016001f03970393001b001f03960394001b001f03950393001b001f03
760375001a001f03740375001a001f03a00373b21e1f10411e03930020039300300393000300
200394003003940040039400030000039400010383036c001e001f03b1036c0032001f036d03
6c0032001fffc0037db2212332b9ffc0037db3171932a0410a037d00b0037d00c0037d00d003
7d0004ffc0037cb2212332b9ffc0037cb3171932a0412d037c00b0037c00c0037c00d0037c00
0400300373004003730002000003730010037300200373000300e0037300f00373000200b003
7300c0037300d003730003008403730090037300a0037300030377036a0029001f0389036ab2
281f40b80367b33940323fbb0366000100400366b3191d328fbb0366000100400366b3090a32
40b80366b3090e3240b80366b3090f323fbb0365000100400365b3090c3240b80365b31a1d32
40b80365b3090e326b410e0363007b0363000200140363002403630034036300440363000403
63b2242f1fba034e006d0800400e1f7f027f037f047f050430440112bf033200500800001f00
12032d003c080040291f5f3c01376009700980090310092009300940095009056f037f038f03
031f032f033f034f035f0305b8ffc0b2073a33b8ffc04047063a33900ba00bb00bc00bd00b05
b006c006d006e006f0060520063006400650066006700680069006a006099006900702600b70
0b800b03100b200b300b400b500b051f0701a041850362000100000362001003620070036200
900362000400f0035f00010020035e0020035f0030035f0040035e00040000035e0000035f00
10035f00d0035e00e0035f00050010030f0020030f0030030f00d0030f00e0030f0005000003
0f0010030f0050030f0060030f0070030f00d0030f00060000030f0010030f0020030f003003
0f00e0030f00f0030f0006030f00270000030e0030030e000200e0030e00f0030e0002030e00
4a00e0030d00f0030d0002030d002700d002fc0001001002fc002002fc005002fc000300d002
fc00e002fc0002000002fc001002fc002002fc003002fc005002fc006002fc000600e002fc00
f002fc0002002002fc003002fc004002fc000302fc406127c02901b02901a02901902901403c
3f413240223f41321212125f235f255f285fa5046f236f256f286fa5044f234f254f284fa504
3f233f253f283fa5042f232f252f282fa5041f231f251f281fa5048f4caf4cbf4ccf4c045f4c
6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5b2191a32370f413d02af0001
005f02af009f02af00df02af0003000f02af001f02af002f02af003f02af006f02af000502af
02af001f02ad002f02ad003f02ad004f02ad005f02ad000500df02ad0001000f02ad001f02ad
003f02ad005f02ad009f02ad0005005f02ad00df02ad0002000f02ad001f02ad003f02ad0003
004002acb23a334f414c02ac005f02ac009f02ac0003002f02ac003f02ac0002000f02ac003f
02ac00af02ac000300b002ac00e002ac0002004f02ac005f02ac00a002ac0003000f02ac001f
02ac002f02ac003f02ac0004000f035a0001000f035a001f035a003f035a005f035a0070035a
000500cf035700df03570002000f0357001f03570070035700af03570004035a035a03570357
02ad02ad02ac02ac032c400d31151f001616000000121108104110020c004a000d01a8004a00
0d0198004a000d0189004a000d013f004a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe
02280041000d01940041000d0121400b410db4410d4f410d29410d411002170021000d021500
21000d02060021000d01eb0021000d014e0021000d012c4014210df9210df3210df1210d9d21
0d71210d3d210d4110021c001f000d0214001f000d020b001f000d0196001f000d014a001f00
0d0126400b1f0dc61f0d571f0d371f0d410d019e0141000d00420141000d001e0141000d001b
0141000d01f2b40f440f0009bb01f20044000d0201b23c291fb80200b23c291fb801ffb23c41
1fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f9010f0101001f01f6b224e41f41
1501f401490401001f01f301490401001f01f1014900ab001f01f001490067001f01a6003c01
25001f01a4b23c811f411501a3010f019a001f01a200220801001f01a100500401001f019f01
49019a001f019d01490067001f019cb22c621fb8019bb22c791fbc019a002c0101001f0197b2
2ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c2a1f41110167002402
01001f0163002502ab001f014c010f019a001f01480149006c001f0147b22c891fb80145b22c
9e1fb80144b22c791fb80143b223311fb80127b23c811fbc012300500101001f011fb223e41f
4115011d0023019a001f011c00230801001f011b00250801001f010e010f0401001f010d0022
0401001f0108b223811fb80106b425e41ff73cbb0125001f00f5010fb29e1fe3bc0149015600
1f00e20149b2ab1fd1b901490401b21fcf2cb80125b61fce23bb1fc524b80156b21fc02cb808
01b21fbf2cb80201b51fb124e41fb0b901490201b61faf2c671fad23b80801b21fa523b80201
400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d010f0156400b1f592c3e1f
4c3cab1f4625b80101b21f403cb80125400a1f3a23721f393cab1f38b80149b3ab1f3124b804
01b21f3025b802abb61f2a24e41f2623b80156b21f5537ba023500070175402c077407620756
0751073b0733072d0720071d071c071408120810080e080c080a080808060804080208000814
b8ffe0402b000001001406100000010006040000010004100000010010020000010002000000
01000002010802004a00b013034b024b534201b0124b004b5442b0372b4bb807ff52b0382b4b
b008505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
2f858d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a515ab0052342180016
763f183f123e113946443e113946443e113946443e113946443e11394660443e11394660442b
2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b181db0964b5358b0aa1d59b0324b
5358b0ff1d594bb04753205c58b90271026f4544b90270026f45445958b9017a0271455258b9
0271017a4459594bb04753205c58b9002202704544b9003c027045445958b901b30022455258
b9002201b34459594bb04c53205c58b9014900224544b1222245445958b901c20149455258b9
014901c24459594bb06753205c58b9002402714544b90050027145445958b9021e0024455258
b90024021e4459594bb8020153205c58b9010f00224544b1222245445958b90c00010f455258
b9010f0c004459594bb01c53205c58b125254544b12c2545445958b13725455258b125374459
594bb0ab53205c58b125254544b1232545445958b901590025455258b9002501594459594bb8
010153205c58b125254544b1282545445958b902080025455258b9002502084459592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b01b361dc6463456523456023456560234560b08b766818b080622020b164dc456523
4520b003266062636820b003266165b0dc236544b064234420b161634565234520b003266062
636820b003266165b063236544b0612344b10063455458b163406544b26140614523614459b3
a67f434b456523456023456560234560b089766818b080622020b1437f4565234520b0032660
62636820b003266165b07f236544b043234420b1a64b4565234520b003266062636820b00326
6165b04b236544b0a62344b1004b455458b14b406544b2a640a645236144594b5242014b5058
b108004259435c58b108004259b3020b0a124358601b2159421610703eb0124358b93b21187e
1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b0
0e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b0018
456944456944456944456944737373747373737475752b7373747475184569447373742b4bb0
21534bb046515a58b03cb03c45b040604459012b2b2b2b757575757575757543584010bf3ccf
3c026f3c7f3c8f3c9f3caf3c0575755943584012bf22cf22025f226f227f228f229f22af2206
757559435c58b6403c9f22ef220375592b2b0174747474454473737474757545447345447374
4544737475737373737300757575737575752b2b757575752b752b435841220063032d000100
03032d0013032d0023032d0033032d0053032d000500c3032d00d3032d00e3032d00f3032d00
040083032d0093032d00a3032d00b3032d0004032d032d4518694474747575592b4358b90018
0332b330353238b80332b361663238b80332b3535a3238b80332b3454e3238b80332b33c4132
18b80332b23f330a410f0332000100ba033200ca033200da033200ea033200fa033200050332
03324518694474752b2b2b2b2b2b597300732b012b7575002b2b2b74002b2b2b732b74012b00
2b2b017373737474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b00017375007373004569440073730173742b2b2b2b2b732b00732b752b2b732b2b2b
2b2b2b2b2b2b00>
] def
/f-1-1 currentdict end definefont pop
%%EndResource
%%BeginResource: font TimesNewRomanPS-BoldItalicMT
11 dict begin
/FontType 42 def
/FontName /TimesNewRomanPS-BoldItalicMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 43 /plus put
Encoding 49 /one put
Encoding 78 /N put
Encoding 105 /i put
/CharStrings 5 dict dup begin
/.notdef 0 def
/one 1 def
/N 2 def
/plus 3 def
/i 4 def
end readonly def
/sfnts [
<00010000000900800003001063767420fe47d1eb000005c8000007846670676dc431aec00000
0d4c0000053d676c796601429e060000009c0000052c68656164c4d38c420000128c00000036
686865610cc70462000012c400000024686d747816c90183000012e8000000146c6f63610000
0e60000012fc000000186d61787004df0b7c00001314000000207072657096cd958200001334
000009ed0002010000000500050000030007004db10201bb010f000600070272b2000504b801
0fb403000a0704b8010fb5010019080605bf010f00020003014400090120012b00182b10f63c
fd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c3130211121112521112101000400fc2003c0fc
400500fb002004c00000000100300000038f0568001a00ad401e1a20090c3448004601022619
b719020f130e090e0afb09080107fb084019bb0160001800180220400b1360130e0103092800
0101b80140b60e13140e0e1318ba020800190168401b1a1a00052809080c0e1b2813101f0e2f
0e8f0eaf0e040e170e1b0aba039601f300182b2b103c2b5d2b3c2b10c0003f3c2b3f003c10f4
ed870e2e2b057d10c42b111739011a7a10fa182fe41a0010ed0110c00010ed0110c0870e7dc4
3130005d015d2b01010615141616170721373e0237133637363534262322072725038ffeb51a
252b6c0bfd550b66503320c42d02063733194a0801fd0568fb8e591818330f062525021e446d
02a49a091a172d3508257b000001ffbefff1067d054c0023015c40520f015601024410012a0f
2f222f2339003c023b053a0d3611361e3b1f3c223c2349044711471e4d22100f0109043f0103
1f00170a23502222d71f60090d0a1d09181e191d180802071d081711161d17020101b8036640
1c0e0d140d40140c3f0e01000e0d0001011f0f10140f01020f101f1e1eb80366400c11101410
40140c3f11111022b8039d401b23230009080800021817080f0e08110e24280d0e1011100f47
0e00bb02f90011000101104009400e014f0e5f0e020eb802cdb4a02501251eb8039f401a2f11
3f114f117f118f110511c524090e1711170e11240a389c182b2b103c3c2b2b2b10f45d01ed10
5df65d710119e41810e410ed2b103c103c2b10c0c0003f3c3f3c3f3c103c103c10ed870e2e01
2b2b0e7d10c487082e182b057d10c487082e012b182b0e7d10c4180010ed0110c00010ed0110
c00010ed0110c00010ed0110c01a7a10f8182fe42b1112393130015d5d00715d010113363534
26273721070606070123010106151416330721373237363637012626273702da01a8bf0f3f4d
0b01ae0a526b25feb526fde0fef90d474e09fe460939182a5019011f3548480b054cfc780290
362a323c05252505527cfb9d0484fc7b2f25364125250a105b5603d93b220125000100280088
046d04c8000b0047b10302b80124b2010104bb039b0007000a0124b2090605b80124b40308c0
0209b80124400a0b1f000100190c6232182b4e10f45d3c4df43cfd3cf43c002ff43cfd3c10f4
3c31301321113311211521112311212801e18301e1fe1f83fe1f02e801e0fe2084fe2401dc00
0002002dffe40263056b000b002800d4b40c0a11390db8fff6403510113e0317131723173f2a
471f771f7f2a980caa0ca016a017af2ab61ffa1e0e17120f16190a03dc90090109090f1c17d3
90160116b8034040310f272a262674210f0c0c2b211c142140140c3f21211c06dc00400f39af
0001000026d3277e28163f1640169016a0160416b8022b4015190b280c071c29282110501c01
1c171c290a2368182b2b103c2b712b3c2b10c0003f3c3f7ae95d182f10f4ed3f5d2bed87052e
012b2b0e7d10c4017a10fa182fe410f65ded1112392f5ded2b1112390039393130015d012b2b
0132161514062322263534361303061514163332373637170223222635343713363534262322
07372501d03e55563d3c56557bcd11120a11112d3f2297aa414d118b1426210f150d0153056b
563d3d56563d3d56fe34fd393d130b130f256114fef94938253901de4523162201283700058e
0000054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6affe0
0313000000fc000000fc0000000000000000002500f30120005f005500ea0032007400cf0055
004b00af013f000900f5010800260080001701540002001600b800d3005000f00023ffbe00dd
00f70035ffe9001102b6004900a901490158002e003b008601080023003f0039003a004e00e3
013f003d010a000900710108feff004c0082009c00c700d80015003a006d035105d800280028
009f05b800500064001500da015b017cffc2ffd8fff40099ffff001d002d00d9011c01740446
004e007200be00dd09b50038004b006d009d0118001b003c005c0069007a00a800c60122fff2
000d008600e3022b055200300047009100f4040104c9ffafffc1ffd5002c003b003b003e004b
006b009900a500b801c002210343ff8c0041004b005f009a00a600be010a01dc031e0390ff67
00250031005d006e00b600c000d000d3010a015001bc0274027b02d7000900360048004c005c
006f00840093009500a600a800ac00b000b700bc00c00104013601370145019403b6fd81fe3f
00070019003a003b005b00b800c500e100f801160127012c013401470149015d01bc03ed0474
0532053eff00ff970008000f005c006d007000820089008b00a700c100f600f80129017aff72
ff88000000000025003e0059006d007100720081008100bc00dd00de011401150150019c01d6
027e0404041cff7b002000390046004c004d005a0068006c00720080008300a300ce00d100e2
00ed0107011f0126013f016a01e0035e03a303a703cc05d805f0fed8ff78ffaeffe1ffe70019
00240041005500580071008200860088009000b000bb00c200c400d000ed00f700f801150118
011f012c015e017c019801a201cc01d201fa022b026d02cf02cf02df0333039103e304ab04fc
04fe058805e706bffed1ff4a000000010003000400170024003c004d0056005c0067007700a8
00b000b800c300c600c800e900eb00f500f8010a010c0127013501350139013f0149014d0197
019801c701ee023d02500258026d026f029402b30300031a032a0361039603a1043304400479
04da04e804fb057b058c05ab0761fe60fe99ff00ff13ff2fff47ffed00180031003f004c006b
00740078007c00840094009700b000b600b700d800da00e200e400e500eb00ee00ef00f600fa
0106010c011101110114013b013e01450149014d015b0164016f0184019101b301b901d101e1
01e501ef0205020602220236023b023e024102600276029a029a029d02c402ee03130327032b
0373038c03ba03c203d2040f0485051505320532054905610595069906a80727074807620810
08ccfd2afddefe23fe44fe67fe96feacff24ff41ff5cff61ff9effa3ffb7ffc2ffc5ffcaffdd
fff0000000000003000800100018001c0023002b0030003e0046004b0052005e005e006e007a
007b00830085008a00910092009800a800af00b600cc00ce00cf00d200e700f100f200fa0101
0108010b0112012601270127012e013601370138013b013e0140015b016a0170017401790182
01840188018d0192019b01a001a001a001ab01b801bc01c001cc01da01dc01e001e002010210
0214021d022902300230024302460269027a0284029502a302b402c102c202cf02dd02e102ec
02f00310033a03450388039903ad03bd03d403d503e303ea03f304260426046e04d104e00513
054b057605a305b705c205f8063b065b06b806e80706071a0724075007a907d407ff082700f6
012600f100df000000000000000000000000038402af02f301b80205017a04910491049e019f
0425049e019f049e019f027a005101ac02610319033b021c033b01ee01880278020a01ee033b
029f002400240261019e015e0171004401490284009902840099028400250041004502980205
01c9024904440188044400000000023005d30415035d01810023016e003504c9005b05960491
0025026202dd01d00434030a0319031e03c1049e05e8035c00000282ffef040d03ce0209010c
01f6025303a202df02d0000a00d6008200000032010901a201af01770204027a019e02eb019b
01ec024e0326045b03ee03c3042600b703620031004f0027ffee01240096036700d703750291
032603260041004501d7007402ff02a50216029f017a0100031c005000b7012b016800f90031
01a8013a00a801cc00f3012502020021007301c70603021b0142010501e1012403350272018c
044301e50282010f02fe01ee034a02c50210024e022a02a501cf005f00b1026603b203580115
008e015d02a500d1fee201b0010b015a0395005900f70783031b008b045d00a1014401000094
00b4febf03c600e803ce017303e6012e0222049500390023033b01b8000003f00140015303b4
01a805ee061801c6007d00cd00d1037c008500bd00ccfc47fcb1008402a7fccb046402ba0167
032b00700136000001320068030c0155001bfe6fffc60249013102f1fe79feb4fcf2ff4203ad
fc0efc61032a00c3009100a10077004c0002015e008400860023005d004b010a01b80086ffc5
00a80072008800590028009901350015003d0056007a00f801d600090007000f00e2001700bc
016a00ed0274005b0136000000ab0080005005a500904040403f3e3d3c3b3a39383735343332
31302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c
0b0a090807060504030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a5158
2320b08d44235920b0ed51582320b04d44235920b09051582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b
2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b0192344
2d2c2045b00325456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d
2cb01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0a05158b0
112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c01
182f2d2c20b0032545b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343
650b2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c4bb06451584569b00943608a103a1b212110
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b
2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802df23701020b802df4520
b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb820
00621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b00260
2d2c0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826b008260f1016
1345683ab001162d2cb4000100000015b00826b00826b00826b008260f1016134568653ab001
162d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b5323
4b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b8
07085158b00425b00425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b
1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a
8a0ab012435c5a58381b2121592d2c462346608a8a462320468a608a61b8ff8062232010238a
b903bc03bc8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d0000000001
00000002d1ec6d387ba15f0f3cf50819080000000000a31fbca400000000b53db2e5fb9ffd8c
09a60842000300090001000100000000000100000721fe4500570902fb9ffcfe09a600180007
00000000000000000000000000050639011c0400003005c7ffbe048f00500239002900000000
000000780000018400000360000003d80000052c00010000000500f2003c006a000500020010
002f00410000044409ed00030002410b008003c0009f03c000af03c000cf03c00004ffc003c0
b345453240b803c0b32b2e3240b803c0b2282932b9ffc003c0b21a2632bd03c002c80027001f
ffc003beb2161b32b9ffc003bdb2424232b9ffc003bdb2363832b9ffc003bdb32a2d32df410a
03bd00ef03bd000203bd03be0028001fffc003beb3282e32f0b803beb5019006900702b9ff80
02c8b2313340b802c8b31c333210411b02c8006002c8007002c80003000f02c800af02c80002
00b002c800e002c80002005f02c800a002c80002002f02c8003f02c8004f02c840a803010000
0340cd383b32404d383b32a41fb41fc01fd01fe41f05501f641f741f841f04041f141f241f34
1f441f05e41ff41f02ab1fbb1fcb1f03cfcddbcd028bcd9bcdafcdbfcd04cdcdcd4ddb4d028b
4d9b4dad4dbd4d044d4d377f047f05027f027f03020f0301cf03df03ef03ff03048f039f03af
03bf03044f035f036f037f03049f02af02bf02cf02049f03af03bf03cf03045f036f037f038f
03041f032f033f034f03047f411e03660001006f03660001005f03660001004f03660001003f
03660001002f03660001001f03660001000f0366000100ff0366000100ef036600010366b221
370f412402dd0001005f02dd009f02dd00df02dd0003002f02dd003f02dd006f02dd0003009f
02c900df02c90002000f02c9001f02c9003f02c9005f02c9000402dd02dd02c902c902c802c8
4014010001010009010200080017170000001211084041110286019e003f000d013d003f000d
0116003f000d026f0083000d02170083000d0174b7830df3830d76830d410d02350024000d02
180024000d02030024000d01610024000d01134017240da6240d95240d82240d6f240d5b240d
46240d22240d410d0249001e000d020e001e000d01c1001e000d01a3001e000d0178401d1e0d
f61e0df11e0de21e0ddd1e0dce1e0d751e0d701e0d651e0d521e0dbb02140037000d01a0400b
370dfb370d2d370d1d370db80215b40f440f0009bb02150044000d023cb24d1d1fb8023ab24d
1f1fb80237b24d2a1fbc0232004d0201001f022eb21f931f4109022c001f0125001f022b001f
0156001f022ab21f931f410d022801400079001f021f016d0156001f021e00330401001f021d
b233e41fb8021bb233411fb80216b2212d1fb801c3b24d1e1fb801bfb24d931fb801beb24dcd
1fbc01bb004d0201001f01b7b21f671f410d01b601400089001f01b200360401001f01b10036
019a001f01b0b236bb1fb801afb236ab1f410901ad016d0067001f01ac016d0072001f01a6b2
212c1fb801a5b221351fb801a4b2213b1fb801a2b2215e1fbc01a100350201001f017bb24d93
1fbc0179004d0401001f0176b24dcd1f41150175001f0125001f01730140006c001f01700036
019a001f016f00360125001f016b00330401001f0169b233811f4109016600210125001f0163
003b0125001f0147b24d221f410d0143001f0101001f013b003302ab001f013a00330101001f
0139b233341fb80136b2212e1fbc013300210401001f0132b23bab1fbc011f01400081001f01
19b2212d1fb80117b221471fb80111b235cd1fb80108b24d791fb80106b21fab1fb80105b236
721fb80100b721471ff51fe41ff4b90140080140131fef332c1fee212e1fed214c1fe04dcd1f
df4db80101b21fdc1fb80125b51fdb1fcd1fdab901400801b61fd936891fd621b80156b21fd5
3bb80156b21fcd4db80156b21fcc4dbb0101001f00ca0140b29e1fc9b9016d0156b21fc733b8
0801400b1fc2333b1fc133381fbe21b80125b21fbb3bbb0801001f00b3016db29e1fa7b80140
b76c1fa321cd1fa235b8019a400f1fa13bab1f99215e1f8c35e41f841fb80401b61f8121381f
7f21b80125b61f7b334c1f7935b8019ab61f714d271f6e3bb80101400f1f664d4a1f6321891f
6033521f5a3bbb019a001f0058016db2721f57b9016d0801b51f55212e1f4fb80140b76c1f4c
369e1f4b35b80401b21f493bb80201400b1f483bcd1f45212a1f433bb8012540161f424d521f
414dcd1f4033891f39366c1f2e21301f2cb80140b2791f2bb901400401b61f2833e41f2735b8
019ab21f5537bc0257000701d600070187402e07de07a8079e0756073e073407300729072607
250720071408120810080e080c080a080808060804080208000814b8ffe0402c000001001406
10000001000604000001000410000001001002000001000200000001000002010802004a009f
bd028600af028600bf02860003b013034b024b5342b0372b4bb807ff52b0382b4bb007505b58
b101018e59014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b544218b038
2bb00288b801005458b801ffb101018e851bb0124358b900010139858d1bb90001013c858d59
5901b0372b730016763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b182b1db096
4b5358b0aa1d59b0324b5358b0ff1d594bb02753205c58b9028802864544b902870286454459
58b901240288455258b9028801244459594bb03053205c58b9016d02884544b9028802884544
5958b90162016d455258b9016d01624459594bb04353205c58b9001f02874544b9004d028745
445958b9025e001f455258b9001f025e4459594bb8012553205c58b9003602884544b9003a02
8845445958b908970036455258b9003608974459594bb8040153205c58b90140003a4544b13a
3a45445958b91ee00140455258b901401ee04459594bb00c53205c58b13b3b4544b1333b4544
5958b1123b455258b13b124459594bb03153205c58b13b3b4544b1213b45445958b1503b4552
58b13b504459594bb03953205c58b13b3b4544b1353b45445958b15d3b455258b13b5d445959
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b45695342014b5058b108004259435c58b1080042591610703eb0124358
b911a63d851bba011b03d9000b2b59b00a2342b00b2342003f3f182b103c012f4bb00d5458b9
0001ffb038594bb00c5458b90001ffb03859060cb0062342b0072342b0124358b93b21187e1b
ba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e
2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b01123420018456944
4569441845694473737373742b45447474757575757575757500757575757474747573732b45
186944747445186944747474747575752b2b0000454445447373737475002b2b73752b2b732b
2b2b2b2b2b2b2b2b7500000000>
] def
/f-2-0 currentdict end definefont pop
%%EndResource
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 -1 365 65
%%EndPageSetup
q 0 -1 365 66 rectclip q
0.827451 g
146.367 52.536 m 146.367 36.536 l 210.367 36.536 l 210.367 52.536 l f*
0.282353 g
0.4 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 64.356453 cm
146.367 11.82 m 146.367 27.82 l 210.367 27.82 l 210.367 11.82 l S Q
0 g
0.3752 w
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
98.367 27.984 m 258.367 27.984 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
114.367 11.82 m 114.367 27.82 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
178.367 11.82 m 178.367 27.82 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
242.367 11.82 m 242.367 27.82 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
2.367 11.82 m 2.367 27.82 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
66.367 11.82 m 66.367 27.82 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
74.367 27.82 m 2.367 27.82 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
290.367 11.82 m 290.367 27.82 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
354.367 11.82 m 354.367 27.82 l S Q
[ 2.2512 2.2512] 0 d
q 1 0 0 -1 0 64.356453 cm
354.367 27.82 m 282.367 27.82 l S Q
BT
10 0 0 10 139.40437 26.953816 Tm
/f-0-0 1 Tf
(cx)Tj
6.5 0 0 6.5 148.271558 24.953816 Tm
(i)Tj
10 0 0 10 201.707678 26.953816 Tm
(cx)Tj
6.5 0 0 6.5 210.574866 24.953816 Tm
(i+1)Tj
10 0 0 10 173.164832 26.953816 Tm
(sx)Tj
6.5 0 0 6.5 181.485144 24.953816 Tm
(i)Tj
10 0 0 10 235.404382 26.953816 Tm
(sx)Tj
6.5 0 0 6.5 243.724695 24.953816 Tm
(i+1)Tj
10 0 0 10 107.404382 26.953816 Tm
(sx)Tj
6.5 0 0 6.5 115.724695 24.953816 Tm
(i-1)Tj
10 0 0 10 204.047546 9.93409 Tm
/f-1-1 1 Tf
<01>Tj
/f-0-0 1 Tf
(x)Tj
6.5 0 0 6.5 214.906921 13.93409 Tm
(+)Tj
10 0 0 10 139.596655 9.93409 Tm
/f-1-1 1 Tf
<01>Tj
/f-0-0 1 Tf
(x)Tj
6.5 0 0 6.5 150.45603 13.93409 Tm
(-)Tj
ET
0.39598 w
[] 0.0 d
3.9 M q 1 0 0 -1 0 64.356453 cm
114.824 59.555 m 177.543 59.555 l S Q
118.781 4.802 m 120.367 6.384 l 114.824 4.802 l 120.367 3.216 l h
118.781 4.802 m f*
4 M q 1 0 0 -1 0 64.356453 cm
118.781 59.555 m 120.367 57.973 l 114.824 59.555 l 120.367 61.141 l h
118.781 59.555 m S Q
173.582 4.802 m 172 3.216 l 177.543 4.802 l 172 6.384 l h
173.582 4.802 m f*
q -1 0 0 1 0 64.356453 cm
-173.582 -59.555 m -172 -61.141 l -177.543 -59.555 l -172 -57.973 l h
-173.582 -59.555 m S Q
3.9 M q 1 0 0 -1 0 64.356453 cm
178.824 59.555 m 241.543 59.555 l S Q
182.781 4.802 m 184.367 6.384 l 178.824 4.802 l 184.367 3.216 l h
182.781 4.802 m f*
4 M q 1 0 0 -1 0 64.356453 cm
182.781 59.555 m 184.367 57.973 l 178.824 59.555 l 184.367 61.141 l h
182.781 59.555 m S Q
237.582 4.802 m 236 3.216 l 241.543 4.802 l 236 6.384 l h
237.582 4.802 m f*
q -1 0 0 1 0 64.356453 cm
-237.582 -59.555 m -236 -61.141 l -241.543 -59.555 l -236 -57.973 l h
-237.582 -59.555 m S Q
0.3307 w
3.9 M q 1 0 0 -1 0 64.356453 cm
114.184 64.355 m 114.184 39.75 l S Q
q 1 0 0 -1 0 64.356453 cm
178.184 64.355 m 178.184 39.75 l S Q
q 1 0 0 -1 0 64.356453 cm
242.184 64.355 m 242.184 39.75 l S Q
BT
10 0 0 10 349.552039 26.953816 Tm
/f-0-0 1 Tf
(L)Tj
6.5 0 0 6.5 355.118445 24.953816 Tm
(x)Tj
10 0 0 10 83.156885 36.162654 Tm
(...)Tj
18.388212 0 Td
(...)Tj
-26.76347 -0.920884 Td
(0)Tj
/f-2-0 1 Tf
3.136795 3.063018 Td
(1)Tj
28.399661 0 Td
(N+1)Tj
-16.960364 0 Td
[(i)-5597(i+1)]TJ
9.6 0 0 9.6 0.424084 56.553816 Tm
/f-0-0 1 Tf
[(0)-6151(1)]TJ
11.55463 0 Td
(i-1)Tj
24.6432 0 Td
[(N+1)7996(N)]TJ
-11.320831 0 Td
[(i+1)7965(i)]TJ
ET
Q Q
showpage
end restore


%%EndDocument
LoutEPSFCleanUp

[ /Dest /LOUTdivisionside /DEST pdfmark
180 fnt2 2415 3370(Figur)m 3(e)k 2961(4.)s 180 fnt1
3179 3371(Nomenclature)m 4235(for)s 4488(one)s 4789(of)s 4992(the)s
5253(sides)s 5650(of)s 5853(the)s 6114(domain)s 220 fnt1
440 2759(There)m 1002(are)s 220 fnt3 1320 2760(N)m 220 fnt1
1535 2759(indi)m 5(vidual)k 2472(se)s 3(gments,)k 3384(so)s
3628(arrays)s 4209(related)s 4860(to)s 5080(se)s 3(gments)k
5940(lik)s 2(e)k 220 fnt3 6318 2760(cx)m 220 fnt1
6567 2759(contain)m 220 fnt3 7266 2760(N)m 220 fnt1 7480 2759(elements,)m
8358(whereas)s 0 2495(arrays)m 582(related)s 1233(to)s 1454(se)s 3(gment)k
2238(ends)s 2687(such)s 3143(as)s 220 fnt3 3372 2496(sx)m
220 fnt1 3610 2495(are)m 3929(of)s 4180(length)s 220 fnt3
4783 2496(N)m 220 fnt4 5008 2489(+)m 5192(1)s 220 fnt1
5278 2495(.)m 5374(In)s 5610(\207gure)s 6174(4,)s 6383(se)s 3(gments)k
7243(are)s 7562(numbered)s 8495(from)s 8979(1)s 0 2231(to)m
220 fnt3 220 2232(N)m 220 fnt4 445 2225(+)m 629(1)s
220 fnt1 770 2231(and)m 1141(their)s 1598(ends)s 2046(from)s
2528(0)s 2688(to)s 220 fnt3 2908 2232(N)m 220 fnt4
3133 2225(+)m 3317(1)s 220 fnt1 3403 2231(.)m 440 1888(Therefore,)m
1402(the)s 1721(con)s 8(v)k 3(ection)k 2725(function)s
3509(is)s 3701(de\207ned)s 4401(as)s 4629(follo)s 5(ws:)k

grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
1 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Page: 10 11
%%BeginPageSetup
%%PageResources: font Times-Roman
%%+ font Courier
%%+ font Times-Italic
%%+ font Symbol
%%+ font Times-Bold
/pgsave save def
%%IncludeResource: font Times-Roman
/Times-Romanfnt1 vec2 /Times-Roman LoutRecode
/fnt1 { /Times-Romanfnt1 LoutFont } def
%%IncludeResource: font Courier
/Courierfnt5 vec2 /Courier LoutRecode
/fnt5 { /Courierfnt5 LoutFont } def
%%IncludeResource: font Times-Italic
/Times-Italicfnt3 vec2 /Times-Italic LoutRecode
/fnt3 { /Times-Italicfnt3 LoutFont } def
%%IncludeResource: font Symbol
/fnt4 { /Symbol LoutFont } def
%%IncludeResource: font Times-Bold
/Times-Boldfnt2 vec2 /Times-Bold LoutRecode
/fnt2 { /Times-Boldfnt2 LoutFont } def
0.0500 dup scale 10 setlinewidth
%%EndPageSetup
gsave
0 0 translate
220 fnt1 0.0 0.0 0.0 LoutSetRGBColor LoutTextureSolid 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutPageSet
grestore
gsave
0 0 translate
1.0 1.0 1.0 LoutSetRGBColor 11900 16840 0 16840 220 264 55 LoutGraphic
gsave
LoutBox gsave 1.0 1.0 1.0 LoutSetRGBColor  fill grestore 0 cm setlinewidth stroke
grestore
gsave
0 16840 translate
0.0000 rotate
0.0 0.0 0.0 LoutSetRGBColor
5724 -1565(-)m 5842(10)s 6112(-)s 9066 13430 0 13364 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore
9066 9625 66 9559 220 264 55 0 3805 LoutGr2
LoutBox  stroke
grestore
66 9146(1)m 506(De\207ne)s
1141(the)s 1460(con)s 8(v)k 3(ection)k 2464(function:)s

[ /Dest /LOUT22_1794_contents_codecomments_1 /DEST pdfmark
200 fnt5 66 8749(  def convection\(u, v, sx, sy, cx, cy, N\):)m 220 fnt1 66 8304(2)m 506(Initialize)s
1363(the)s 1709(array)s 2237(of)s 2513(size)s 220 fnt3
2932 8305(N)m 220 fnt4 3157 8298(+)m 3341(1)s 220 fnt1
3509 8304(which)m 4125(will)s 4545(hold)s 5017(the)s 5364(v)s 4(olumetric)k
6386(\210o)s 5(w)k 6847(rates)s 7334(computed)s 8281(for)s
8620(con-)s 506 8040(v)m 3(ection:)k 
[ /Dest /LOUT22_1794_contents_codecomments_2 /DEST pdfmark
200 fnt5 66 7650(      conv = np.zeros\(\(N + 1, N + 1\)\))m
220 fnt1 66 7205(3)m 506(De\207ne)s 1141(iterators:)s 
[ /Dest /LOUT22_1794_contents_codecomments_3 /DEST pdfmark
200 fnt5
66 6808(      for i in range\(1, N\))m 66 6544(          for j in range\(1, N\))m 220 fnt1 66 6097(4)m 506(F)s 3(or)k
863(element)s 220 fnt3 1612 6098(i)m 220 fnt4 1681 6091(,)m
220 fnt3 1779 6098(j)m 220 fnt1 1895 6097(\207nd)m 220 fnt4
2291 6091(D)m 154 fnt4 2546 6172(-)m 220 fnt3 2436 6098(x)m
220 fnt1 2641 6097(\212)m 200 fnt5 2861 6104(Dxm,)m 220 fnt4
3396 6091(D)m 154 fnt4 3651 6167(+)m 220 fnt3 3541 6098(x)m
220 fnt1 3747 6097(\212)m 200 fnt5 3967 6104(Dxp,)m 220 fnt1
4502 6097(and)m 220 fnt4 4873 6091(D)m 220 fnt3 5018 6098(y)m
220 fnt1 5112 6097(\212)m 200 fnt5 5332 6104(Dy)m 220 fnt1
5627 6097(from)m 6109(the)s 6428(arrays)s 7009(passed:)s 
[ /Dest /LOUT22_1794_contents_codecomments_4 /DEST pdfmark
200 fnt5
66 5655(              Dxm = sx[i] - sx[i - 1])m 66 5391(              Dxp = sx[i + 1] - sx[i])m 66 5127(              Dy = sy[j] - sy[j - 1])m 220 fnt1 66 4681(5)m
506(De\207ne)s 1141(element')s 12(s)k 2027(area)s 2446(\(FCV)s
2995(method\):)s 
[ /Dest /LOUT22_1794_contents_codecomments_5 /DEST pdfmark
200 fnt5 66 4248(              A = \(cx[i + 1] - cx[i]\) * \(sy[j] - sy[j - 1]\))m 220 fnt1 66 3803(6)m
506(Compute)s 1362(the)s 1681(v)s 5(alues)k 2282(by)s
2552(means)s 3158(of)s 3407(the)s 3726(formulae)s 4569(aforementioned:)s

[ /Dest /LOUT22_1794_contents_codecomments_6 /DEST pdfmark
200 fnt5 66 3361(              un = \( u[i, j + 1] + u[i, j] \) / 2)m 66 3097(              ue = \( u[i + 1, j] + u[i, j] \) / 2)m 66 2833(              us = \( u[i, j - 1] + u[i, j] \) / 2)m 66 2569(              uw = \( u[i - 1, j] + u[i, j] \) / 2)m
66 2041(              uFn = \( v[i, j] * Dxm + v[i + 1, j] * Dxp \) / 2)m 66 1777(              uFe = \( u[i, j] * Dy + u[i + 1, j] * Dy \) / 2)m 66 1513(              uFs = \( v[i, j - 1] * Dxm + v[i + 1, j - 1] * Dxp \) / 2)m 66 1249(              uFw = \( u[i - 1, j] * Dy + u[i, j] * Dy \) / 2)m 220 fnt1
66 804(7)m 506(Store)s 1020(results)s 1638(in)s 1861(the)s
200 fnt5 2180 811(conv)m 220 fnt1 2715 804(array:)m 
[ /Dest /LOUT22_1794_contents_codecomments_7 /DEST pdfmark
200 fnt5
66 362(              conv[i, j] = \( uFn*un + uFe*ue - uFs*us - uFw*uw \) / A)m 
grestore
220 fnt2 0 3126(Refer)m 3(ences)k 
[ /Dest /LOUT26_385_main_1 /DEST pdfmark

[ /Dest /LOUTsoria2017navierstokes /DEST pdfmark
220 fnt1
0 2710([1])m 440(Soria,)s 1071(M..)s 1542(Fundamentals)s 2889(of)s
3209(\207nite)s 3782(control)s 4525(v)s 4(olume)k 5302(spectroconsistent)s
6937(CFD)s 7355(.)s 7576(PDF)s 7976(,)s 8145(TU)s 8(AREG)k
9023(,)s 440 2446(ESEIAA)m 24(T)k 1326(,)s 1424(Carrer)s
2038(de)s 2296(Colom,)s 2992(11,)s 3310(08222)s 3910(T)s 15(errassa,)k
4734(Barcelona)s 5622(,)s 5720(July)s 6136(2017)s 6565(.)s

grestore
0 0 0 0 220 264 55 1417 -15423 LoutGr2
0 LoutMargSet
grestore

grestore

grestore

grestore

grestore

pgsave restore
showpage

%%Trailer
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Symbol
%%+ font Courier
%%DocumentSuppliedResources: procset LoutStartUp
%%+  procset LoutDiagPrependGraphic
%%+  procset LoutGraphPrependGraphic
%%+  procset LoutPiePrependGraphic
%%+  procset LoutBasicSetup
%%+ encoding vec2
%%Pages: 11
%%EOF
